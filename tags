!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ADTS_SAMPLE_INDEX_11025	omx/gstomxaacenc.c	/^  ADTS_SAMPLE_INDEX_11025,$/;"	e	enum:adts_sample_index__	file:
ADTS_SAMPLE_INDEX_12000	omx/gstomxaacenc.c	/^  ADTS_SAMPLE_INDEX_12000,$/;"	e	enum:adts_sample_index__	file:
ADTS_SAMPLE_INDEX_16000	omx/gstomxaacenc.c	/^  ADTS_SAMPLE_INDEX_16000,$/;"	e	enum:adts_sample_index__	file:
ADTS_SAMPLE_INDEX_22050	omx/gstomxaacenc.c	/^  ADTS_SAMPLE_INDEX_22050,$/;"	e	enum:adts_sample_index__	file:
ADTS_SAMPLE_INDEX_24000	omx/gstomxaacenc.c	/^  ADTS_SAMPLE_INDEX_24000,$/;"	e	enum:adts_sample_index__	file:
ADTS_SAMPLE_INDEX_32000	omx/gstomxaacenc.c	/^  ADTS_SAMPLE_INDEX_32000,$/;"	e	enum:adts_sample_index__	file:
ADTS_SAMPLE_INDEX_44100	omx/gstomxaacenc.c	/^  ADTS_SAMPLE_INDEX_44100,$/;"	e	enum:adts_sample_index__	file:
ADTS_SAMPLE_INDEX_48000	omx/gstomxaacenc.c	/^  ADTS_SAMPLE_INDEX_48000,$/;"	e	enum:adts_sample_index__	file:
ADTS_SAMPLE_INDEX_64000	omx/gstomxaacenc.c	/^  ADTS_SAMPLE_INDEX_64000,$/;"	e	enum:adts_sample_index__	file:
ADTS_SAMPLE_INDEX_7350	omx/gstomxaacenc.c	/^  ADTS_SAMPLE_INDEX_7350,$/;"	e	enum:adts_sample_index__	file:
ADTS_SAMPLE_INDEX_8000	omx/gstomxaacenc.c	/^  ADTS_SAMPLE_INDEX_8000,$/;"	e	enum:adts_sample_index__	file:
ADTS_SAMPLE_INDEX_88200	omx/gstomxaacenc.c	/^  ADTS_SAMPLE_INDEX_88200,$/;"	e	enum:adts_sample_index__	file:
ADTS_SAMPLE_INDEX_96000	omx/gstomxaacenc.c	/^  ADTS_SAMPLE_INDEX_96000 = 0x0,$/;"	e	enum:adts_sample_index__	file:
ADTS_SAMPLE_INDEX_MAX	omx/gstomxaacenc.c	/^  ADTS_SAMPLE_INDEX_MAX$/;"	e	enum:adts_sample_index__	file:
ALIGN	omx/gstomx.h	531;"	d
ALIGN_TO_4KB	omx/gstomx.h	542;"	d
APP_STATE_T	examples/egl/testegl.c	/^} APP_STATE_T;$/;"	t	typeref:struct:__anon37	file:
AllocateBuffer	omx/openmax/OMX_Component.h	/^    OMX_ERRORTYPE (*AllocateBuffer)($/;"	m	struct:OMX_COMPONENTTYPE	access:public
BUF_SHARE_METHOD_FD	omx/gstomx.h	/^    BUF_SHARE_METHOD_FD = 1,$/;"	e	enum:__anon3
BUF_SHARE_METHOD_FLUSH_BUFFER	omx/gstomx.h	/^    BUF_SHARE_METHOD_FLUSH_BUFFER = 3,$/;"	e	enum:__anon3
BUF_SHARE_METHOD_PADDR	omx/gstomx.h	/^    BUF_SHARE_METHOD_PADDR = 0,$/;"	e	enum:__anon3
BUF_SHARE_METHOD_TIZEN_BUFFER	omx/gstomx.h	/^    BUF_SHARE_METHOD_TIZEN_BUFFER = 2,$/;"	e	enum:__anon3
CHOOSE_MAX_SIZE	omx/gstomx.h	544;"	d
CP_ACCESSTYPE	omx/openmax/OMX_ContentPipe.h	/^typedef enum CP_ACCESSTYPE {$/;"	g
CP_ACCESSTYPE	omx/openmax/OMX_ContentPipe.h	/^} CP_ACCESSTYPE;$/;"	t	typeref:enum:CP_ACCESSTYPE
CP_AccessKhronosExtensions	omx/openmax/OMX_ContentPipe.h	/^    CP_AccessKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:CP_ACCESSTYPE
CP_AccessMax	omx/openmax/OMX_ContentPipe.h	/^    CP_AccessMax = 0X7FFFFFFF$/;"	e	enum:CP_ACCESSTYPE
CP_AccessRead	omx/openmax/OMX_ContentPipe.h	/^    CP_AccessRead,      $/;"	e	enum:CP_ACCESSTYPE
CP_AccessReadWrite	omx/openmax/OMX_ContentPipe.h	/^    CP_AccessReadWrite ,  $/;"	e	enum:CP_ACCESSTYPE
CP_AccessVendorStartUnused	omx/openmax/OMX_ContentPipe.h	/^    CP_AccessVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:CP_ACCESSTYPE
CP_AccessWrite	omx/openmax/OMX_ContentPipe.h	/^    CP_AccessWrite,  $/;"	e	enum:CP_ACCESSTYPE
CP_BytesAvailable	omx/openmax/OMX_ContentPipe.h	/^    CP_BytesAvailable,      	    \/** bytes requested in a CheckAvailableBytes call are now available*\/$/;"	e	enum:CP_EVENTTYPE
CP_CHECKBYTESRESULTTYPE	omx/openmax/OMX_ContentPipe.h	/^typedef enum CP_CHECKBYTESRESULTTYPE$/;"	g
CP_CHECKBYTESRESULTTYPE	omx/openmax/OMX_ContentPipe.h	/^} CP_CHECKBYTESRESULTTYPE;$/;"	t	typeref:enum:CP_CHECKBYTESRESULTTYPE
CP_CheckBytesAtEndOfStream	omx/openmax/OMX_ContentPipe.h	/^    CP_CheckBytesAtEndOfStream,         \/**< The pipe has reached the end of stream$/;"	e	enum:CP_CHECKBYTESRESULTTYPE
CP_CheckBytesInsufficientBytes	omx/openmax/OMX_ContentPipe.h	/^    CP_CheckBytesInsufficientBytes  ,     \/**< The pipe has retrieved all bytes $/;"	e	enum:CP_CHECKBYTESRESULTTYPE
CP_CheckBytesKhronosExtensions	omx/openmax/OMX_ContentPipe.h	/^    CP_CheckBytesKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:CP_CHECKBYTESRESULTTYPE
CP_CheckBytesMax	omx/openmax/OMX_ContentPipe.h	/^    CP_CheckBytesMax = 0X7FFFFFFF$/;"	e	enum:CP_CHECKBYTESRESULTTYPE
CP_CheckBytesNotReady	omx/openmax/OMX_ContentPipe.h	/^    CP_CheckBytesNotReady,              \/**< The pipe is still retrieving bytes $/;"	e	enum:CP_CHECKBYTESRESULTTYPE
CP_CheckBytesOk	omx/openmax/OMX_ContentPipe.h	/^    CP_CheckBytesOk,                    \/**< There are at least the request number $/;"	e	enum:CP_CHECKBYTESRESULTTYPE
CP_CheckBytesOutOfBuffers	omx/openmax/OMX_ContentPipe.h	/^    CP_CheckBytesOutOfBuffers,          \/**< All read\/write buffers are currently in use. *\/$/;"	e	enum:CP_CHECKBYTESRESULTTYPE
CP_CheckBytesVendorStartUnused	omx/openmax/OMX_ContentPipe.h	/^    CP_CheckBytesVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:CP_CHECKBYTESRESULTTYPE
CP_EVENTTYPE	omx/openmax/OMX_ContentPipe.h	/^typedef enum CP_EVENTTYPE{$/;"	g
CP_EVENTTYPE	omx/openmax/OMX_ContentPipe.h	/^} CP_EVENTTYPE;$/;"	t	typeref:enum:CP_EVENTTYPE
CP_EventKhronosExtensions	omx/openmax/OMX_ContentPipe.h	/^    CP_EventKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:CP_EVENTTYPE
CP_EventMax	omx/openmax/OMX_ContentPipe.h	/^    CP_EventMax = 0X7FFFFFFF$/;"	e	enum:CP_EVENTTYPE
CP_EventVendorStartUnused	omx/openmax/OMX_ContentPipe.h	/^    CP_EventVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:CP_EVENTTYPE
CP_ORIGINTYPE	omx/openmax/OMX_ContentPipe.h	/^typedef enum CP_ORIGINTYPE {$/;"	g
CP_ORIGINTYPE	omx/openmax/OMX_ContentPipe.h	/^} CP_ORIGINTYPE;$/;"	t	typeref:enum:CP_ORIGINTYPE
CP_OriginBegin	omx/openmax/OMX_ContentPipe.h	/^    CP_OriginBegin,      $/;"	e	enum:CP_ORIGINTYPE
CP_OriginCur	omx/openmax/OMX_ContentPipe.h	/^    CP_OriginCur,      $/;"	e	enum:CP_ORIGINTYPE
CP_OriginEnd	omx/openmax/OMX_ContentPipe.h	/^    CP_OriginEnd,      $/;"	e	enum:CP_ORIGINTYPE
CP_OriginKhronosExtensions	omx/openmax/OMX_ContentPipe.h	/^    CP_OriginKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:CP_ORIGINTYPE
CP_OriginMax	omx/openmax/OMX_ContentPipe.h	/^    CP_OriginMax = 0X7FFFFFFF$/;"	e	enum:CP_ORIGINTYPE
CP_OriginVendorStartUnused	omx/openmax/OMX_ContentPipe.h	/^    CP_OriginVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:CP_ORIGINTYPE
CP_Overflow	omx/openmax/OMX_ContentPipe.h	/^    CP_Overflow,  		           \/** enumeration of content pipe events sent to the client callback*\/$/;"	e	enum:CP_EVENTTYPE
CP_PIPETYPE	omx/openmax/OMX_ContentPipe.h	/^typedef struct CP_PIPETYPE$/;"	s
CP_PIPETYPE	omx/openmax/OMX_ContentPipe.h	/^} CP_PIPETYPE;$/;"	t	typeref:struct:CP_PIPETYPE
CP_PIPETYPE::CheckAvailableBytes	omx/openmax/OMX_ContentPipe.h	/^    CPresult (*CheckAvailableBytes)( CPhandle hContent, CPuint nBytesRequested, CP_CHECKBYTESRESULTTYPE *eResult );$/;"	m	struct:CP_PIPETYPE	access:public
CP_PIPETYPE::Close	omx/openmax/OMX_ContentPipe.h	/^    CPresult (*Close)( CPhandle hContent );$/;"	m	struct:CP_PIPETYPE	access:public
CP_PIPETYPE::Create	omx/openmax/OMX_ContentPipe.h	/^    CPresult (*Create)( CPhandle *hContent, CPstring szURI );$/;"	m	struct:CP_PIPETYPE	access:public
CP_PIPETYPE::GetPosition	omx/openmax/OMX_ContentPipe.h	/^    CPresult (*GetPosition)( CPhandle hContent, CPuint *pPosition);$/;"	m	struct:CP_PIPETYPE	access:public
CP_PIPETYPE::GetWriteBuffer	omx/openmax/OMX_ContentPipe.h	/^    CPresult (*GetWriteBuffer)( CPhandle hContent, CPbyte **ppBuffer, CPuint nSize);$/;"	m	struct:CP_PIPETYPE	access:public
CP_PIPETYPE::Open	omx/openmax/OMX_ContentPipe.h	/^    CPresult (*Open)( CPhandle* hContent, CPstring szURI, CP_ACCESSTYPE eAccess );$/;"	m	struct:CP_PIPETYPE	access:public
CP_PIPETYPE::Read	omx/openmax/OMX_ContentPipe.h	/^    CPresult (*Read)( CPhandle hContent, CPbyte *pData, CPuint nSize); $/;"	m	struct:CP_PIPETYPE	access:public
CP_PIPETYPE::ReadBuffer	omx/openmax/OMX_ContentPipe.h	/^    CPresult (*ReadBuffer)( CPhandle hContent, CPbyte **ppBuffer, CPuint *nSize, CPbool bForbidCopy);$/;"	m	struct:CP_PIPETYPE	access:public
CP_PIPETYPE::RegisterCallback	omx/openmax/OMX_ContentPipe.h	/^    CPresult (*RegisterCallback)( CPhandle hContent, CPresult (*ClientCallback)(CP_EVENTTYPE eEvent, CPuint iParam));$/;"	m	struct:CP_PIPETYPE	access:public
CP_PIPETYPE::ReleaseReadBuffer	omx/openmax/OMX_ContentPipe.h	/^    CPresult (*ReleaseReadBuffer)(CPhandle hContent, CPbyte *pBuffer);$/;"	m	struct:CP_PIPETYPE	access:public
CP_PIPETYPE::SetPosition	omx/openmax/OMX_ContentPipe.h	/^    CPresult (*SetPosition)( CPhandle  hContent, CPint nOffset, CP_ORIGINTYPE eOrigin);$/;"	m	struct:CP_PIPETYPE	access:public
CP_PIPETYPE::Write	omx/openmax/OMX_ContentPipe.h	/^    CPresult (*Write)( CPhandle hContent, CPbyte *data, CPuint nSize); $/;"	m	struct:CP_PIPETYPE	access:public
CP_PIPETYPE::WriteBuffer	omx/openmax/OMX_ContentPipe.h	/^    CPresult (*WriteBuffer)( CPhandle hContent, CPbyte *pBuffer, CPuint nFilledSize);$/;"	m	struct:CP_PIPETYPE	access:public
CP_PipeDisconnected	omx/openmax/OMX_ContentPipe.h	/^    CP_PipeDisconnected  ,  		    \/** enumeration of content pipe events sent to the client callback*\/$/;"	e	enum:CP_EVENTTYPE
CPbool	omx/openmax/OMX_ContentPipe.h	/^typedef OMX_BOOL   CPbool;$/;"	t
CPbyte	omx/openmax/OMX_ContentPipe.h	/^typedef char       CPbyte;  $/;"	t
CPhandle	omx/openmax/OMX_ContentPipe.h	/^typedef void *     CPhandle;$/;"	t
CPint	omx/openmax/OMX_ContentPipe.h	/^typedef OMX_S32    CPint;  $/;"	t
CPresult	omx/openmax/OMX_ContentPipe.h	/^typedef OMX_U32    CPresult;$/;"	t
CPstring	omx/openmax/OMX_ContentPipe.h	/^typedef char *     CPstring;  $/;"	t
CPuint	omx/openmax/OMX_ContentPipe.h	/^typedef OMX_U32    CPuint;$/;"	t
CheckAvailableBytes	omx/openmax/OMX_ContentPipe.h	/^    CPresult (*CheckAvailableBytes)( CPhandle hContent, CPuint nBytesRequested, CP_CHECKBYTESRESULTTYPE *eResult );$/;"	m	struct:CP_PIPETYPE	access:public
Close	omx/openmax/OMX_ContentPipe.h	/^    CPresult (*Close)( CPhandle hContent );$/;"	m	struct:CP_PIPETYPE	access:public
ComponentDeInit	omx/openmax/OMX_Component.h	/^    OMX_ERRORTYPE (*ComponentDeInit)($/;"	m	struct:OMX_COMPONENTTYPE	access:public
ComponentRoleEnum	omx/openmax/OMX_Component.h	/^    OMX_ERRORTYPE (*ComponentRoleEnum)($/;"	m	struct:OMX_COMPONENTTYPE	access:public
ComponentTunnelRequest	omx/openmax/OMX_Component.h	/^    OMX_ERRORTYPE (*ComponentTunnelRequest)($/;"	m	struct:OMX_COMPONENTTYPE	access:public
Create	omx/openmax/OMX_ContentPipe.h	/^    CPresult (*Create)( CPhandle *hContent, CPstring szURI );$/;"	m	struct:CP_PIPETYPE	access:public
DEBUG_INIT	omx/gstomxaacdec.c	43;"	d	file:
DEBUG_INIT	omx/gstomxaacenc.c	100;"	d	file:
DEBUG_INIT	omx/gstomxamrdec.c	44;"	d	file:
DEBUG_INIT	omx/gstomxanalogaudiosink.c	35;"	d	file:
DEBUG_INIT	omx/gstomxaudiodec.c	62;"	d	file:
DEBUG_INIT	omx/gstomxaudioenc.c	59;"	d	file:
DEBUG_INIT	omx/gstomxaudiosink.c	37;"	d	file:
DEBUG_INIT	omx/gstomxbufferpool.c	205;"	d	file:
DEBUG_INIT	omx/gstomxh263dec.c	45;"	d	file:
DEBUG_INIT	omx/gstomxh263enc.c	45;"	d	file:
DEBUG_INIT	omx/gstomxh264dec.c	45;"	d	file:
DEBUG_INIT	omx/gstomxh264enc.c	70;"	d	file:
DEBUG_INIT	omx/gstomxhdmiaudiosink.c	35;"	d	file:
DEBUG_INIT	omx/gstomxmjpegdec.c	45;"	d	file:
DEBUG_INIT	omx/gstomxmp3dec.c	43;"	d	file:
DEBUG_INIT	omx/gstomxmpeg2videodec.c	45;"	d	file:
DEBUG_INIT	omx/gstomxmpeg4videodec.c	45;"	d	file:
DEBUG_INIT	omx/gstomxmpeg4videoenc.c	45;"	d	file:
DEBUG_INIT	omx/gstomxtheoradec.c	48;"	d	file:
DEBUG_INIT	omx/gstomxvideodec.c	92;"	d	file:
DEBUG_INIT	omx/gstomxvideoenc.c	115;"	d	file:
DEBUG_INIT	omx/gstomxvp8dec.c	45;"	d	file:
DEBUG_INIT	omx/gstomxwmvdec.c	45;"	d	file:
DEFAULT_AAC_ER_TOOLS	omx/gstomxaacenc.c	54;"	d	file:
DEFAULT_AAC_TOOLS	omx/gstomxaacenc.c	53;"	d	file:
DEFAULT_BITRATE	omx/gstomxaacenc.c	52;"	d	file:
DEFAULT_HACKS	omx/gstomx.c	2611;"	d	file:
DEFAULT_HACKS	omx/gstomx.c	2613;"	d	file:
DEFAULT_PROP_MUTE	omx/gstomxaudiosink.c	41;"	d	file:
DEFAULT_PROP_VOLUME	omx/gstomxaudiosink.c	42;"	d	file:
DIV_ROUND_UP	omx/gstomx.h	543;"	d
EmptyBufferDone	omx/gstomx.c	/^EmptyBufferDone (OMX_HANDLETYPE hComponent, OMX_PTR pAppData,$/;"	f	file:	signature:(OMX_HANDLETYPE hComponent, OMX_PTR pAppData, OMX_BUFFERHEADERTYPE * pBuffer)
EmptyBufferDone	omx/openmax/OMX_Core.h	/^    OMX_ERRORTYPE (*EmptyBufferDone)($/;"	m	struct:OMX_CALLBACKTYPE	access:public
EmptyThisBuffer	omx/openmax/OMX_Component.h	/^    OMX_ERRORTYPE (*EmptyThisBuffer)($/;"	m	struct:OMX_COMPONENTTYPE	access:public
EnableGemBuffersParams	omx/gstomx.h	/^typedef struct _EnableGemBuffersParams EnableGemBuffersParams;$/;"	t	typeref:struct:_EnableGemBuffersParams
ErrMap	omx/openmax/OMX_Video.h	/^    OMX_U8  ErrMap[1];             \/* Error map hint *\/$/;"	m	struct:OMX_CONFIG_MACROBLOCKERRORMAPTYPE	access:public
EventHandler	omx/gstomx.c	/^EventHandler (OMX_HANDLETYPE hComponent, OMX_PTR pAppData, OMX_EVENTTYPE eEvent,$/;"	f	file:	signature:(OMX_HANDLETYPE hComponent, OMX_PTR pAppData, OMX_EVENTTYPE eEvent, OMX_U32 nData1, OMX_U32 nData2, OMX_PTR pEventData)
EventHandler	omx/openmax/OMX_Core.h	/^   OMX_ERRORTYPE (*EventHandler)($/;"	m	struct:OMX_CALLBACKTYPE	access:public
FillBufferDone	omx/gstomx.c	/^FillBufferDone (OMX_HANDLETYPE hComponent, OMX_PTR pAppData,$/;"	f	file:	signature:(OMX_HANDLETYPE hComponent, OMX_PTR pAppData, OMX_BUFFERHEADERTYPE * pBuffer)
FillBufferDone	omx/openmax/OMX_Core.h	/^    OMX_ERRORTYPE (*FillBufferDone)($/;"	m	struct:OMX_CALLBACKTYPE	access:public
FillThisBuffer	omx/openmax/OMX_Component.h	/^    OMX_ERRORTYPE (*FillThisBuffer)($/;"	m	struct:OMX_COMPONENTTYPE	access:public
FreeBuffer	omx/openmax/OMX_Component.h	/^    OMX_ERRORTYPE (*FreeBuffer)($/;"	m	struct:OMX_COMPONENTTYPE	access:public
GGetTypeFunction	omx/gstomx.c	/^typedef GType (*GGetTypeFunction) (void);$/;"	t	file:
GOMX_VENDOR_DEFAULT	omx/gstomx.h	/^    GOMX_VENDOR_DEFAULT,$/;"	e	enum:GOmxVendor
GOMX_VENDOR_QCT	omx/gstomx.h	/^    GOMX_VENDOR_QCT,$/;"	e	enum:GOmxVendor
GOMX_VENDOR_SLSI_EXYNOS	omx/gstomx.h	/^    GOMX_VENDOR_SLSI_EXYNOS,$/;"	e	enum:GOmxVendor
GOMX_VENDOR_SLSI_SEC	omx/gstomx.h	/^    GOMX_VENDOR_SLSI_SEC,$/;"	e	enum:GOmxVendor
GOMX_VENDOR_SPRD	omx/gstomx.h	/^    GOMX_VENDOR_SPRD$/;"	e	enum:GOmxVendor
GOmxVendor	omx/gstomx.h	/^enum GOmxVendor$/;"	g
GOmxVendor	omx/gstomx.h	/^typedef enum GOmxVendor GOmxVendor; \/* check omx vender *\/$/;"	t	typeref:enum:GOmxVendor
GST_CAT_DEFAULT	omx/gstomx.c	50;"	d	file:
GST_CAT_DEFAULT	omx/gstomxaacdec.c	29;"	d	file:
GST_CAT_DEFAULT	omx/gstomxaacenc.c	30;"	d	file:
GST_CAT_DEFAULT	omx/gstomxamrdec.c	30;"	d	file:
GST_CAT_DEFAULT	omx/gstomxanalogaudiosink.c	31;"	d	file:
GST_CAT_DEFAULT	omx/gstomxaudiodec.c	35;"	d	file:
GST_CAT_DEFAULT	omx/gstomxaudioenc.c	31;"	d	file:
GST_CAT_DEFAULT	omx/gstomxaudiosink.c	35;"	d	file:
GST_CAT_DEFAULT	omx/gstomxbufferpool.c	30;"	d	file:
GST_CAT_DEFAULT	omx/gstomxh263dec.c	30;"	d	file:
GST_CAT_DEFAULT	omx/gstomxh263enc.c	30;"	d	file:
GST_CAT_DEFAULT	omx/gstomxh264dec.c	30;"	d	file:
GST_CAT_DEFAULT	omx/gstomxh264enc.c	35;"	d	file:
GST_CAT_DEFAULT	omx/gstomxhdmiaudiosink.c	31;"	d	file:
GST_CAT_DEFAULT	omx/gstomxmjpegdec.c	30;"	d	file:
GST_CAT_DEFAULT	omx/gstomxmp3dec.c	29;"	d	file:
GST_CAT_DEFAULT	omx/gstomxmpeg2videodec.c	30;"	d	file:
GST_CAT_DEFAULT	omx/gstomxmpeg4videodec.c	30;"	d	file:
GST_CAT_DEFAULT	omx/gstomxmpeg4videoenc.c	30;"	d	file:
GST_CAT_DEFAULT	omx/gstomxtheoradec.c	30;"	d	file:
GST_CAT_DEFAULT	omx/gstomxvideo.c	32;"	d	file:
GST_CAT_DEFAULT	omx/gstomxvideodec.c	56;"	d	file:
GST_CAT_DEFAULT	omx/gstomxvideoenc.c	38;"	d	file:
GST_CAT_DEFAULT	omx/gstomxvp8dec.c	30;"	d	file:
GST_CAT_DEFAULT	omx/gstomxwmvdec.c	30;"	d	file:
GST_IS_OMX_AAC_DEC	omx/gstomxaacdec.h	36;"	d
GST_IS_OMX_AAC_DEC_CLASS	omx/gstomxaacdec.h	38;"	d
GST_IS_OMX_AAC_ENC	omx/gstomxaacenc.h	37;"	d
GST_IS_OMX_AAC_ENC_CLASS	omx/gstomxaacenc.h	39;"	d
GST_IS_OMX_AMR_DEC	omx/gstomxamrdec.h	36;"	d
GST_IS_OMX_AMR_DEC_CLASS	omx/gstomxamrdec.h	38;"	d
GST_IS_OMX_ANALOG_AUDIO_SINK	omx/gstomxanalogaudiosink.h	38;"	d
GST_IS_OMX_ANALOG_AUDIO_SINK_CLASS	omx/gstomxanalogaudiosink.h	40;"	d
GST_IS_OMX_AUDIO_DEC	omx/gstomxaudiodec.h	43;"	d
GST_IS_OMX_AUDIO_DEC_CLASS	omx/gstomxaudiodec.h	45;"	d
GST_IS_OMX_AUDIO_ENC	omx/gstomxaudioenc.h	40;"	d
GST_IS_OMX_AUDIO_ENC_CLASS	omx/gstomxaudioenc.h	42;"	d
GST_IS_OMX_AUDIO_SINK	omx/gstomxaudiosink.h	44;"	d
GST_IS_OMX_AUDIO_SINK_CLASS	omx/gstomxaudiosink.h	46;"	d
GST_IS_OMX_BUFFER_POOL	omx/gstomxbufferpool.h	40;"	d
GST_IS_OMX_H263_DEC	omx/gstomxh263dec.h	37;"	d
GST_IS_OMX_H263_DEC_CLASS	omx/gstomxh263dec.h	39;"	d
GST_IS_OMX_H263_ENC	omx/gstomxh263enc.h	37;"	d
GST_IS_OMX_H263_ENC_CLASS	omx/gstomxh263enc.h	39;"	d
GST_IS_OMX_H264_DEC	omx/gstomxh264dec.h	37;"	d
GST_IS_OMX_H264_DEC_CLASS	omx/gstomxh264dec.h	39;"	d
GST_IS_OMX_H264_ENC	omx/gstomxh264enc.h	37;"	d
GST_IS_OMX_H264_ENC_CLASS	omx/gstomxh264enc.h	39;"	d
GST_IS_OMX_HDMI_AUDIO_SINK	omx/gstomxhdmiaudiosink.h	38;"	d
GST_IS_OMX_HDMI_AUDIO_SINK_CLASS	omx/gstomxhdmiaudiosink.h	40;"	d
GST_IS_OMX_MEMORY_ALLOCATOR	omx/gstomxbufferpool.c	101;"	d	file:
GST_IS_OMX_MJPEG_DEC	omx/gstomxmjpegdec.h	37;"	d
GST_IS_OMX_MJPEG_DEC_CLASS	omx/gstomxmjpegdec.h	39;"	d
GST_IS_OMX_MP3_DEC	omx/gstomxmp3dec.h	36;"	d
GST_IS_OMX_MP3_DEC_CLASS	omx/gstomxmp3dec.h	38;"	d
GST_IS_OMX_MPEG2_VIDEO_DEC	omx/gstomxmpeg2videodec.h	37;"	d
GST_IS_OMX_MPEG2_VIDEO_DEC_CLASS	omx/gstomxmpeg2videodec.h	39;"	d
GST_IS_OMX_MPEG4_VIDEO_DEC	omx/gstomxmpeg4videodec.h	37;"	d
GST_IS_OMX_MPEG4_VIDEO_DEC_CLASS	omx/gstomxmpeg4videodec.h	39;"	d
GST_IS_OMX_MPEG4_VIDEO_ENC	omx/gstomxmpeg4videoenc.h	37;"	d
GST_IS_OMX_MPEG4_VIDEO_ENC_CLASS	omx/gstomxmpeg4videoenc.h	39;"	d
GST_IS_OMX_THEORA_DEC	omx/gstomxtheoradec.h	37;"	d
GST_IS_OMX_THEORA_DEC_CLASS	omx/gstomxtheoradec.h	39;"	d
GST_IS_OMX_VIDEO_DEC	omx/gstomxvideodec.h	60;"	d
GST_IS_OMX_VIDEO_DEC_CLASS	omx/gstomxvideodec.h	62;"	d
GST_IS_OMX_VIDEO_ENC	omx/gstomxvideoenc.h	41;"	d
GST_IS_OMX_VIDEO_ENC_CLASS	omx/gstomxvideoenc.h	43;"	d
GST_IS_OMX_VP8_DEC	omx/gstomxvp8dec.h	37;"	d
GST_IS_OMX_VP8_DEC_CLASS	omx/gstomxvp8dec.h	39;"	d
GST_IS_OMX_WMV_DEC	omx/gstomxwmvdec.h	37;"	d
GST_IS_OMX_WMV_DEC_CLASS	omx/gstomxwmvdec.h	39;"	d
GST_OMX_AAC_DEC	omx/gstomxaacdec.h	30;"	d
GST_OMX_AAC_DEC_CLASS	omx/gstomxaacdec.h	32;"	d
GST_OMX_AAC_DEC_GET_CLASS	omx/gstomxaacdec.h	34;"	d
GST_OMX_AAC_ENC	omx/gstomxaacenc.h	31;"	d
GST_OMX_AAC_ENC_CLASS	omx/gstomxaacenc.h	33;"	d
GST_OMX_AAC_ENC_GET_CLASS	omx/gstomxaacenc.h	35;"	d
GST_OMX_ACQUIRE_BUFFER_EOS	omx/gstomx.h	/^  GST_OMX_ACQUIRE_BUFFER_EOS,$/;"	e	enum:__anon6
GST_OMX_ACQUIRE_BUFFER_ERROR	omx/gstomx.h	/^  GST_OMX_ACQUIRE_BUFFER_ERROR$/;"	e	enum:__anon6
GST_OMX_ACQUIRE_BUFFER_FLUSHING	omx/gstomx.h	/^  GST_OMX_ACQUIRE_BUFFER_FLUSHING,$/;"	e	enum:__anon6
GST_OMX_ACQUIRE_BUFFER_OK	omx/gstomx.h	/^  GST_OMX_ACQUIRE_BUFFER_OK = 0,$/;"	e	enum:__anon6
GST_OMX_ACQUIRE_BUFFER_RECONFIGURE	omx/gstomx.h	/^  GST_OMX_ACQUIRE_BUFFER_RECONFIGURE,$/;"	e	enum:__anon6
GST_OMX_AMR_DEC	omx/gstomxamrdec.h	30;"	d
GST_OMX_AMR_DEC_CLASS	omx/gstomxamrdec.h	32;"	d
GST_OMX_AMR_DEC_GET_CLASS	omx/gstomxamrdec.h	34;"	d
GST_OMX_ANALOG_AUDIO_SINK	omx/gstomxanalogaudiosink.h	32;"	d
GST_OMX_ANALOG_AUDIO_SINK_CLASS	omx/gstomxanalogaudiosink.h	34;"	d
GST_OMX_ANALOG_AUDIO_SINK_GET_CLASS	omx/gstomxanalogaudiosink.h	36;"	d
GST_OMX_AUDIO_DEC	omx/gstomxaudiodec.h	37;"	d
GST_OMX_AUDIO_DEC_CLASS	omx/gstomxaudiodec.h	39;"	d
GST_OMX_AUDIO_DEC_GET_CLASS	omx/gstomxaudiodec.h	41;"	d
GST_OMX_AUDIO_ENC	omx/gstomxaudioenc.h	34;"	d
GST_OMX_AUDIO_ENC_CLASS	omx/gstomxaudioenc.h	36;"	d
GST_OMX_AUDIO_ENC_GET_CLASS	omx/gstomxaudioenc.h	38;"	d
GST_OMX_AUDIO_SINK	omx/gstomxaudiosink.h	38;"	d
GST_OMX_AUDIO_SINK_CAST	omx/gstomxaudiosink.h	48;"	d
GST_OMX_AUDIO_SINK_CLASS	omx/gstomxaudiosink.h	40;"	d
GST_OMX_AUDIO_SINK_GET_CLASS	omx/gstomxaudiosink.h	42;"	d
GST_OMX_AUDIO_SINK_GET_LOCK	omx/gstomxaudiosink.h	50;"	d
GST_OMX_AUDIO_SINK_LOCK	omx/gstomxaudiosink.h	51;"	d
GST_OMX_AUDIO_SINK_UNLOCK	omx/gstomxaudiosink.h	52;"	d
GST_OMX_BUFFER_POOL	omx/gstomxbufferpool.h	38;"	d
GST_OMX_COMPONENT_TYPE_FILTER	omx/gstomx.h	/^  GST_OMX_COMPONENT_TYPE_FILTER$/;"	e	enum:__anon8
GST_OMX_COMPONENT_TYPE_SINK	omx/gstomx.h	/^  GST_OMX_COMPONENT_TYPE_SINK,$/;"	e	enum:__anon8
GST_OMX_COMPONENT_TYPE_SOURCE	omx/gstomx.h	/^  GST_OMX_COMPONENT_TYPE_SOURCE,$/;"	e	enum:__anon8
GST_OMX_H263_DEC	omx/gstomxh263dec.h	31;"	d
GST_OMX_H263_DEC_CLASS	omx/gstomxh263dec.h	33;"	d
GST_OMX_H263_DEC_GET_CLASS	omx/gstomxh263dec.h	35;"	d
GST_OMX_H263_ENC	omx/gstomxh263enc.h	31;"	d
GST_OMX_H263_ENC_CLASS	omx/gstomxh263enc.h	33;"	d
GST_OMX_H263_ENC_GET_CLASS	omx/gstomxh263enc.h	35;"	d
GST_OMX_H264_DEC	omx/gstomxh264dec.h	31;"	d
GST_OMX_H264_DEC_CLASS	omx/gstomxh264dec.h	33;"	d
GST_OMX_H264_DEC_GET_CLASS	omx/gstomxh264dec.h	35;"	d
GST_OMX_H264_ENC	omx/gstomxh264enc.h	31;"	d
GST_OMX_H264_ENC_CLASS	omx/gstomxh264enc.h	33;"	d
GST_OMX_H264_ENC_GET_CLASS	omx/gstomxh264enc.h	35;"	d
GST_OMX_H264_VIDEO_ENC_INLINE_SPS_PPS_HEADERS_DEFAULT	omx/gstomxh264enc.c	62;"	d	file:
GST_OMX_H264_VIDEO_ENC_INTERVAL_OF_CODING_INTRA_FRAMES_DEFAULT	omx/gstomxh264enc.c	65;"	d	file:
GST_OMX_H264_VIDEO_ENC_PERIODICITY_OF_IDR_FRAMES_DEFAULT	omx/gstomxh264enc.c	64;"	d	file:
GST_OMX_HACK_DRAIN_MAY_NOT_RETURN	omx/gstomx.h	114;"	d
GST_OMX_HACK_EVENT_PORT_SETTINGS_CHANGED_NDATA_PARAMETER_SWAP	omx/gstomx.h	87;"	d
GST_OMX_HACK_EVENT_PORT_SETTINGS_CHANGED_PORT_0_TO_1	omx/gstomx.h	91;"	d
GST_OMX_HACK_NO_COMPONENT_RECONFIGURE	omx/gstomx.h	104;"	d
GST_OMX_HACK_NO_COMPONENT_ROLE	omx/gstomx.h	119;"	d
GST_OMX_HACK_NO_DISABLE_OUTPORT	omx/gstomx.h	124;"	d
GST_OMX_HACK_NO_EMPTY_EOS_BUFFER	omx/gstomx.h	109;"	d
GST_OMX_HACK_SYNCFRAME_FLAG_NOT_USED	omx/gstomx.h	100;"	d
GST_OMX_HACK_VIDEO_FRAMERATE_INTEGER	omx/gstomx.h	95;"	d
GST_OMX_HDMI_AUDIO_SINK	omx/gstomxhdmiaudiosink.h	32;"	d
GST_OMX_HDMI_AUDIO_SINK_CLASS	omx/gstomxhdmiaudiosink.h	34;"	d
GST_OMX_HDMI_AUDIO_SINK_GET_CLASS	omx/gstomxhdmiaudiosink.h	36;"	d
GST_OMX_INIT_STRUCT	omx/gstomx.h	72;"	d
GST_OMX_MEMORY_TYPE	omx/gstomxbufferpool.c	53;"	d	file:
GST_OMX_MESSAGE_BUFFER_DONE	omx/gstomx.h	/^  GST_OMX_MESSAGE_BUFFER_DONE,$/;"	e	enum:__anon7
GST_OMX_MESSAGE_BUFFER_FLAG	omx/gstomx.h	/^  GST_OMX_MESSAGE_BUFFER_FLAG,$/;"	e	enum:__anon7
GST_OMX_MESSAGE_ERROR	omx/gstomx.h	/^  GST_OMX_MESSAGE_ERROR,$/;"	e	enum:__anon7
GST_OMX_MESSAGE_FLUSH	omx/gstomx.h	/^  GST_OMX_MESSAGE_FLUSH,$/;"	e	enum:__anon7
GST_OMX_MESSAGE_PORT_ENABLE	omx/gstomx.h	/^  GST_OMX_MESSAGE_PORT_ENABLE,$/;"	e	enum:__anon7
GST_OMX_MESSAGE_PORT_SETTINGS_CHANGED	omx/gstomx.h	/^  GST_OMX_MESSAGE_PORT_SETTINGS_CHANGED,$/;"	e	enum:__anon7
GST_OMX_MESSAGE_STATE_SET	omx/gstomx.h	/^  GST_OMX_MESSAGE_STATE_SET,$/;"	e	enum:__anon7
GST_OMX_MJPEG_DEC	omx/gstomxmjpegdec.h	31;"	d
GST_OMX_MJPEG_DEC_CLASS	omx/gstomxmjpegdec.h	33;"	d
GST_OMX_MJPEG_DEC_GET_CLASS	omx/gstomxmjpegdec.h	35;"	d
GST_OMX_MP3_DEC	omx/gstomxmp3dec.h	30;"	d
GST_OMX_MP3_DEC_CLASS	omx/gstomxmp3dec.h	32;"	d
GST_OMX_MP3_DEC_GET_CLASS	omx/gstomxmp3dec.h	34;"	d
GST_OMX_MPEG2_VIDEO_DEC	omx/gstomxmpeg2videodec.h	31;"	d
GST_OMX_MPEG2_VIDEO_DEC_CLASS	omx/gstomxmpeg2videodec.h	33;"	d
GST_OMX_MPEG2_VIDEO_DEC_GET_CLASS	omx/gstomxmpeg2videodec.h	35;"	d
GST_OMX_MPEG4_VIDEO_DEC	omx/gstomxmpeg4videodec.h	31;"	d
GST_OMX_MPEG4_VIDEO_DEC_CLASS	omx/gstomxmpeg4videodec.h	33;"	d
GST_OMX_MPEG4_VIDEO_DEC_GET_CLASS	omx/gstomxmpeg4videodec.h	35;"	d
GST_OMX_MPEG4_VIDEO_ENC	omx/gstomxmpeg4videoenc.h	31;"	d
GST_OMX_MPEG4_VIDEO_ENC_CLASS	omx/gstomxmpeg4videoenc.h	33;"	d
GST_OMX_MPEG4_VIDEO_ENC_GET_CLASS	omx/gstomxmpeg4videoenc.h	35;"	d
GST_OMX_THEORA_DEC	omx/gstomxtheoradec.h	31;"	d
GST_OMX_THEORA_DEC_CLASS	omx/gstomxtheoradec.h	33;"	d
GST_OMX_THEORA_DEC_GET_CLASS	omx/gstomxtheoradec.h	35;"	d
GST_OMX_VIDEO_DEC	omx/gstomxvideodec.h	54;"	d
GST_OMX_VIDEO_DEC_CLASS	omx/gstomxvideodec.h	56;"	d
GST_OMX_VIDEO_DEC_GET_CLASS	omx/gstomxvideodec.h	58;"	d
GST_OMX_VIDEO_ENC	omx/gstomxvideoenc.h	35;"	d
GST_OMX_VIDEO_ENC_CLASS	omx/gstomxvideoenc.h	37;"	d
GST_OMX_VIDEO_ENC_CONTROL_RATE_DEFAULT	omx/gstomxvideoenc.c	107;"	d	file:
GST_OMX_VIDEO_ENC_GET_CLASS	omx/gstomxvideoenc.h	39;"	d
GST_OMX_VIDEO_ENC_QUANT_B_FRAMES_DEFAULT	omx/gstomxvideoenc.c	111;"	d	file:
GST_OMX_VIDEO_ENC_QUANT_I_FRAMES_DEFAULT	omx/gstomxvideoenc.c	109;"	d	file:
GST_OMX_VIDEO_ENC_QUANT_P_FRAMES_DEFAULT	omx/gstomxvideoenc.c	110;"	d	file:
GST_OMX_VIDEO_ENC_TARGET_BITRATE_DEFAULT	omx/gstomxvideoenc.c	108;"	d	file:
GST_OMX_VP8_DEC	omx/gstomxvp8dec.h	31;"	d
GST_OMX_VP8_DEC_CLASS	omx/gstomxvp8dec.h	33;"	d
GST_OMX_VP8_DEC_GET_CLASS	omx/gstomxvp8dec.h	35;"	d
GST_OMX_WMV_DEC	omx/gstomxwmvdec.h	31;"	d
GST_OMX_WMV_DEC_CLASS	omx/gstomxwmvdec.h	33;"	d
GST_OMX_WMV_DEC_GET_CLASS	omx/gstomxwmvdec.h	35;"	d
GST_PLAY_FLAG_AUDIO	examples/egl/testegl.c	/^  GST_PLAY_FLAG_AUDIO = (1 << 1),$/;"	e	enum:__anon38	file:
GST_PLAY_FLAG_BUFFERING	examples/egl/testegl.c	/^  GST_PLAY_FLAG_BUFFERING = (1 << 8),$/;"	e	enum:__anon38	file:
GST_PLAY_FLAG_DEINTERLACE	examples/egl/testegl.c	/^  GST_PLAY_FLAG_DEINTERLACE = (1 << 9),$/;"	e	enum:__anon38	file:
GST_PLAY_FLAG_DOWNLOAD	examples/egl/testegl.c	/^  GST_PLAY_FLAG_DOWNLOAD = (1 << 7),$/;"	e	enum:__anon38	file:
GST_PLAY_FLAG_NATIVE_AUDIO	examples/egl/testegl.c	/^  GST_PLAY_FLAG_NATIVE_AUDIO = (1 << 5),$/;"	e	enum:__anon38	file:
GST_PLAY_FLAG_NATIVE_VIDEO	examples/egl/testegl.c	/^  GST_PLAY_FLAG_NATIVE_VIDEO = (1 << 6),$/;"	e	enum:__anon38	file:
GST_PLAY_FLAG_SOFT_COLORBALANCE	examples/egl/testegl.c	/^  GST_PLAY_FLAG_SOFT_COLORBALANCE = (1 << 10)$/;"	e	enum:__anon38	file:
GST_PLAY_FLAG_SOFT_VOLUME	examples/egl/testegl.c	/^  GST_PLAY_FLAG_SOFT_VOLUME = (1 << 4),$/;"	e	enum:__anon38	file:
GST_PLAY_FLAG_TEXT	examples/egl/testegl.c	/^  GST_PLAY_FLAG_TEXT = (1 << 2),$/;"	e	enum:__anon38	file:
GST_PLAY_FLAG_VIDEO	examples/egl/testegl.c	/^  GST_PLAY_FLAG_VIDEO = (1 << 0),$/;"	e	enum:__anon38	file:
GST_PLAY_FLAG_VIS	examples/egl/testegl.c	/^  GST_PLAY_FLAG_VIS = (1 << 3),$/;"	e	enum:__anon38	file:
GST_TYPE_OMX_AAC_DEC	omx/gstomxaacdec.h	28;"	d
GST_TYPE_OMX_AAC_ENC	omx/gstomxaacenc.h	29;"	d
GST_TYPE_OMX_AAC_ER_TOOLS	omx/gstomxaacenc.c	78;"	d	file:
GST_TYPE_OMX_AAC_TOOLS	omx/gstomxaacenc.c	56;"	d	file:
GST_TYPE_OMX_AMR_DEC	omx/gstomxamrdec.h	28;"	d
GST_TYPE_OMX_ANALOG_AUDIO_SINK	omx/gstomxanalogaudiosink.h	30;"	d
GST_TYPE_OMX_AUDIO_DEC	omx/gstomxaudiodec.h	35;"	d
GST_TYPE_OMX_AUDIO_ENC	omx/gstomxaudioenc.h	32;"	d
GST_TYPE_OMX_AUDIO_SINK	omx/gstomxaudiosink.h	36;"	d
GST_TYPE_OMX_BUFFER_POOL	omx/gstomxbufferpool.h	36;"	d
GST_TYPE_OMX_H263_DEC	omx/gstomxh263dec.h	29;"	d
GST_TYPE_OMX_H263_ENC	omx/gstomxh263enc.h	29;"	d
GST_TYPE_OMX_H264_DEC	omx/gstomxh264dec.h	29;"	d
GST_TYPE_OMX_H264_ENC	omx/gstomxh264enc.h	29;"	d
GST_TYPE_OMX_HDMI_AUDIO_SINK	omx/gstomxhdmiaudiosink.h	30;"	d
GST_TYPE_OMX_MEMORY_ALLOCATOR	omx/gstomxbufferpool.c	100;"	d	file:
GST_TYPE_OMX_MJPEG_DEC	omx/gstomxmjpegdec.h	29;"	d
GST_TYPE_OMX_MP3_DEC	omx/gstomxmp3dec.h	28;"	d
GST_TYPE_OMX_MPEG2_VIDEO_DEC	omx/gstomxmpeg2videodec.h	29;"	d
GST_TYPE_OMX_MPEG4_VIDEO_DEC	omx/gstomxmpeg4videodec.h	29;"	d
GST_TYPE_OMX_MPEG4_VIDEO_ENC	omx/gstomxmpeg4videoenc.h	29;"	d
GST_TYPE_OMX_THEORA_DEC	omx/gstomxtheoradec.h	29;"	d
GST_TYPE_OMX_VIDEO_DEC	omx/gstomxvideodec.h	52;"	d
GST_TYPE_OMX_VIDEO_ENC	omx/gstomxvideoenc.h	33;"	d
GST_TYPE_OMX_VIDEO_ENC_CONTROL_RATE	omx/gstomxvideoenc.c	40;"	d	file:
GST_TYPE_OMX_VP8_DEC	omx/gstomxvp8dec.h	29;"	d
GST_TYPE_OMX_WMV_DEC	omx/gstomxwmvdec.h	29;"	d
GST_USE_UNSTABLE_API	examples/egl/testegl.c	60;"	d	file:
GetComponentVersion	omx/openmax/OMX_Component.h	/^    OMX_ERRORTYPE (*GetComponentVersion)($/;"	m	struct:OMX_COMPONENTTYPE	access:public
GetConfig	omx/openmax/OMX_Component.h	/^    OMX_ERRORTYPE (*GetConfig)($/;"	m	struct:OMX_COMPONENTTYPE	access:public
GetExtensionIndex	omx/openmax/OMX_Component.h	/^    OMX_ERRORTYPE (*GetExtensionIndex)($/;"	m	struct:OMX_COMPONENTTYPE	access:public
GetParameter	omx/openmax/OMX_Component.h	/^    OMX_ERRORTYPE (*GetParameter)($/;"	m	struct:OMX_COMPONENTTYPE	access:public
GetPosition	omx/openmax/OMX_ContentPipe.h	/^    CPresult (*GetPosition)( CPhandle hContent, CPuint *pPosition);$/;"	m	struct:CP_PIPETYPE	access:public
GetState	omx/openmax/OMX_Component.h	/^    OMX_ERRORTYPE (*GetState)($/;"	m	struct:OMX_COMPONENTTYPE	access:public
GetWriteBuffer	omx/openmax/OMX_ContentPipe.h	/^    CPresult (*GetWriteBuffer)( CPhandle hContent, CPbyte **ppBuffer, CPuint nSize);$/;"	m	struct:CP_PIPETYPE	access:public
GstGLMatrix	examples/egl/testegl.c	/^} GstGLMatrix;$/;"	t	typeref:struct:__anon36	file:
GstOMXAACDec	omx/gstomxaacdec.h	/^typedef struct _GstOMXAACDec GstOMXAACDec;$/;"	t	typeref:struct:_GstOMXAACDec
GstOMXAACDecClass	omx/gstomxaacdec.h	/^typedef struct _GstOMXAACDecClass GstOMXAACDecClass;$/;"	t	typeref:struct:_GstOMXAACDecClass
GstOMXAACEnc	omx/gstomxaacenc.h	/^typedef struct _GstOMXAACEnc GstOMXAACEnc;$/;"	t	typeref:struct:_GstOMXAACEnc
GstOMXAACEncClass	omx/gstomxaacenc.h	/^typedef struct _GstOMXAACEncClass GstOMXAACEncClass;$/;"	t	typeref:struct:_GstOMXAACEncClass
GstOMXAMRDec	omx/gstomxamrdec.h	/^typedef struct _GstOMXAMRDec GstOMXAMRDec;$/;"	t	typeref:struct:_GstOMXAMRDec
GstOMXAMRDecClass	omx/gstomxamrdec.h	/^typedef struct _GstOMXAMRDecClass GstOMXAMRDecClass;$/;"	t	typeref:struct:_GstOMXAMRDecClass
GstOMXAcquireBufferReturn	omx/gstomx.h	/^} GstOMXAcquireBufferReturn;$/;"	t	typeref:enum:__anon6
GstOMXAnalogAudioSink	omx/gstomxanalogaudiosink.h	/^typedef struct _GstOMXAnalogAudioSink GstOMXAnalogAudioSink;$/;"	t	typeref:struct:_GstOMXAnalogAudioSink
GstOMXAnalogAudioSinkClass	omx/gstomxanalogaudiosink.h	/^typedef struct _GstOMXAnalogAudioSinkClass GstOMXAnalogAudioSinkClass;$/;"	t	typeref:struct:_GstOMXAnalogAudioSinkClass
GstOMXAudioDec	omx/gstomxaudiodec.h	/^typedef struct _GstOMXAudioDec GstOMXAudioDec;$/;"	t	typeref:struct:_GstOMXAudioDec
GstOMXAudioDecClass	omx/gstomxaudiodec.h	/^typedef struct _GstOMXAudioDecClass GstOMXAudioDecClass;$/;"	t	typeref:struct:_GstOMXAudioDecClass
GstOMXAudioEnc	omx/gstomxaudioenc.h	/^typedef struct _GstOMXAudioEnc GstOMXAudioEnc;$/;"	t	typeref:struct:_GstOMXAudioEnc
GstOMXAudioEncClass	omx/gstomxaudioenc.h	/^typedef struct _GstOMXAudioEncClass GstOMXAudioEncClass;$/;"	t	typeref:struct:_GstOMXAudioEncClass
GstOMXAudioSink	omx/gstomxaudiosink.h	/^typedef struct _GstOMXAudioSink GstOMXAudioSink;$/;"	t	typeref:struct:_GstOMXAudioSink
GstOMXAudioSinkClass	omx/gstomxaudiosink.h	/^typedef struct _GstOMXAudioSinkClass GstOMXAudioSinkClass;$/;"	t	typeref:struct:_GstOMXAudioSinkClass
GstOMXBuffer	omx/gstomx.h	/^typedef struct _GstOMXBuffer GstOMXBuffer;$/;"	t	typeref:struct:_GstOMXBuffer
GstOMXBufferPool	omx/gstomxbufferpool.h	/^typedef struct _GstOMXBufferPool GstOMXBufferPool;$/;"	t	typeref:struct:_GstOMXBufferPool
GstOMXBufferPoolClass	omx/gstomxbufferpool.h	/^typedef struct _GstOMXBufferPoolClass GstOMXBufferPoolClass;$/;"	t	typeref:struct:_GstOMXBufferPoolClass
GstOMXClassData	omx/gstomx.h	/^typedef struct _GstOMXClassData GstOMXClassData;$/;"	t	typeref:struct:_GstOMXClassData
GstOMXComponent	omx/gstomx.h	/^typedef struct _GstOMXComponent GstOMXComponent;$/;"	t	typeref:struct:_GstOMXComponent
GstOMXCore	omx/gstomx.h	/^typedef struct _GstOMXCore GstOMXCore;$/;"	t	typeref:struct:_GstOMXCore
GstOMXH263Dec	omx/gstomxh263dec.h	/^typedef struct _GstOMXH263Dec GstOMXH263Dec;$/;"	t	typeref:struct:_GstOMXH263Dec
GstOMXH263DecClass	omx/gstomxh263dec.h	/^typedef struct _GstOMXH263DecClass GstOMXH263DecClass;$/;"	t	typeref:struct:_GstOMXH263DecClass
GstOMXH263Enc	omx/gstomxh263enc.h	/^typedef struct _GstOMXH263Enc GstOMXH263Enc;$/;"	t	typeref:struct:_GstOMXH263Enc
GstOMXH263EncClass	omx/gstomxh263enc.h	/^typedef struct _GstOMXH263EncClass GstOMXH263EncClass;$/;"	t	typeref:struct:_GstOMXH263EncClass
GstOMXH264Dec	omx/gstomxh264dec.h	/^typedef struct _GstOMXH264Dec GstOMXH264Dec;$/;"	t	typeref:struct:_GstOMXH264Dec
GstOMXH264DecClass	omx/gstomxh264dec.h	/^typedef struct _GstOMXH264DecClass GstOMXH264DecClass;$/;"	t	typeref:struct:_GstOMXH264DecClass
GstOMXH264Enc	omx/gstomxh264enc.h	/^typedef struct _GstOMXH264Enc GstOMXH264Enc;$/;"	t	typeref:struct:_GstOMXH264Enc
GstOMXH264EncClass	omx/gstomxh264enc.h	/^typedef struct _GstOMXH264EncClass GstOMXH264EncClass;$/;"	t	typeref:struct:_GstOMXH264EncClass
GstOMXHdmiAudioSink	omx/gstomxhdmiaudiosink.h	/^typedef struct _GstOMXHdmiAudioSink GstOMXHdmiAudioSink;$/;"	t	typeref:struct:_GstOMXHdmiAudioSink
GstOMXHdmiAudioSinkClass	omx/gstomxhdmiaudiosink.h	/^typedef struct _GstOMXHdmiAudioSinkClass GstOMXHdmiAudioSinkClass;$/;"	t	typeref:struct:_GstOMXHdmiAudioSinkClass
GstOMXMJPEGDec	omx/gstomxmjpegdec.h	/^typedef struct _GstOMXMJPEGDec GstOMXMJPEGDec;$/;"	t	typeref:struct:_GstOMXMJPEGDec
GstOMXMJPEGDecClass	omx/gstomxmjpegdec.h	/^typedef struct _GstOMXMJPEGDecClass GstOMXMJPEGDecClass;$/;"	t	typeref:struct:_GstOMXMJPEGDecClass
GstOMXMP3Dec	omx/gstomxmp3dec.h	/^typedef struct _GstOMXMP3Dec GstOMXMP3Dec;$/;"	t	typeref:struct:_GstOMXMP3Dec
GstOMXMP3DecClass	omx/gstomxmp3dec.h	/^typedef struct _GstOMXMP3DecClass GstOMXMP3DecClass;$/;"	t	typeref:struct:_GstOMXMP3DecClass
GstOMXMPEG2VideoDec	omx/gstomxmpeg2videodec.h	/^typedef struct _GstOMXMPEG2VideoDec GstOMXMPEG2VideoDec;$/;"	t	typeref:struct:_GstOMXMPEG2VideoDec
GstOMXMPEG2VideoDecClass	omx/gstomxmpeg2videodec.h	/^typedef struct _GstOMXMPEG2VideoDecClass GstOMXMPEG2VideoDecClass;$/;"	t	typeref:struct:_GstOMXMPEG2VideoDecClass
GstOMXMPEG4VideoDec	omx/gstomxmpeg4videodec.h	/^typedef struct _GstOMXMPEG4VideoDec GstOMXMPEG4VideoDec;$/;"	t	typeref:struct:_GstOMXMPEG4VideoDec
GstOMXMPEG4VideoDecClass	omx/gstomxmpeg4videodec.h	/^typedef struct _GstOMXMPEG4VideoDecClass GstOMXMPEG4VideoDecClass;$/;"	t	typeref:struct:_GstOMXMPEG4VideoDecClass
GstOMXMPEG4VideoEnc	omx/gstomxmpeg4videoenc.h	/^typedef struct _GstOMXMPEG4VideoEnc GstOMXMPEG4VideoEnc;$/;"	t	typeref:struct:_GstOMXMPEG4VideoEnc
GstOMXMPEG4VideoEncClass	omx/gstomxmpeg4videoenc.h	/^typedef struct _GstOMXMPEG4VideoEncClass GstOMXMPEG4VideoEncClass;$/;"	t	typeref:struct:_GstOMXMPEG4VideoEncClass
GstOMXMemory	omx/gstomxbufferpool.c	/^typedef struct _GstOMXMemory GstOMXMemory;$/;"	t	typeref:struct:_GstOMXMemory	file:
GstOMXMemoryAllocator	omx/gstomxbufferpool.c	/^typedef struct _GstOMXMemoryAllocator GstOMXMemoryAllocator;$/;"	t	typeref:struct:_GstOMXMemoryAllocator	file:
GstOMXMemoryAllocatorClass	omx/gstomxbufferpool.c	/^typedef struct _GstOMXMemoryAllocatorClass GstOMXMemoryAllocatorClass;$/;"	t	typeref:struct:_GstOMXMemoryAllocatorClass	file:
GstOMXMessage	omx/gstomx.h	/^typedef struct _GstOMXMessage GstOMXMessage;$/;"	t	typeref:struct:_GstOMXMessage
GstOMXMessageType	omx/gstomx.h	/^} GstOMXMessageType;$/;"	t	typeref:enum:__anon7
GstOMXPort	omx/gstomx.h	/^typedef struct _GstOMXPort GstOMXPort;$/;"	t	typeref:struct:_GstOMXPort
GstOMXPortDirection	omx/gstomx.h	/^typedef enum _GstOMXPortDirection GstOMXPortDirection;$/;"	t	typeref:enum:_GstOMXPortDirection
GstOMXTheoraDec	omx/gstomxtheoradec.h	/^typedef struct _GstOMXTheoraDec GstOMXTheoraDec;$/;"	t	typeref:struct:_GstOMXTheoraDec
GstOMXTheoraDecClass	omx/gstomxtheoradec.h	/^typedef struct _GstOMXTheoraDecClass GstOMXTheoraDecClass;$/;"	t	typeref:struct:_GstOMXTheoraDecClass
GstOMXVP8Dec	omx/gstomxvp8dec.h	/^typedef struct _GstOMXVP8Dec GstOMXVP8Dec;$/;"	t	typeref:struct:_GstOMXVP8Dec
GstOMXVP8DecClass	omx/gstomxvp8dec.h	/^typedef struct _GstOMXVP8DecClass GstOMXVP8DecClass;$/;"	t	typeref:struct:_GstOMXVP8DecClass
GstOMXVideoDec	omx/gstomxvideodec.h	/^typedef struct _GstOMXVideoDec GstOMXVideoDec;$/;"	t	typeref:struct:_GstOMXVideoDec
GstOMXVideoDecClass	omx/gstomxvideodec.h	/^typedef struct _GstOMXVideoDecClass GstOMXVideoDecClass;$/;"	t	typeref:struct:_GstOMXVideoDecClass
GstOMXVideoEnc	omx/gstomxvideoenc.h	/^typedef struct _GstOMXVideoEnc GstOMXVideoEnc;$/;"	t	typeref:struct:_GstOMXVideoEnc
GstOMXVideoEncClass	omx/gstomxvideoenc.h	/^typedef struct _GstOMXVideoEncClass GstOMXVideoEncClass;$/;"	t	typeref:struct:_GstOMXVideoEncClass
GstOMXVideoNegotiationMap	omx/gstomxvideo.h	/^} GstOMXVideoNegotiationMap;$/;"	t	typeref:struct:__anon22
GstOMXWMVDec	omx/gstomxwmvdec.h	/^typedef struct _GstOMXWMVDec GstOMXWMVDec;$/;"	t	typeref:struct:_GstOMXWMVDec
GstOMXWMVDecClass	omx/gstomxwmvdec.h	/^typedef struct _GstOMXWMVDecClass GstOMXWMVDecClass;$/;"	t	typeref:struct:_GstOMXWMVDecClass
GstOmxComponentType	omx/gstomx.h	/^} GstOmxComponentType;$/;"	t	typeref:enum:__anon8
GstPlayFlags	examples/egl/testegl.c	/^} GstPlayFlags;$/;"	t	typeref:enum:__anon38	file:
IntraRefreshVOP	omx/openmax/OMX_Video.h	/^    OMX_BOOL IntraRefreshVOP;$/;"	m	struct:OMX_CONFIG_INTRAREFRESHVOPTYPE	access:public
KD_EACCES	omx/openmax/OMX_ContentPipe.h	36;"	d
KD_EADDRINUSE	omx/openmax/OMX_ContentPipe.h	37;"	d
KD_EAGAIN	omx/openmax/OMX_ContentPipe.h	38;"	d
KD_EBADF	omx/openmax/OMX_ContentPipe.h	39;"	d
KD_EBUSY	omx/openmax/OMX_ContentPipe.h	40;"	d
KD_ECONNREFUSED	omx/openmax/OMX_ContentPipe.h	41;"	d
KD_ECONNRESET	omx/openmax/OMX_ContentPipe.h	42;"	d
KD_EDEADLK	omx/openmax/OMX_ContentPipe.h	43;"	d
KD_EDESTADDRREQ	omx/openmax/OMX_ContentPipe.h	44;"	d
KD_EEXIST	omx/openmax/OMX_ContentPipe.h	46;"	d
KD_EFBIG	omx/openmax/OMX_ContentPipe.h	47;"	d
KD_EHOSTUNREACH	omx/openmax/OMX_ContentPipe.h	48;"	d
KD_EILSEQ	omx/openmax/OMX_ContentPipe.h	62;"	d
KD_EINVAL	omx/openmax/OMX_ContentPipe.h	49;"	d
KD_EIO	omx/openmax/OMX_ContentPipe.h	50;"	d
KD_EISCONN	omx/openmax/OMX_ContentPipe.h	51;"	d
KD_EISDIR	omx/openmax/OMX_ContentPipe.h	52;"	d
KD_EMFILE	omx/openmax/OMX_ContentPipe.h	53;"	d
KD_ENAMETOOLONG	omx/openmax/OMX_ContentPipe.h	54;"	d
KD_ENOENT	omx/openmax/OMX_ContentPipe.h	55;"	d
KD_ENOMEM	omx/openmax/OMX_ContentPipe.h	56;"	d
KD_ENOSPC	omx/openmax/OMX_ContentPipe.h	57;"	d
KD_ENOSYS	omx/openmax/OMX_ContentPipe.h	58;"	d
KD_ENOTCONN	omx/openmax/OMX_ContentPipe.h	59;"	d
KD_EPERM	omx/openmax/OMX_ContentPipe.h	60;"	d
KD_ERANGE	omx/openmax/OMX_ContentPipe.h	45;"	d
KD_ETIMEDOUT	omx/openmax/OMX_ContentPipe.h	61;"	d
MAX_INPUT_BUFFER	omx/gstomx.h	194;"	d
MAX_OUTPUT_BUFFER	omx/gstomx.h	195;"	d
MFC_INPUT_BUFFER_PLANE	omx/gstomx.h	191;"	d
MFC_OUTPUT_BUFFER_PLANE	omx/gstomx.h	192;"	d
M_PI	examples/egl/testegl.c	76;"	d	file:
OMX_ALL	omx/openmax/OMX_Types.h	99;"	d
OMX_API	omx/openmax/OMX_Types.h	43;"	d
OMX_API	omx/openmax/OMX_Types.h	46;"	d
OMX_API	omx/openmax/OMX_Types.h	48;"	d
OMX_API	omx/openmax/OMX_Types.h	54;"	d
OMX_API	omx/openmax/OMX_Types.h	56;"	d
OMX_API	omx/openmax/OMX_Types.h	60;"	d
OMX_API	omx/openmax/OMX_Types.h	62;"	d
OMX_APIENTRY	omx/openmax/OMX_Types.h	68;"	d
OMX_AUDIO_AACERAll	omx/openmax/OMX_Audio.h	270;"	d
OMX_AUDIO_AACERHCR	omx/openmax/OMX_Audio.h	269;"	d
OMX_AUDIO_AACERNone	omx/openmax/OMX_Audio.h	266;"	d
OMX_AUDIO_AACERRVLC	omx/openmax/OMX_Audio.h	268;"	d
OMX_AUDIO_AACERVCB11	omx/openmax/OMX_Audio.h	267;"	d
OMX_AUDIO_AACObjectERLC	omx/openmax/OMX_Audio.h	/^  OMX_AUDIO_AACObjectERLC = 17,     \/**< ER AAC Low Complexity object (Error Resilient AAC-LC) *\/$/;"	e	enum:OMX_AUDIO_AACPROFILETYPE
OMX_AUDIO_AACObjectHE	omx/openmax/OMX_Audio.h	/^  OMX_AUDIO_AACObjectHE,            \/**< AAC High Efficiency (object type SBR, HE-AAC profile) *\/$/;"	e	enum:OMX_AUDIO_AACPROFILETYPE
OMX_AUDIO_AACObjectHE_PS	omx/openmax/OMX_Audio.h	/^  OMX_AUDIO_AACObjectHE_PS = 29,    \/**< AAC High Efficiency with Parametric Stereo coding (HE-AAC v2, object type PS) *\/$/;"	e	enum:OMX_AUDIO_AACPROFILETYPE
OMX_AUDIO_AACObjectKhronosExtensions	omx/openmax/OMX_Audio.h	/^  OMX_AUDIO_AACObjectKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_AUDIO_AACPROFILETYPE
OMX_AUDIO_AACObjectLC	omx/openmax/OMX_Audio.h	/^  OMX_AUDIO_AACObjectLC,            \/**< AAC Low Complexity object (AAC profile) *\/$/;"	e	enum:OMX_AUDIO_AACPROFILETYPE
OMX_AUDIO_AACObjectLD	omx/openmax/OMX_Audio.h	/^  OMX_AUDIO_AACObjectLD = 23,       \/**< AAC Low Delay object (Error Resilient) *\/$/;"	e	enum:OMX_AUDIO_AACPROFILETYPE
OMX_AUDIO_AACObjectLTP	omx/openmax/OMX_Audio.h	/^  OMX_AUDIO_AACObjectLTP,           \/**< AAC Long Term Prediction object *\/$/;"	e	enum:OMX_AUDIO_AACPROFILETYPE
OMX_AUDIO_AACObjectMain	omx/openmax/OMX_Audio.h	/^  OMX_AUDIO_AACObjectMain = 1,      \/**< AAC Main object *\/$/;"	e	enum:OMX_AUDIO_AACPROFILETYPE
OMX_AUDIO_AACObjectMax	omx/openmax/OMX_Audio.h	/^  OMX_AUDIO_AACObjectMax = 0x7FFFFFFF$/;"	e	enum:OMX_AUDIO_AACPROFILETYPE
OMX_AUDIO_AACObjectNull	omx/openmax/OMX_Audio.h	/^  OMX_AUDIO_AACObjectNull = 0,      \/**< Null, not used *\/$/;"	e	enum:OMX_AUDIO_AACPROFILETYPE
OMX_AUDIO_AACObjectSSR	omx/openmax/OMX_Audio.h	/^  OMX_AUDIO_AACObjectSSR,           \/**< AAC Scalable Sample Rate object *\/$/;"	e	enum:OMX_AUDIO_AACPROFILETYPE
OMX_AUDIO_AACObjectScalable	omx/openmax/OMX_Audio.h	/^  OMX_AUDIO_AACObjectScalable,      \/**< AAC Scalable object *\/$/;"	e	enum:OMX_AUDIO_AACPROFILETYPE
OMX_AUDIO_AACObjectVendorStartUnused	omx/openmax/OMX_Audio.h	/^  OMX_AUDIO_AACObjectVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_AUDIO_AACPROFILETYPE
OMX_AUDIO_AACPROFILETYPE	omx/openmax/OMX_Audio.h	/^typedef enum OMX_AUDIO_AACPROFILETYPE{$/;"	g
OMX_AUDIO_AACPROFILETYPE	omx/openmax/OMX_Audio.h	/^} OMX_AUDIO_AACPROFILETYPE;$/;"	t	typeref:enum:OMX_AUDIO_AACPROFILETYPE
OMX_AUDIO_AACSTREAMFORMATTYPE	omx/openmax/OMX_Audio.h	/^typedef enum OMX_AUDIO_AACSTREAMFORMATTYPE {$/;"	g
OMX_AUDIO_AACSTREAMFORMATTYPE	omx/openmax/OMX_Audio.h	/^} OMX_AUDIO_AACSTREAMFORMATTYPE;$/;"	t	typeref:enum:OMX_AUDIO_AACSTREAMFORMATTYPE
OMX_AUDIO_AACStreamFormatADIF	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_AACStreamFormatADIF,        \/**< AAC Audio Data Interchange Format *\/$/;"	e	enum:OMX_AUDIO_AACSTREAMFORMATTYPE
OMX_AUDIO_AACStreamFormatKhronosExtensions	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_AACStreamFormatKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_AUDIO_AACSTREAMFORMATTYPE
OMX_AUDIO_AACStreamFormatMP2ADTS	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_AACStreamFormatMP2ADTS = 0, \/**< AAC Audio Data Transport Stream 2 format *\/$/;"	e	enum:OMX_AUDIO_AACSTREAMFORMATTYPE
OMX_AUDIO_AACStreamFormatMP4ADTS	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_AACStreamFormatMP4ADTS,     \/**< AAC Audio Data Transport Stream 4 format *\/$/;"	e	enum:OMX_AUDIO_AACSTREAMFORMATTYPE
OMX_AUDIO_AACStreamFormatMP4FF	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_AACStreamFormatMP4FF,       \/**< AAC inside MPEG-4\/ISO File Format *\/$/;"	e	enum:OMX_AUDIO_AACSTREAMFORMATTYPE
OMX_AUDIO_AACStreamFormatMP4LATM	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_AACStreamFormatMP4LATM,     \/**< AAC Low overhead Audio Transport Multiplex *\/$/;"	e	enum:OMX_AUDIO_AACSTREAMFORMATTYPE
OMX_AUDIO_AACStreamFormatMP4LOAS	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_AACStreamFormatMP4LOAS,     \/**< AAC Low Overhead Audio Stream format *\/$/;"	e	enum:OMX_AUDIO_AACSTREAMFORMATTYPE
OMX_AUDIO_AACStreamFormatMax	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_AACStreamFormatMax = 0x7FFFFFFF$/;"	e	enum:OMX_AUDIO_AACSTREAMFORMATTYPE
OMX_AUDIO_AACStreamFormatRAW	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_AACStreamFormatRAW,         \/**< AAC Raw Format *\/$/;"	e	enum:OMX_AUDIO_AACSTREAMFORMATTYPE
OMX_AUDIO_AACStreamFormatVendorStartUnused	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_AACStreamFormatVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_AUDIO_AACSTREAMFORMATTYPE
OMX_AUDIO_AACToolAll	omx/openmax/OMX_Audio.h	262;"	d
OMX_AUDIO_AACToolIS	omx/openmax/OMX_Audio.h	258;"	d
OMX_AUDIO_AACToolLTP	omx/openmax/OMX_Audio.h	261;"	d
OMX_AUDIO_AACToolMS	omx/openmax/OMX_Audio.h	257;"	d
OMX_AUDIO_AACToolNone	omx/openmax/OMX_Audio.h	256;"	d
OMX_AUDIO_AACToolPNS	omx/openmax/OMX_Audio.h	260;"	d
OMX_AUDIO_AACToolTNS	omx/openmax/OMX_Audio.h	259;"	d
OMX_AUDIO_AMRBANDMODETYPE	omx/openmax/OMX_Audio.h	/^typedef enum OMX_AUDIO_AMRBANDMODETYPE {$/;"	g
OMX_AUDIO_AMRBANDMODETYPE	omx/openmax/OMX_Audio.h	/^} OMX_AUDIO_AMRBANDMODETYPE;$/;"	t	typeref:enum:OMX_AUDIO_AMRBANDMODETYPE
OMX_AUDIO_AMRBandModeKhronosExtensions	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRBandModeKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_AUDIO_AMRBANDMODETYPE
OMX_AUDIO_AMRBandModeMax	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRBandModeMax = 0x7FFFFFFF$/;"	e	enum:OMX_AUDIO_AMRBANDMODETYPE
OMX_AUDIO_AMRBandModeNB0	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRBandModeNB0,                 \/**< AMRNB Mode 0 =  4750 bps *\/$/;"	e	enum:OMX_AUDIO_AMRBANDMODETYPE
OMX_AUDIO_AMRBandModeNB1	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRBandModeNB1,                 \/**< AMRNB Mode 1 =  5150 bps *\/$/;"	e	enum:OMX_AUDIO_AMRBANDMODETYPE
OMX_AUDIO_AMRBandModeNB2	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRBandModeNB2,                 \/**< AMRNB Mode 2 =  5900 bps *\/ $/;"	e	enum:OMX_AUDIO_AMRBANDMODETYPE
OMX_AUDIO_AMRBandModeNB3	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRBandModeNB3,                 \/**< AMRNB Mode 3 =  6700 bps *\/$/;"	e	enum:OMX_AUDIO_AMRBANDMODETYPE
OMX_AUDIO_AMRBandModeNB4	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRBandModeNB4,                 \/**< AMRNB Mode 4 =  7400 bps *\/$/;"	e	enum:OMX_AUDIO_AMRBANDMODETYPE
OMX_AUDIO_AMRBandModeNB5	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRBandModeNB5,                 \/**< AMRNB Mode 5 =  7950 bps *\/$/;"	e	enum:OMX_AUDIO_AMRBANDMODETYPE
OMX_AUDIO_AMRBandModeNB6	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRBandModeNB6,                 \/**< AMRNB Mode 6 = 10200 bps *\/$/;"	e	enum:OMX_AUDIO_AMRBANDMODETYPE
OMX_AUDIO_AMRBandModeNB7	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRBandModeNB7,                 \/**< AMRNB Mode 7 = 12200 bps *\/$/;"	e	enum:OMX_AUDIO_AMRBANDMODETYPE
OMX_AUDIO_AMRBandModeUnused	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRBandModeUnused = 0,          \/**< AMRNB Mode unused \/ unknown *\/$/;"	e	enum:OMX_AUDIO_AMRBANDMODETYPE
OMX_AUDIO_AMRBandModeVendorStartUnused	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRBandModeVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_AUDIO_AMRBANDMODETYPE
OMX_AUDIO_AMRBandModeWB0	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRBandModeWB0,                 \/**< AMRWB Mode 0 =  6600 bps *\/$/;"	e	enum:OMX_AUDIO_AMRBANDMODETYPE
OMX_AUDIO_AMRBandModeWB1	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRBandModeWB1,                 \/**< AMRWB Mode 1 =  8850 bps *\/$/;"	e	enum:OMX_AUDIO_AMRBANDMODETYPE
OMX_AUDIO_AMRBandModeWB2	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRBandModeWB2,                 \/**< AMRWB Mode 2 = 12650 bps *\/ $/;"	e	enum:OMX_AUDIO_AMRBANDMODETYPE
OMX_AUDIO_AMRBandModeWB3	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRBandModeWB3,                 \/**< AMRWB Mode 3 = 14250 bps *\/ $/;"	e	enum:OMX_AUDIO_AMRBANDMODETYPE
OMX_AUDIO_AMRBandModeWB4	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRBandModeWB4,                 \/**< AMRWB Mode 4 = 15850 bps *\/$/;"	e	enum:OMX_AUDIO_AMRBANDMODETYPE
OMX_AUDIO_AMRBandModeWB5	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRBandModeWB5,                 \/**< AMRWB Mode 5 = 18250 bps *\/$/;"	e	enum:OMX_AUDIO_AMRBANDMODETYPE
OMX_AUDIO_AMRBandModeWB6	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRBandModeWB6,                 \/**< AMRWB Mode 6 = 19850 bps *\/$/;"	e	enum:OMX_AUDIO_AMRBANDMODETYPE
OMX_AUDIO_AMRBandModeWB7	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRBandModeWB7,                 \/**< AMRWB Mode 7 = 23050 bps *\/$/;"	e	enum:OMX_AUDIO_AMRBANDMODETYPE
OMX_AUDIO_AMRBandModeWB8	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRBandModeWB8,                 \/**< AMRWB Mode 8 = 23850 bps *\/      $/;"	e	enum:OMX_AUDIO_AMRBANDMODETYPE
OMX_AUDIO_AMRDTXMODETYPE	omx/openmax/OMX_Audio.h	/^typedef enum OMX_AUDIO_AMRDTXMODETYPE { $/;"	g
OMX_AUDIO_AMRDTXMODETYPE	omx/openmax/OMX_Audio.h	/^} OMX_AUDIO_AMRDTXMODETYPE; $/;"	t	typeref:enum:OMX_AUDIO_AMRDTXMODETYPE
OMX_AUDIO_AMRDTXModeKhronosExtensions	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRDTXModeKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_AUDIO_AMRDTXMODETYPE
OMX_AUDIO_AMRDTXModeMax	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRDTXModeMax = 0x7FFFFFFF $/;"	e	enum:OMX_AUDIO_AMRDTXMODETYPE
OMX_AUDIO_AMRDTXModeOff	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRDTXModeOff = 0,        \/**< AMR Discontinuous Transmission Mode is disabled *\/ $/;"	e	enum:OMX_AUDIO_AMRDTXMODETYPE
OMX_AUDIO_AMRDTXModeOnAuto	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRDTXModeOnAuto,         \/**< The codec will automatically select between $/;"	e	enum:OMX_AUDIO_AMRDTXMODETYPE
OMX_AUDIO_AMRDTXModeOnVAD1	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRDTXModeOnVAD1,         \/**< AMR Discontinuous Transmission Mode using $/;"	e	enum:OMX_AUDIO_AMRDTXMODETYPE
OMX_AUDIO_AMRDTXModeOnVAD2	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRDTXModeOnVAD2,         \/**< AMR Discontinuous Transmission Mode using $/;"	e	enum:OMX_AUDIO_AMRDTXMODETYPE
OMX_AUDIO_AMRDTXModeVendorStartUnused	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRDTXModeVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_AUDIO_AMRDTXMODETYPE
OMX_AUDIO_AMRDTXasEFR	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRDTXasEFR,             \/**< DTX as EFR instead of AMR standard (3GPP 26.101, frame type =8,9,10) *\/$/;"	e	enum:OMX_AUDIO_AMRDTXMODETYPE
OMX_AUDIO_AMRFRAMEFORMATTYPE	omx/openmax/OMX_Audio.h	/^typedef enum OMX_AUDIO_AMRFRAMEFORMATTYPE { $/;"	g
OMX_AUDIO_AMRFRAMEFORMATTYPE	omx/openmax/OMX_Audio.h	/^} OMX_AUDIO_AMRFRAMEFORMATTYPE; $/;"	t	typeref:enum:OMX_AUDIO_AMRFRAMEFORMATTYPE
OMX_AUDIO_AMRFrameFormatConformance	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRFrameFormatConformance = 0,  \/**< Frame Format is AMR Conformance $/;"	e	enum:OMX_AUDIO_AMRFRAMEFORMATTYPE
OMX_AUDIO_AMRFrameFormatFSF	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRFrameFormatFSF,              \/**< Frame Format is AMR File Storage $/;"	e	enum:OMX_AUDIO_AMRFRAMEFORMATTYPE
OMX_AUDIO_AMRFrameFormatIF1	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRFrameFormatIF1,              \/**< Frame Format is AMR Interface $/;"	e	enum:OMX_AUDIO_AMRFRAMEFORMATTYPE
OMX_AUDIO_AMRFrameFormatIF2	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRFrameFormatIF2,              \/**< Frame Format is AMR Interface $/;"	e	enum:OMX_AUDIO_AMRFRAMEFORMATTYPE
OMX_AUDIO_AMRFrameFormatITU	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRFrameFormatITU,              \/**< Frame Format is ITU Format (added at Motorola request) *\/ $/;"	e	enum:OMX_AUDIO_AMRFRAMEFORMATTYPE
OMX_AUDIO_AMRFrameFormatKhronosExtensions	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRFrameFormatKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_AUDIO_AMRFRAMEFORMATTYPE
OMX_AUDIO_AMRFrameFormatMax	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRFrameFormatMax = 0x7FFFFFFF $/;"	e	enum:OMX_AUDIO_AMRFRAMEFORMATTYPE
OMX_AUDIO_AMRFrameFormatRTPPayload	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRFrameFormatRTPPayload,       \/**< Frame Format is AMR Real-Time $/;"	e	enum:OMX_AUDIO_AMRFRAMEFORMATTYPE
OMX_AUDIO_AMRFrameFormatVendorStartUnused	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRFrameFormatVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_AUDIO_AMRFRAMEFORMATTYPE
OMX_AUDIO_CDMARATETYPE	omx/openmax/OMX_Audio.h	/^typedef enum OMX_AUDIO_CDMARATETYPE {$/;"	g
OMX_AUDIO_CDMARATETYPE	omx/openmax/OMX_Audio.h	/^} OMX_AUDIO_CDMARATETYPE;$/;"	t	typeref:enum:OMX_AUDIO_CDMARATETYPE
OMX_AUDIO_CDMARateBlank	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_CDMARateBlank = 0,          \/**< CDMA encoded frame is blank *\/$/;"	e	enum:OMX_AUDIO_CDMARATETYPE
OMX_AUDIO_CDMARateEighth	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_CDMARateEighth,             \/**< CDMA encoded frame in eighth rate (DTX)*\/$/;"	e	enum:OMX_AUDIO_CDMARATETYPE
OMX_AUDIO_CDMARateErasure	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_CDMARateErasure,            \/**< CDMA erasure frame *\/$/;"	e	enum:OMX_AUDIO_CDMARATETYPE
OMX_AUDIO_CDMARateFull	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_CDMARateFull,               \/**< CDMA encoded frame in full rate *\/$/;"	e	enum:OMX_AUDIO_CDMARATETYPE
OMX_AUDIO_CDMARateHalf	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_CDMARateHalf,               \/**< CDMA encoded frame in half rate *\/$/;"	e	enum:OMX_AUDIO_CDMARATETYPE
OMX_AUDIO_CDMARateKhronosExtensions	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_CDMARateKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_AUDIO_CDMARATETYPE
OMX_AUDIO_CDMARateMax	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_CDMARateMax = 0x7FFFFFFF$/;"	e	enum:OMX_AUDIO_CDMARATETYPE
OMX_AUDIO_CDMARateQuarter	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_CDMARateQuarter,            \/**< CDMA encoded frame in quarter rate *\/$/;"	e	enum:OMX_AUDIO_CDMARATETYPE
OMX_AUDIO_CDMARateVendorStartUnused	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_CDMARateVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_AUDIO_CDMARATETYPE
OMX_AUDIO_CHANNELMODETYPE	omx/openmax/OMX_Audio.h	/^typedef enum OMX_AUDIO_CHANNELMODETYPE {$/;"	g
OMX_AUDIO_CHANNELMODETYPE	omx/openmax/OMX_Audio.h	/^} OMX_AUDIO_CHANNELMODETYPE;$/;"	t	typeref:enum:OMX_AUDIO_CHANNELMODETYPE
OMX_AUDIO_CHANNELTYPE	omx/openmax/OMX_Audio.h	/^typedef enum OMX_AUDIO_CHANNELTYPE {$/;"	g
OMX_AUDIO_CHANNELTYPE	omx/openmax/OMX_Audio.h	/^} OMX_AUDIO_CHANNELTYPE;$/;"	t	typeref:enum:OMX_AUDIO_CHANNELTYPE
OMX_AUDIO_CODINGTYPE	omx/openmax/OMX_Audio.h	/^typedef enum OMX_AUDIO_CODINGTYPE {$/;"	g
OMX_AUDIO_CODINGTYPE	omx/openmax/OMX_Audio.h	/^} OMX_AUDIO_CODINGTYPE;$/;"	t	typeref:enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CONFIG_BALANCETYPE	omx/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_CONFIG_BALANCETYPE {$/;"	s
OMX_AUDIO_CONFIG_BALANCETYPE	omx/openmax/OMX_Audio.h	/^} OMX_AUDIO_CONFIG_BALANCETYPE;$/;"	t	typeref:struct:OMX_AUDIO_CONFIG_BALANCETYPE
OMX_AUDIO_CONFIG_BALANCETYPE::nBalance	omx/openmax/OMX_Audio.h	/^    OMX_S32 nBalance;           \/**< balance setting for this port $/;"	m	struct:OMX_AUDIO_CONFIG_BALANCETYPE	access:public
OMX_AUDIO_CONFIG_BALANCETYPE::nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;         \/**< Port index indicating which port to $/;"	m	struct:OMX_AUDIO_CONFIG_BALANCETYPE	access:public
OMX_AUDIO_CONFIG_BALANCETYPE::nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;              \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_CONFIG_BALANCETYPE	access:public
OMX_AUDIO_CONFIG_BALANCETYPE::nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;   \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_CONFIG_BALANCETYPE	access:public
OMX_AUDIO_CONFIG_BASSTYPE	omx/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_CONFIG_BASSTYPE {$/;"	s
OMX_AUDIO_CONFIG_BASSTYPE	omx/openmax/OMX_Audio.h	/^} OMX_AUDIO_CONFIG_BASSTYPE;$/;"	t	typeref:struct:OMX_AUDIO_CONFIG_BASSTYPE
OMX_AUDIO_CONFIG_BASSTYPE::bEnable	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bEnable;          \/**< Enable\/disable for bass control *\/$/;"	m	struct:OMX_AUDIO_CONFIG_BASSTYPE	access:public
OMX_AUDIO_CONFIG_BASSTYPE::nBass	omx/openmax/OMX_Audio.h	/^    OMX_S32 nBass;             \/**< bass setting for the port, as a $/;"	m	struct:OMX_AUDIO_CONFIG_BASSTYPE	access:public
OMX_AUDIO_CONFIG_BASSTYPE::nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;        \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_CONFIG_BASSTYPE	access:public
OMX_AUDIO_CONFIG_BASSTYPE::nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;             \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_CONFIG_BASSTYPE	access:public
OMX_AUDIO_CONFIG_BASSTYPE::nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;  \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_CONFIG_BASSTYPE	access:public
OMX_AUDIO_CONFIG_CHANNELMUTETYPE	omx/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_CONFIG_CHANNELMUTETYPE {$/;"	s
OMX_AUDIO_CONFIG_CHANNELMUTETYPE	omx/openmax/OMX_Audio.h	/^} OMX_AUDIO_CONFIG_CHANNELMUTETYPE;$/;"	t	typeref:struct:OMX_AUDIO_CONFIG_CHANNELMUTETYPE
OMX_AUDIO_CONFIG_CHANNELMUTETYPE::bIsMIDI	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bIsMIDI;           \/**< TRUE if nChannel refers to a MIDI channel,$/;"	m	struct:OMX_AUDIO_CONFIG_CHANNELMUTETYPE	access:public
OMX_AUDIO_CONFIG_CHANNELMUTETYPE::bMute	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bMute;             \/**< Mute setting for this channel *\/$/;"	m	struct:OMX_AUDIO_CONFIG_CHANNELMUTETYPE	access:public
OMX_AUDIO_CONFIG_CHANNELMUTETYPE::nChannel	omx/openmax/OMX_Audio.h	/^    OMX_U32 nChannel;           \/**< channel to select from 0 to N-1, $/;"	m	struct:OMX_AUDIO_CONFIG_CHANNELMUTETYPE	access:public
OMX_AUDIO_CONFIG_CHANNELMUTETYPE::nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;         \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_CONFIG_CHANNELMUTETYPE	access:public
OMX_AUDIO_CONFIG_CHANNELMUTETYPE::nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;              \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_CONFIG_CHANNELMUTETYPE	access:public
OMX_AUDIO_CONFIG_CHANNELMUTETYPE::nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;   \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_CONFIG_CHANNELMUTETYPE	access:public
OMX_AUDIO_CONFIG_CHANNELVOLUMETYPE	omx/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_CONFIG_CHANNELVOLUMETYPE {$/;"	s
OMX_AUDIO_CONFIG_CHANNELVOLUMETYPE	omx/openmax/OMX_Audio.h	/^} OMX_AUDIO_CONFIG_CHANNELVOLUMETYPE;$/;"	t	typeref:struct:OMX_AUDIO_CONFIG_CHANNELVOLUMETYPE
OMX_AUDIO_CONFIG_CHANNELVOLUMETYPE::bIsMIDI	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bIsMIDI;           \/**< TRUE if nChannel refers to a MIDI channel,$/;"	m	struct:OMX_AUDIO_CONFIG_CHANNELVOLUMETYPE	access:public
OMX_AUDIO_CONFIG_CHANNELVOLUMETYPE::bLinear	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bLinear;           \/**< Is the volume to be set in linear (0.100) or $/;"	m	struct:OMX_AUDIO_CONFIG_CHANNELVOLUMETYPE	access:public
OMX_AUDIO_CONFIG_CHANNELVOLUMETYPE::nChannel	omx/openmax/OMX_Audio.h	/^    OMX_U32 nChannel;           \/**< channel to select from 0 to N-1, $/;"	m	struct:OMX_AUDIO_CONFIG_CHANNELVOLUMETYPE	access:public
OMX_AUDIO_CONFIG_CHANNELVOLUMETYPE::nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;         \/**< Port index indicating which port to $/;"	m	struct:OMX_AUDIO_CONFIG_CHANNELVOLUMETYPE	access:public
OMX_AUDIO_CONFIG_CHANNELVOLUMETYPE::nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;              \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_CONFIG_CHANNELVOLUMETYPE	access:public
OMX_AUDIO_CONFIG_CHANNELVOLUMETYPE::nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;   \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_CONFIG_CHANNELVOLUMETYPE	access:public
OMX_AUDIO_CONFIG_CHANNELVOLUMETYPE::sVolume	omx/openmax/OMX_Audio.h	/^    OMX_BS32 sVolume;           \/**< Volume linear setting in the 0..100 range, OR$/;"	m	struct:OMX_AUDIO_CONFIG_CHANNELVOLUMETYPE	access:public
OMX_AUDIO_CONFIG_CHORUSTYPE	omx/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_CONFIG_CHORUSTYPE {$/;"	s
OMX_AUDIO_CONFIG_CHORUSTYPE	omx/openmax/OMX_Audio.h	/^} OMX_AUDIO_CONFIG_CHORUSTYPE;$/;"	t	typeref:struct:OMX_AUDIO_CONFIG_CHORUSTYPE
OMX_AUDIO_CONFIG_CHORUSTYPE::bEnable	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bEnable;          \/**< Enable\/disable for chorus *\/$/;"	m	struct:OMX_AUDIO_CONFIG_CHORUSTYPE	access:public
OMX_AUDIO_CONFIG_CHORUSTYPE::nFeedback	omx/openmax/OMX_Audio.h	/^    OMX_BU32 nFeedback;        \/**< Feedback from chorus output to input in percentage *\/$/;"	m	struct:OMX_AUDIO_CONFIG_CHORUSTYPE	access:public
OMX_AUDIO_CONFIG_CHORUSTYPE::nModulationDepth	omx/openmax/OMX_Audio.h	/^    OMX_U32 nModulationDepth;  \/**< depth of modulation as a percentage of $/;"	m	struct:OMX_AUDIO_CONFIG_CHORUSTYPE	access:public
OMX_AUDIO_CONFIG_CHORUSTYPE::nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;        \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_CONFIG_CHORUSTYPE	access:public
OMX_AUDIO_CONFIG_CHORUSTYPE::nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;             \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_CONFIG_CHORUSTYPE	access:public
OMX_AUDIO_CONFIG_CHORUSTYPE::nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;  \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_CONFIG_CHORUSTYPE	access:public
OMX_AUDIO_CONFIG_CHORUSTYPE::sDelay	omx/openmax/OMX_Audio.h	/^    OMX_BU32 sDelay;           \/**< average delay in milliseconds *\/$/;"	m	struct:OMX_AUDIO_CONFIG_CHORUSTYPE	access:public
OMX_AUDIO_CONFIG_CHORUSTYPE::sModulationRate	omx/openmax/OMX_Audio.h	/^    OMX_BU32 sModulationRate;  \/**< rate of modulation in millihertz *\/$/;"	m	struct:OMX_AUDIO_CONFIG_CHORUSTYPE	access:public
OMX_AUDIO_CONFIG_ECHOCANCELATIONTYPE	omx/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_CONFIG_ECHOCANCELATIONTYPE {$/;"	s
OMX_AUDIO_CONFIG_ECHOCANCELATIONTYPE	omx/openmax/OMX_Audio.h	/^} OMX_AUDIO_CONFIG_ECHOCANCELATIONTYPE;$/;"	t	typeref:struct:OMX_AUDIO_CONFIG_ECHOCANCELATIONTYPE
OMX_AUDIO_CONFIG_ECHOCANCELATIONTYPE::eEchoCancelation	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_ECHOCANTYPE eEchoCancelation; \/**< Echo cancelation settings *\/$/;"	m	struct:OMX_AUDIO_CONFIG_ECHOCANCELATIONTYPE	access:public
OMX_AUDIO_CONFIG_ECHOCANCELATIONTYPE::nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;        \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_CONFIG_ECHOCANCELATIONTYPE	access:public
OMX_AUDIO_CONFIG_ECHOCANCELATIONTYPE::nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;             \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_CONFIG_ECHOCANCELATIONTYPE	access:public
OMX_AUDIO_CONFIG_ECHOCANCELATIONTYPE::nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;  \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_CONFIG_ECHOCANCELATIONTYPE	access:public
OMX_AUDIO_CONFIG_EQUALIZERTYPE	omx/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_CONFIG_EQUALIZERTYPE {$/;"	s
OMX_AUDIO_CONFIG_EQUALIZERTYPE	omx/openmax/OMX_Audio.h	/^} OMX_AUDIO_CONFIG_EQUALIZERTYPE;$/;"	t	typeref:struct:OMX_AUDIO_CONFIG_EQUALIZERTYPE
OMX_AUDIO_CONFIG_EQUALIZERTYPE::bEnable	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bEnable;          \/**< Enable\/disable for equalizer *\/$/;"	m	struct:OMX_AUDIO_CONFIG_EQUALIZERTYPE	access:public
OMX_AUDIO_CONFIG_EQUALIZERTYPE::nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;        \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_CONFIG_EQUALIZERTYPE	access:public
OMX_AUDIO_CONFIG_EQUALIZERTYPE::nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;             \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_CONFIG_EQUALIZERTYPE	access:public
OMX_AUDIO_CONFIG_EQUALIZERTYPE::nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;  \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_CONFIG_EQUALIZERTYPE	access:public
OMX_AUDIO_CONFIG_EQUALIZERTYPE::sBandIndex	omx/openmax/OMX_Audio.h	/^    OMX_BU32 sBandIndex;       \/**< Band number to be set.  Upper Limit is $/;"	m	struct:OMX_AUDIO_CONFIG_EQUALIZERTYPE	access:public
OMX_AUDIO_CONFIG_EQUALIZERTYPE::sBandLevel	omx/openmax/OMX_Audio.h	/^    OMX_BS32 sBandLevel;       \/**< band level in millibels *\/$/;"	m	struct:OMX_AUDIO_CONFIG_EQUALIZERTYPE	access:public
OMX_AUDIO_CONFIG_EQUALIZERTYPE::sCenterFreq	omx/openmax/OMX_Audio.h	/^    OMX_BU32 sCenterFreq;      \/**< Center frequecies in Hz.  This is a$/;"	m	struct:OMX_AUDIO_CONFIG_EQUALIZERTYPE	access:public
OMX_AUDIO_CONFIG_LOUDNESSTYPE	omx/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_CONFIG_LOUDNESSTYPE {$/;"	s
OMX_AUDIO_CONFIG_LOUDNESSTYPE	omx/openmax/OMX_Audio.h	/^} OMX_AUDIO_CONFIG_LOUDNESSTYPE;$/;"	t	typeref:struct:OMX_AUDIO_CONFIG_LOUDNESSTYPE
OMX_AUDIO_CONFIG_LOUDNESSTYPE::bLoudness	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bLoudness;        \/**< Enable\/disable for loudness *\/$/;"	m	struct:OMX_AUDIO_CONFIG_LOUDNESSTYPE	access:public
OMX_AUDIO_CONFIG_LOUDNESSTYPE::nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;        \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_CONFIG_LOUDNESSTYPE	access:public
OMX_AUDIO_CONFIG_LOUDNESSTYPE::nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;             \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_CONFIG_LOUDNESSTYPE	access:public
OMX_AUDIO_CONFIG_LOUDNESSTYPE::nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;  \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_CONFIG_LOUDNESSTYPE	access:public
OMX_AUDIO_CONFIG_MIDICONTROLTYPE	omx/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_CONFIG_MIDICONTROLTYPE {$/;"	s
OMX_AUDIO_CONFIG_MIDICONTROLTYPE	omx/openmax/OMX_Audio.h	/^} OMX_AUDIO_CONFIG_MIDICONTROLTYPE;$/;"	t	typeref:struct:OMX_AUDIO_CONFIG_MIDICONTROLTYPE
OMX_AUDIO_CONFIG_MIDICONTROLTYPE::nChannelMuteMask	omx/openmax/OMX_Audio.h	/^    OMX_U16 nChannelMuteMask;     \/**< 16 bit mask for channel mute status *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDICONTROLTYPE	access:public
OMX_AUDIO_CONFIG_MIDICONTROLTYPE::nChannelSoloMask	omx/openmax/OMX_Audio.h	/^    OMX_U16 nChannelSoloMask;     \/**< 16 bit mask for channel solo status *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDICONTROLTYPE	access:public
OMX_AUDIO_CONFIG_MIDICONTROLTYPE::nMaxPolyphony	omx/openmax/OMX_Audio.h	/^    OMX_U32 nMaxPolyphony;        \/**< Specifies the maximum simultaneous polyphonic $/;"	m	struct:OMX_AUDIO_CONFIG_MIDICONTROLTYPE	access:public
OMX_AUDIO_CONFIG_MIDICONTROLTYPE::nNumRepeat	omx/openmax/OMX_Audio.h	/^    OMX_U32 nNumRepeat;           \/**< Number of times to repeat playback *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDICONTROLTYPE	access:public
OMX_AUDIO_CONFIG_MIDICONTROLTYPE::nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;           \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDICONTROLTYPE	access:public
OMX_AUDIO_CONFIG_MIDICONTROLTYPE::nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;                \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDICONTROLTYPE	access:public
OMX_AUDIO_CONFIG_MIDICONTROLTYPE::nStopTime	omx/openmax/OMX_Audio.h	/^    OMX_U32 nStopTime;            \/**< Time in milliseconds to indicate when playback $/;"	m	struct:OMX_AUDIO_CONFIG_MIDICONTROLTYPE	access:public
OMX_AUDIO_CONFIG_MIDICONTROLTYPE::nTrack0031MuteMask	omx/openmax/OMX_Audio.h	/^    OMX_U32 nTrack0031MuteMask;   \/**< 32 bit mask for track mute status. Note: This is for tracks 0-31 *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDICONTROLTYPE	access:public
OMX_AUDIO_CONFIG_MIDICONTROLTYPE::nTrack0031SoloMask	omx/openmax/OMX_Audio.h	/^    OMX_U32 nTrack0031SoloMask;   \/**< 32 bit mask for track solo status. Note: This is for tracks 0-31 *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDICONTROLTYPE	access:public
OMX_AUDIO_CONFIG_MIDICONTROLTYPE::nTrack3263MuteMask	omx/openmax/OMX_Audio.h	/^    OMX_U32 nTrack3263MuteMask;   \/**< 32 bit mask for track mute status. Note: This is for tracks 32-63 *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDICONTROLTYPE	access:public
OMX_AUDIO_CONFIG_MIDICONTROLTYPE::nTrack3263SoloMask	omx/openmax/OMX_Audio.h	/^    OMX_U32 nTrack3263SoloMask;   \/**< 32 bit mask for track solo status. Note: This is for tracks 32-63 *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDICONTROLTYPE	access:public
OMX_AUDIO_CONFIG_MIDICONTROLTYPE::nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;     \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDICONTROLTYPE	access:public
OMX_AUDIO_CONFIG_MIDICONTROLTYPE::sPitchTransposition	omx/openmax/OMX_Audio.h	/^    OMX_BS32 sPitchTransposition; \/**< Pitch transposition in semitones, stored as Q22.10 $/;"	m	struct:OMX_AUDIO_CONFIG_MIDICONTROLTYPE	access:public
OMX_AUDIO_CONFIG_MIDICONTROLTYPE::sPlayBackRate	omx/openmax/OMX_Audio.h	/^    OMX_BU32 sPlayBackRate;       \/**< Relative playback rate, stored as Q14.17 fixed-point$/;"	m	struct:OMX_AUDIO_CONFIG_MIDICONTROLTYPE	access:public
OMX_AUDIO_CONFIG_MIDICONTROLTYPE::sTempo	omx/openmax/OMX_Audio.h	/^    OMX_BU32 sTempo ;             \/**< Tempo in beats per minute (BPM), stored as Q22.10 $/;"	m	struct:OMX_AUDIO_CONFIG_MIDICONTROLTYPE	access:public
OMX_AUDIO_CONFIG_MIDIIMMEDIATEEVENTTYPE	omx/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_CONFIG_MIDIIMMEDIATEEVENTTYPE {$/;"	s
OMX_AUDIO_CONFIG_MIDIIMMEDIATEEVENTTYPE	omx/openmax/OMX_Audio.h	/^} OMX_AUDIO_CONFIG_MIDIIMMEDIATEEVENTTYPE;$/;"	t	typeref:struct:OMX_AUDIO_CONFIG_MIDIIMMEDIATEEVENTTYPE
OMX_AUDIO_CONFIG_MIDIIMMEDIATEEVENTTYPE::nMidiEventSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nMidiEventSize;   \/**< Size of immediate MIDI events or MIP message in bytes  *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDIIMMEDIATEEVENTTYPE	access:public
OMX_AUDIO_CONFIG_MIDIIMMEDIATEEVENTTYPE::nMidiEvents	omx/openmax/OMX_Audio.h	/^    OMX_U8 nMidiEvents[1];    \/**< MIDI event array to be rendered immediately, or an$/;"	m	struct:OMX_AUDIO_CONFIG_MIDIIMMEDIATEEVENTTYPE	access:public
OMX_AUDIO_CONFIG_MIDIIMMEDIATEEVENTTYPE::nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;       \/**< Port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDIIMMEDIATEEVENTTYPE	access:public
OMX_AUDIO_CONFIG_MIDIIMMEDIATEEVENTTYPE::nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;            \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDIIMMEDIATEEVENTTYPE	access:public
OMX_AUDIO_CONFIG_MIDIIMMEDIATEEVENTTYPE::nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion; \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDIIMMEDIATEEVENTTYPE	access:public
OMX_AUDIO_CONFIG_MIDIMETAEVENTDATATYPE	omx/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_CONFIG_MIDIMETAEVENTDATATYPE{ $/;"	s
OMX_AUDIO_CONFIG_MIDIMETAEVENTDATATYPE::nData	omx/openmax/OMX_Audio.h	/^    OMX_U8 nData[1];          \/**< array of one or more bytes of meta data $/;"	m	struct:OMX_AUDIO_CONFIG_MIDIMETAEVENTDATATYPE	access:public
OMX_AUDIO_CONFIG_MIDIMETAEVENTDATATYPE::nIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nIndex;           \/**< Index of Meta Event *\/ $/;"	m	struct:OMX_AUDIO_CONFIG_MIDIMETAEVENTDATATYPE	access:public
OMX_AUDIO_CONFIG_MIDIMETAEVENTDATATYPE::nMetaEventSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nMetaEventSize;   \/**< size of the Meta Event in bytes *\/ $/;"	m	struct:OMX_AUDIO_CONFIG_MIDIMETAEVENTDATATYPE	access:public
OMX_AUDIO_CONFIG_MIDIMETAEVENTDATATYPE::nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;       \/**< port that this structure applies to *\/ $/;"	m	struct:OMX_AUDIO_CONFIG_MIDIMETAEVENTDATATYPE	access:public
OMX_AUDIO_CONFIG_MIDIMETAEVENTDATATYPE::nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;            \/**< size of the structure in bytes *\/ $/;"	m	struct:OMX_AUDIO_CONFIG_MIDIMETAEVENTDATATYPE	access:public
OMX_AUDIO_CONFIG_MIDIMETAEVENTDATATYPE::nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion; \/**< OMX specification version information *\/ $/;"	m	struct:OMX_AUDIO_CONFIG_MIDIMETAEVENTDATATYPE	access:public
OMX_AUDIO_CONFIG_MIDIMETAEVENTTYPE	omx/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_CONFIG_MIDIMETAEVENTTYPE{ $/;"	s
OMX_AUDIO_CONFIG_MIDIMETAEVENTTYPE	omx/openmax/OMX_Audio.h	/^} OMX_AUDIO_CONFIG_MIDIMETAEVENTTYPE; $/;"	t	typeref:struct:OMX_AUDIO_CONFIG_MIDIMETAEVENTTYPE
OMX_AUDIO_CONFIG_MIDIMETAEVENTTYPE::nIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nIndex;           \/**< Index of Meta Event *\/ $/;"	m	struct:OMX_AUDIO_CONFIG_MIDIMETAEVENTTYPE	access:public
OMX_AUDIO_CONFIG_MIDIMETAEVENTTYPE::nMetaEventSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nMetaEventSize;   \/**< size of the Meta Event in bytes *\/ $/;"	m	struct:OMX_AUDIO_CONFIG_MIDIMETAEVENTTYPE	access:public
OMX_AUDIO_CONFIG_MIDIMETAEVENTTYPE::nMetaEventType	omx/openmax/OMX_Audio.h	/^    OMX_U8 nMetaEventType;    \/**< Meta Event Type, 7bits (i.e. 0 - 127) *\/ $/;"	m	struct:OMX_AUDIO_CONFIG_MIDIMETAEVENTTYPE	access:public
OMX_AUDIO_CONFIG_MIDIMETAEVENTTYPE::nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;       \/**< port that this structure applies to *\/ $/;"	m	struct:OMX_AUDIO_CONFIG_MIDIMETAEVENTTYPE	access:public
OMX_AUDIO_CONFIG_MIDIMETAEVENTTYPE::nPosition	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPosition;        \/**< Position of the meta-event in milliseconds *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDIMETAEVENTTYPE	access:public
OMX_AUDIO_CONFIG_MIDIMETAEVENTTYPE::nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;            \/**< size of the structure in bytes *\/ $/;"	m	struct:OMX_AUDIO_CONFIG_MIDIMETAEVENTTYPE	access:public
OMX_AUDIO_CONFIG_MIDIMETAEVENTTYPE::nTrack	omx/openmax/OMX_Audio.h	/^    OMX_U32 nTrack;           \/**< track number for the meta event *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDIMETAEVENTTYPE	access:public
OMX_AUDIO_CONFIG_MIDIMETAEVENTTYPE::nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion; \/**< OMX specification version information *\/ $/;"	m	struct:OMX_AUDIO_CONFIG_MIDIMETAEVENTTYPE	access:public
OMX_AUDIO_CONFIG_MIDISOUNDBANKPROGRAMTYPE	omx/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_CONFIG_MIDISOUNDBANKPROGRAMTYPE {$/;"	s
OMX_AUDIO_CONFIG_MIDISOUNDBANKPROGRAMTYPE	omx/openmax/OMX_Audio.h	/^} OMX_AUDIO_CONFIG_MIDISOUNDBANKPROGRAMTYPE;$/;"	t	typeref:struct:OMX_AUDIO_CONFIG_MIDISOUNDBANKPROGRAMTYPE
OMX_AUDIO_CONFIG_MIDISOUNDBANKPROGRAMTYPE::nChannel	omx/openmax/OMX_Audio.h	/^    OMX_U32 nChannel;           \/**< Valid channel values range from 1 to 16 *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDISOUNDBANKPROGRAMTYPE	access:public
OMX_AUDIO_CONFIG_MIDISOUNDBANKPROGRAMTYPE::nIDProgram	omx/openmax/OMX_Audio.h	/^    OMX_U16 nIDProgram;         \/**< Valid program ID range is 1 to 128 *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDISOUNDBANKPROGRAMTYPE	access:public
OMX_AUDIO_CONFIG_MIDISOUNDBANKPROGRAMTYPE::nIDSoundBank	omx/openmax/OMX_Audio.h	/^    OMX_U16 nIDSoundBank;       \/**< Sound bank ID *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDISOUNDBANKPROGRAMTYPE	access:public
OMX_AUDIO_CONFIG_MIDISOUNDBANKPROGRAMTYPE::nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;         \/**< Port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDISOUNDBANKPROGRAMTYPE	access:public
OMX_AUDIO_CONFIG_MIDISOUNDBANKPROGRAMTYPE::nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;              \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDISOUNDBANKPROGRAMTYPE	access:public
OMX_AUDIO_CONFIG_MIDISOUNDBANKPROGRAMTYPE::nUserSoundBankIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nUserSoundBankIndex;\/**< User soundbank index, easier to access soundbanks $/;"	m	struct:OMX_AUDIO_CONFIG_MIDISOUNDBANKPROGRAMTYPE	access:public
OMX_AUDIO_CONFIG_MIDISOUNDBANKPROGRAMTYPE::nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;   \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDISOUNDBANKPROGRAMTYPE	access:public
OMX_AUDIO_CONFIG_MIDISTATUSTYPE	omx/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_CONFIG_MIDISTATUSTYPE {$/;"	s
OMX_AUDIO_CONFIG_MIDISTATUSTYPE	omx/openmax/OMX_Audio.h	/^} OMX_AUDIO_CONFIG_MIDISTATUSTYPE;$/;"	t	typeref:struct:OMX_AUDIO_CONFIG_MIDISTATUSTYPE
OMX_AUDIO_CONFIG_MIDISTATUSTYPE::bVibra	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bVibra;            \/**< Does Vibra track exist? NOTE: May not return a meaningful $/;"	m	struct:OMX_AUDIO_CONFIG_MIDISTATUSTYPE	access:public
OMX_AUDIO_CONFIG_MIDISTATUSTYPE::eMIDIPlayBackState	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_MIDIPLAYBACKSTATETYPE eMIDIPlayBackState;  \/**< MIDI playback state enumeration, read only field *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDISTATUSTYPE	access:public
OMX_AUDIO_CONFIG_MIDISTATUSTYPE::nDuration	omx/openmax/OMX_Audio.h	/^    OMX_U32 nDuration;          \/**< The length of the currently open MIDI resource $/;"	m	struct:OMX_AUDIO_CONFIG_MIDISTATUSTYPE	access:public
OMX_AUDIO_CONFIG_MIDISTATUSTYPE::nNumActiveVoices	omx/openmax/OMX_Audio.h	/^    OMX_U32 nNumActiveVoices;   \/**< Number of active voices in the currently playing $/;"	m	struct:OMX_AUDIO_CONFIG_MIDISTATUSTYPE	access:public
OMX_AUDIO_CONFIG_MIDISTATUSTYPE::nNumMetaEvents	omx/openmax/OMX_Audio.h	/^    OMX_U32 nNumMetaEvents;     \/**< Total number of MIDI Meta Events in the currently $/;"	m	struct:OMX_AUDIO_CONFIG_MIDISTATUSTYPE	access:public
OMX_AUDIO_CONFIG_MIDISTATUSTYPE::nNumTracks	omx/openmax/OMX_Audio.h	/^    OMX_U16 nNumTracks;         \/**< Number of MIDI tracks in the file, read only field. $/;"	m	struct:OMX_AUDIO_CONFIG_MIDISTATUSTYPE	access:public
OMX_AUDIO_CONFIG_MIDISTATUSTYPE::nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;         \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDISTATUSTYPE	access:public
OMX_AUDIO_CONFIG_MIDISTATUSTYPE::nPosition	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPosition;          \/**< Current Position of the MIDI resource being played $/;"	m	struct:OMX_AUDIO_CONFIG_MIDISTATUSTYPE	access:public
OMX_AUDIO_CONFIG_MIDISTATUSTYPE::nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;              \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDISTATUSTYPE	access:public
OMX_AUDIO_CONFIG_MIDISTATUSTYPE::nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;   \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDISTATUSTYPE	access:public
OMX_AUDIO_CONFIG_MUTETYPE	omx/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_CONFIG_MUTETYPE {$/;"	s
OMX_AUDIO_CONFIG_MUTETYPE	omx/openmax/OMX_Audio.h	/^} OMX_AUDIO_CONFIG_MUTETYPE;$/;"	t	typeref:struct:OMX_AUDIO_CONFIG_MUTETYPE
OMX_AUDIO_CONFIG_MUTETYPE::bMute	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bMute;             \/**< Mute setting for this port *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MUTETYPE	access:public
OMX_AUDIO_CONFIG_MUTETYPE::nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;         \/**< Port index indicating which port to $/;"	m	struct:OMX_AUDIO_CONFIG_MUTETYPE	access:public
OMX_AUDIO_CONFIG_MUTETYPE::nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;              \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MUTETYPE	access:public
OMX_AUDIO_CONFIG_MUTETYPE::nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;   \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MUTETYPE	access:public
OMX_AUDIO_CONFIG_NOISEREDUCTIONTYPE	omx/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_CONFIG_NOISEREDUCTIONTYPE {$/;"	s
OMX_AUDIO_CONFIG_NOISEREDUCTIONTYPE	omx/openmax/OMX_Audio.h	/^} OMX_AUDIO_CONFIG_NOISEREDUCTIONTYPE;$/;"	t	typeref:struct:OMX_AUDIO_CONFIG_NOISEREDUCTIONTYPE
OMX_AUDIO_CONFIG_NOISEREDUCTIONTYPE::bNoiseReduction	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bNoiseReduction;  \/**< Enable\/disable for noise reduction *\/$/;"	m	struct:OMX_AUDIO_CONFIG_NOISEREDUCTIONTYPE	access:public
OMX_AUDIO_CONFIG_NOISEREDUCTIONTYPE::nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;        \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_CONFIG_NOISEREDUCTIONTYPE	access:public
OMX_AUDIO_CONFIG_NOISEREDUCTIONTYPE::nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;             \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_CONFIG_NOISEREDUCTIONTYPE	access:public
OMX_AUDIO_CONFIG_NOISEREDUCTIONTYPE::nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;  \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_CONFIG_NOISEREDUCTIONTYPE	access:public
OMX_AUDIO_CONFIG_REVERBERATIONTYPE	omx/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_CONFIG_REVERBERATIONTYPE {$/;"	s
OMX_AUDIO_CONFIG_REVERBERATIONTYPE	omx/openmax/OMX_Audio.h	/^} OMX_AUDIO_CONFIG_REVERBERATIONTYPE;$/;"	t	typeref:struct:OMX_AUDIO_CONFIG_REVERBERATIONTYPE
OMX_AUDIO_CONFIG_REVERBERATIONTYPE::bEnable	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bEnable;             \/**< Enable\/disable for reverberation control *\/$/;"	m	struct:OMX_AUDIO_CONFIG_REVERBERATIONTYPE	access:public
OMX_AUDIO_CONFIG_REVERBERATIONTYPE::nDecayHighFreqRatio	omx/openmax/OMX_Audio.h	/^    OMX_BU32 nDecayHighFreqRatio; \/**< Ratio of high frequency decay time relative $/;"	m	struct:OMX_AUDIO_CONFIG_REVERBERATIONTYPE	access:public
OMX_AUDIO_CONFIG_REVERBERATIONTYPE::nDensity	omx/openmax/OMX_Audio.h	/^    OMX_U32 nDensity;             \/**< Modal density in the late reverberation decay,$/;"	m	struct:OMX_AUDIO_CONFIG_REVERBERATIONTYPE	access:public
OMX_AUDIO_CONFIG_REVERBERATIONTYPE::nDiffusion	omx/openmax/OMX_Audio.h	/^    OMX_U32 nDiffusion;           \/**< Echo density in the late reverberation decay,$/;"	m	struct:OMX_AUDIO_CONFIG_REVERBERATIONTYPE	access:public
OMX_AUDIO_CONFIG_REVERBERATIONTYPE::nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;           \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_CONFIG_REVERBERATIONTYPE	access:public
OMX_AUDIO_CONFIG_REVERBERATIONTYPE::nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;                \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_CONFIG_REVERBERATIONTYPE	access:public
OMX_AUDIO_CONFIG_REVERBERATIONTYPE::nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;     \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_CONFIG_REVERBERATIONTYPE	access:public
OMX_AUDIO_CONFIG_REVERBERATIONTYPE::sDecayTime	omx/openmax/OMX_Audio.h	/^    OMX_BU32 sDecayTime;          \/**< Late reverberation decay time at low$/;"	m	struct:OMX_AUDIO_CONFIG_REVERBERATIONTYPE	access:public
OMX_AUDIO_CONFIG_REVERBERATIONTYPE::sReferenceHighFreq	omx/openmax/OMX_Audio.h	/^    OMX_BU32 sReferenceHighFreq;  \/**< Reference high frequency in Hertz. This is $/;"	m	struct:OMX_AUDIO_CONFIG_REVERBERATIONTYPE	access:public
OMX_AUDIO_CONFIG_REVERBERATIONTYPE::sReflectionsDelay	omx/openmax/OMX_Audio.h	/^    OMX_BU32 sReflectionsDelay;   \/**< Delay time of the first reflection relative $/;"	m	struct:OMX_AUDIO_CONFIG_REVERBERATIONTYPE	access:public
OMX_AUDIO_CONFIG_REVERBERATIONTYPE::sReflectionsLevel	omx/openmax/OMX_Audio.h	/^    OMX_BS32 sReflectionsLevel;   \/**< Intensity level of early reflections$/;"	m	struct:OMX_AUDIO_CONFIG_REVERBERATIONTYPE	access:public
OMX_AUDIO_CONFIG_REVERBERATIONTYPE::sReverbDelay	omx/openmax/OMX_Audio.h	/^    OMX_BU32 sReverbDelay;        \/**< Time delay from the first early reflection $/;"	m	struct:OMX_AUDIO_CONFIG_REVERBERATIONTYPE	access:public
OMX_AUDIO_CONFIG_REVERBERATIONTYPE::sReverbLevel	omx/openmax/OMX_Audio.h	/^    OMX_BS32 sReverbLevel;        \/**< Intensity level of late reverberation$/;"	m	struct:OMX_AUDIO_CONFIG_REVERBERATIONTYPE	access:public
OMX_AUDIO_CONFIG_REVERBERATIONTYPE::sRoomHighFreqLevel	omx/openmax/OMX_Audio.h	/^    OMX_BS32 sRoomHighFreqLevel;  \/**< Attenuation at high frequencies$/;"	m	struct:OMX_AUDIO_CONFIG_REVERBERATIONTYPE	access:public
OMX_AUDIO_CONFIG_REVERBERATIONTYPE::sRoomLevel	omx/openmax/OMX_Audio.h	/^    OMX_BS32 sRoomLevel;          \/**< Intensity level for the whole room effect $/;"	m	struct:OMX_AUDIO_CONFIG_REVERBERATIONTYPE	access:public
OMX_AUDIO_CONFIG_STEREOWIDENINGTYPE	omx/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_CONFIG_STEREOWIDENINGTYPE {$/;"	s
OMX_AUDIO_CONFIG_STEREOWIDENINGTYPE	omx/openmax/OMX_Audio.h	/^} OMX_AUDIO_CONFIG_STEREOWIDENINGTYPE;$/;"	t	typeref:struct:OMX_AUDIO_CONFIG_STEREOWIDENINGTYPE
OMX_AUDIO_CONFIG_STEREOWIDENINGTYPE::bEnable	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bEnable;          \/**< Enable\/disable for stereo widening control *\/$/;"	m	struct:OMX_AUDIO_CONFIG_STEREOWIDENINGTYPE	access:public
OMX_AUDIO_CONFIG_STEREOWIDENINGTYPE::eWideningType	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_STEREOWIDENINGTYPE eWideningType; \/**< Stereo widening algorithm type *\/$/;"	m	struct:OMX_AUDIO_CONFIG_STEREOWIDENINGTYPE	access:public
OMX_AUDIO_CONFIG_STEREOWIDENINGTYPE::nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;        \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_CONFIG_STEREOWIDENINGTYPE	access:public
OMX_AUDIO_CONFIG_STEREOWIDENINGTYPE::nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;             \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_CONFIG_STEREOWIDENINGTYPE	access:public
OMX_AUDIO_CONFIG_STEREOWIDENINGTYPE::nStereoWidening	omx/openmax/OMX_Audio.h	/^    OMX_U32  nStereoWidening;  \/**< stereo widening setting for the port,$/;"	m	struct:OMX_AUDIO_CONFIG_STEREOWIDENINGTYPE	access:public
OMX_AUDIO_CONFIG_STEREOWIDENINGTYPE::nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;  \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_CONFIG_STEREOWIDENINGTYPE	access:public
OMX_AUDIO_CONFIG_TREBLETYPE	omx/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_CONFIG_TREBLETYPE {$/;"	s
OMX_AUDIO_CONFIG_TREBLETYPE	omx/openmax/OMX_Audio.h	/^} OMX_AUDIO_CONFIG_TREBLETYPE;$/;"	t	typeref:struct:OMX_AUDIO_CONFIG_TREBLETYPE
OMX_AUDIO_CONFIG_TREBLETYPE::bEnable	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bEnable;          \/**< Enable\/disable for treble control *\/$/;"	m	struct:OMX_AUDIO_CONFIG_TREBLETYPE	access:public
OMX_AUDIO_CONFIG_TREBLETYPE::nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;        \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_CONFIG_TREBLETYPE	access:public
OMX_AUDIO_CONFIG_TREBLETYPE::nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;             \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_CONFIG_TREBLETYPE	access:public
OMX_AUDIO_CONFIG_TREBLETYPE::nTreble	omx/openmax/OMX_Audio.h	/^    OMX_S32  nTreble;          \/**< treble setting for the port, as a$/;"	m	struct:OMX_AUDIO_CONFIG_TREBLETYPE	access:public
OMX_AUDIO_CONFIG_TREBLETYPE::nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;  \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_CONFIG_TREBLETYPE	access:public
OMX_AUDIO_CONFIG_VOLUMETYPE	omx/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_CONFIG_VOLUMETYPE {$/;"	s
OMX_AUDIO_CONFIG_VOLUMETYPE	omx/openmax/OMX_Audio.h	/^} OMX_AUDIO_CONFIG_VOLUMETYPE;$/;"	t	typeref:struct:OMX_AUDIO_CONFIG_VOLUMETYPE
OMX_AUDIO_CONFIG_VOLUMETYPE::bLinear	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bLinear;           \/**< Is the volume to be set in linear (0.100) $/;"	m	struct:OMX_AUDIO_CONFIG_VOLUMETYPE	access:public
OMX_AUDIO_CONFIG_VOLUMETYPE::nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;         \/**< Port index indicating which port to $/;"	m	struct:OMX_AUDIO_CONFIG_VOLUMETYPE	access:public
OMX_AUDIO_CONFIG_VOLUMETYPE::nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;              \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_CONFIG_VOLUMETYPE	access:public
OMX_AUDIO_CONFIG_VOLUMETYPE::nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;   \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_CONFIG_VOLUMETYPE	access:public
OMX_AUDIO_CONFIG_VOLUMETYPE::sVolume	omx/openmax/OMX_Audio.h	/^    OMX_BS32 sVolume;           \/**< Volume linear setting in the 0..100 range, OR$/;"	m	struct:OMX_AUDIO_CONFIG_VOLUMETYPE	access:public
OMX_AUDIO_CONFIG__MIDIMETAEVENTDATATYPE	omx/openmax/OMX_Audio.h	/^} OMX_AUDIO_CONFIG__MIDIMETAEVENTDATATYPE; $/;"	t	typeref:struct:OMX_AUDIO_CONFIG_MIDIMETAEVENTDATATYPE
OMX_AUDIO_ChannelCF	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_ChannelCF   = 0x3,    \/**< Center front *\/$/;"	e	enum:OMX_AUDIO_CHANNELTYPE
OMX_AUDIO_ChannelCS	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_ChannelCS   = 0x7,    \/**< Back surround *\/$/;"	e	enum:OMX_AUDIO_CHANNELTYPE
OMX_AUDIO_ChannelKhronosExtensions	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_ChannelKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_AUDIO_CHANNELTYPE
OMX_AUDIO_ChannelLF	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_ChannelLF   = 0x1,    \/**< Left front *\/$/;"	e	enum:OMX_AUDIO_CHANNELTYPE
OMX_AUDIO_ChannelLFE	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_ChannelLFE  = 0x6,    \/**< Low frequency effects *\/$/;"	e	enum:OMX_AUDIO_CHANNELTYPE
OMX_AUDIO_ChannelLR	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_ChannelLR   = 0x8,    \/**< Left rear. *\/$/;"	e	enum:OMX_AUDIO_CHANNELTYPE
OMX_AUDIO_ChannelLS	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_ChannelLS   = 0x4,    \/**< Left surround *\/$/;"	e	enum:OMX_AUDIO_CHANNELTYPE
OMX_AUDIO_ChannelMax	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_ChannelMax  = 0x7FFFFFFF $/;"	e	enum:OMX_AUDIO_CHANNELTYPE
OMX_AUDIO_ChannelModeDual	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_ChannelModeDual,        \/**< 2 mono-channels, each channel is encoded with half $/;"	e	enum:OMX_AUDIO_CHANNELMODETYPE
OMX_AUDIO_ChannelModeJointStereo	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_ChannelModeJointStereo, \/**< mode that takes advantage of what is common between $/;"	e	enum:OMX_AUDIO_CHANNELMODETYPE
OMX_AUDIO_ChannelModeKhronosExtensions	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_ChannelModeKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_AUDIO_CHANNELMODETYPE
OMX_AUDIO_ChannelModeMax	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_ChannelModeMax = 0x7FFFFFFF$/;"	e	enum:OMX_AUDIO_CHANNELMODETYPE
OMX_AUDIO_ChannelModeMono	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_ChannelModeMono,        \/**< Mono channel mode *\/$/;"	e	enum:OMX_AUDIO_CHANNELMODETYPE
OMX_AUDIO_ChannelModeStereo	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_ChannelModeStereo = 0,  \/**< 2 channels, the bitrate allocation between those $/;"	e	enum:OMX_AUDIO_CHANNELMODETYPE
OMX_AUDIO_ChannelModeVendorStartUnused	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_ChannelModeVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_AUDIO_CHANNELMODETYPE
OMX_AUDIO_ChannelNone	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_ChannelNone = 0x0,    \/**< Unused or empty *\/$/;"	e	enum:OMX_AUDIO_CHANNELTYPE
OMX_AUDIO_ChannelRF	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_ChannelRF   = 0x2,    \/**< Right front *\/$/;"	e	enum:OMX_AUDIO_CHANNELTYPE
OMX_AUDIO_ChannelRR	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_ChannelRR   = 0x9,    \/**< Right rear. *\/$/;"	e	enum:OMX_AUDIO_CHANNELTYPE
OMX_AUDIO_ChannelRS	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_ChannelRS   = 0x5,    \/**< Right surround *\/$/;"	e	enum:OMX_AUDIO_CHANNELTYPE
OMX_AUDIO_ChannelVendorStartUnused	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_ChannelVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_AUDIO_CHANNELTYPE
OMX_AUDIO_CodingAAC	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingAAC,         \/**< Any variant of AAC encoded data *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingADPCM	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingADPCM,       \/**< Any variant of ADPCM encoded data *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingAMR	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingAMR,         \/**< Any variant of AMR encoded data *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingAutoDetect	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingAutoDetect,  \/**< auto detection of audio format *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingEVRC	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingEVRC,        \/**< Any variant of EVRC encoded data *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingG711	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingG711,        \/**< Any variant of G.711 encoded data *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingG723	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingG723,        \/**< Any variant of G.723 dot 1 encoded data *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingG726	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingG726,        \/**< Any variant of G.726 encoded data *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingG729	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingG729,        \/**< Any variant of G.729 encoded data *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingGSMEFR	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingGSMEFR,      \/**< Any variant of GSM Enhanced Fullrate encoded data*\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingGSMFR	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingGSMFR,       \/**< Any variant of GSM fullrate (i.e. GSM610) *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingGSMHR	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingGSMHR,       \/**< Any variant of GSM Halfrate encoded data *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingKhronosExtensions	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingMIDI	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingMIDI,        \/**< Any variant of MIDI encoded data *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingMP3	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingMP3,         \/**< Any variant of MP3 encoded data *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingMax	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingMax = 0x7FFFFFFF$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingPCM	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingPCM,         \/**< Any variant of PCM coding *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingPDCEFR	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingPDCEFR,      \/**< Any variant of PDC Enhanced Fullrate encoded data *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingPDCFR	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingPDCFR,       \/**< Any variant of PDC Fullrate encoded data *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingPDCHR	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingPDCHR,       \/**< Any variant of PDC Halfrate encoded data *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingQCELP13	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingQCELP13,     \/**< Any variant of QCELP 13kbps encoded data *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingQCELP8	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingQCELP8,      \/**< Any variant of QCELP 8kbps encoded data *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingRA	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingRA,          \/**< Any variant of RA encoded data *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingSBC	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingSBC,         \/**< Any variant of SBC encoded data *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingSMV	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingSMV,         \/**< Any variant of SMV encoded data *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingTDMAEFR	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingTDMAEFR,     \/**< Any variant of TDMA Enhanced Fullrate encoded data (TIA\/EIA-136-410) *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingTDMAFR	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingTDMAFR,      \/**< Any variant of TDMA Fullrate encoded data (TIA\/EIA-136-420) *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingUnused	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingUnused = 0,  \/**< Placeholder value when coding is N\/A  *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingVORBIS	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingVORBIS,      \/**< Any variant of VORBIS encoded data *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingVendorStartUnused	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingWMA	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingWMA,         \/**< Any variant of WMA encoded data *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_ECHOCANTYPE	omx/openmax/OMX_Audio.h	/^typedef enum OMX_AUDIO_ECHOCANTYPE {$/;"	g
OMX_AUDIO_ECHOCANTYPE	omx/openmax/OMX_Audio.h	/^} OMX_AUDIO_ECHOCANTYPE;$/;"	t	typeref:enum:OMX_AUDIO_ECHOCANTYPE
OMX_AUDIO_EchoCanCarKit	omx/openmax/OMX_Audio.h	/^   OMX_AUDIO_EchoCanCarKit,    \/**< Echo Cancellation optimized for $/;"	e	enum:OMX_AUDIO_ECHOCANTYPE
OMX_AUDIO_EchoCanHFree	omx/openmax/OMX_Audio.h	/^   OMX_AUDIO_EchoCanHFree,      \/**< Echo Cancellation optimized for $/;"	e	enum:OMX_AUDIO_ECHOCANTYPE
OMX_AUDIO_EchoCanKhronosExtensions	omx/openmax/OMX_Audio.h	/^   OMX_AUDIO_EchoCanKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_AUDIO_ECHOCANTYPE
OMX_AUDIO_EchoCanMax	omx/openmax/OMX_Audio.h	/^   OMX_AUDIO_EchoCanMax = 0x7FFFFFFF$/;"	e	enum:OMX_AUDIO_ECHOCANTYPE
OMX_AUDIO_EchoCanNormal	omx/openmax/OMX_Audio.h	/^   OMX_AUDIO_EchoCanNormal,     \/**< Echo Cancellation normal operation - $/;"	e	enum:OMX_AUDIO_ECHOCANTYPE
OMX_AUDIO_EchoCanOff	omx/openmax/OMX_Audio.h	/^   OMX_AUDIO_EchoCanOff = 0,    \/**< Echo Cancellation is disabled *\/$/;"	e	enum:OMX_AUDIO_ECHOCANTYPE
OMX_AUDIO_EchoCanVendorStartUnused	omx/openmax/OMX_Audio.h	/^   OMX_AUDIO_EchoCanVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_AUDIO_ECHOCANTYPE
OMX_AUDIO_G723ModeHigh	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_G723ModeHigh,        \/**< 6300 bps *\/$/;"	e	enum:OMX_AUDIO_G723RATE
OMX_AUDIO_G723ModeKhronosExtensions	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_G723ModeKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_AUDIO_G723RATE
OMX_AUDIO_G723ModeLow	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_G723ModeLow,         \/**< 5300 bps *\/$/;"	e	enum:OMX_AUDIO_G723RATE
OMX_AUDIO_G723ModeMax	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_G723ModeMax = 0x7FFFFFFF$/;"	e	enum:OMX_AUDIO_G723RATE
OMX_AUDIO_G723ModeUnused	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_G723ModeUnused = 0,  \/**< AMRNB Mode unused \/ unknown *\/$/;"	e	enum:OMX_AUDIO_G723RATE
OMX_AUDIO_G723ModeVendorStartUnused	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_G723ModeVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_AUDIO_G723RATE
OMX_AUDIO_G723RATE	omx/openmax/OMX_Audio.h	/^typedef enum OMX_AUDIO_G723RATE {$/;"	g
OMX_AUDIO_G723RATE	omx/openmax/OMX_Audio.h	/^} OMX_AUDIO_G723RATE;$/;"	t	typeref:enum:OMX_AUDIO_G723RATE
OMX_AUDIO_G726MODE	omx/openmax/OMX_Audio.h	/^typedef enum OMX_AUDIO_G726MODE {$/;"	g
OMX_AUDIO_G726MODE	omx/openmax/OMX_Audio.h	/^} OMX_AUDIO_G726MODE;$/;"	t	typeref:enum:OMX_AUDIO_G726MODE
OMX_AUDIO_G726Mode16	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_G726Mode16,          \/**< 16 kbps *\/$/;"	e	enum:OMX_AUDIO_G726MODE
OMX_AUDIO_G726Mode24	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_G726Mode24,          \/**< 24 kbps *\/$/;"	e	enum:OMX_AUDIO_G726MODE
OMX_AUDIO_G726Mode32	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_G726Mode32,          \/**< 32 kbps, most common rate, also G721 *\/$/;"	e	enum:OMX_AUDIO_G726MODE
OMX_AUDIO_G726Mode40	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_G726Mode40,          \/**< 40 kbps *\/$/;"	e	enum:OMX_AUDIO_G726MODE
OMX_AUDIO_G726ModeKhronosExtensions	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_G726ModeKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_AUDIO_G726MODE
OMX_AUDIO_G726ModeMax	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_G726ModeMax = 0x7FFFFFFF$/;"	e	enum:OMX_AUDIO_G726MODE
OMX_AUDIO_G726ModeUnused	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_G726ModeUnused = 0,  \/**< G726 Mode unused \/ unknown *\/$/;"	e	enum:OMX_AUDIO_G726MODE
OMX_AUDIO_G726ModeVendorStartUnused	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_G726ModeVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_AUDIO_G726MODE
OMX_AUDIO_G729	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_G729 = 0,           \/**< ITU G.729  encoded data *\/$/;"	e	enum:OMX_AUDIO_G729TYPE
OMX_AUDIO_G729A	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_G729A,              \/**< ITU G.729 annex A  encoded data *\/$/;"	e	enum:OMX_AUDIO_G729TYPE
OMX_AUDIO_G729AB	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_G729AB,             \/**< ITU G.729 annexes A and B encoded data *\/$/;"	e	enum:OMX_AUDIO_G729TYPE
OMX_AUDIO_G729B	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_G729B,              \/**< ITU G.729 with annex B encoded data *\/$/;"	e	enum:OMX_AUDIO_G729TYPE
OMX_AUDIO_G729KhronosExtensions	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_G729KhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_AUDIO_G729TYPE
OMX_AUDIO_G729Max	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_G729Max = 0x7FFFFFFF$/;"	e	enum:OMX_AUDIO_G729TYPE
OMX_AUDIO_G729TYPE	omx/openmax/OMX_Audio.h	/^typedef enum OMX_AUDIO_G729TYPE {$/;"	g
OMX_AUDIO_G729TYPE	omx/openmax/OMX_Audio.h	/^} OMX_AUDIO_G729TYPE;$/;"	t	typeref:enum:OMX_AUDIO_G729TYPE
OMX_AUDIO_G729VendorStartUnused	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_G729VendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_AUDIO_G729TYPE
OMX_AUDIO_MAXCHANNELS	omx/openmax/OMX_Audio.h	155;"	d
OMX_AUDIO_MIDIFORMATTYPE	omx/openmax/OMX_Audio.h	/^typedef enum OMX_AUDIO_MIDIFORMATTYPE$/;"	g
OMX_AUDIO_MIDIFORMATTYPE	omx/openmax/OMX_Audio.h	/^} OMX_AUDIO_MIDIFORMATTYPE;$/;"	t	typeref:enum:OMX_AUDIO_MIDIFORMATTYPE
OMX_AUDIO_MIDIFormatKhronosExtensions	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_MIDIFormatKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_AUDIO_MIDIFORMATTYPE
OMX_AUDIO_MIDIFormatMax	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_MIDIFormatMax = 0x7FFFFFFF$/;"	e	enum:OMX_AUDIO_MIDIFORMATTYPE
OMX_AUDIO_MIDIFormatMobileXMF	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_MIDIFormatMobileXMF,   \/**< Mobile XMF (eXtensible Music Format type 2) *\/$/;"	e	enum:OMX_AUDIO_MIDIFORMATTYPE
OMX_AUDIO_MIDIFormatSMF0	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_MIDIFormatSMF0,        \/**< Standard MIDI File Type 0 *\/$/;"	e	enum:OMX_AUDIO_MIDIFORMATTYPE
OMX_AUDIO_MIDIFormatSMF1	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_MIDIFormatSMF1,        \/**< Standard MIDI File Type 1 *\/$/;"	e	enum:OMX_AUDIO_MIDIFORMATTYPE
OMX_AUDIO_MIDIFormatSMF2	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_MIDIFormatSMF2,        \/**< Standard MIDI File Type 2 *\/$/;"	e	enum:OMX_AUDIO_MIDIFORMATTYPE
OMX_AUDIO_MIDIFormatSPMIDI	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_MIDIFormatSPMIDI,      \/**< SP-MIDI *\/$/;"	e	enum:OMX_AUDIO_MIDIFORMATTYPE
OMX_AUDIO_MIDIFormatUnknown	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_MIDIFormatUnknown = 0, \/**< MIDI Format unknown or don't care *\/$/;"	e	enum:OMX_AUDIO_MIDIFORMATTYPE
OMX_AUDIO_MIDIFormatVendorStartUnused	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_MIDIFormatVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_AUDIO_MIDIFORMATTYPE
OMX_AUDIO_MIDIFormatXMF0	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_MIDIFormatXMF0,        \/**< eXtensible Music Format type 0 *\/$/;"	e	enum:OMX_AUDIO_MIDIFORMATTYPE
OMX_AUDIO_MIDIFormatXMF1	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_MIDIFormatXMF1,        \/**< eXtensible Music Format type 1 *\/$/;"	e	enum:OMX_AUDIO_MIDIFORMATTYPE
OMX_AUDIO_MIDIPLAYBACKSTATETYPE	omx/openmax/OMX_Audio.h	/^typedef enum OMX_AUDIO_MIDIPLAYBACKSTATETYPE {$/;"	g
OMX_AUDIO_MIDIPLAYBACKSTATETYPE	omx/openmax/OMX_Audio.h	/^} OMX_AUDIO_MIDIPLAYBACKSTATETYPE;$/;"	t	typeref:enum:OMX_AUDIO_MIDIPLAYBACKSTATETYPE
OMX_AUDIO_MIDIPlayBackStateClosedEngaged	omx/openmax/OMX_Audio.h	/^  OMX_AUDIO_MIDIPlayBackStateClosedEngaged,    \/**< No MIDI resource is currently open. $/;"	e	enum:OMX_AUDIO_MIDIPLAYBACKSTATETYPE
OMX_AUDIO_MIDIPlayBackStateKhronosExtensions	omx/openmax/OMX_Audio.h	/^  OMX_AUDIO_MIDIPlayBackStateKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_AUDIO_MIDIPLAYBACKSTATETYPE
OMX_AUDIO_MIDIPlayBackStateMax	omx/openmax/OMX_Audio.h	/^  OMX_AUDIO_MIDIPlayBackStateMax = 0x7FFFFFFF$/;"	e	enum:OMX_AUDIO_MIDIPLAYBACKSTATETYPE
OMX_AUDIO_MIDIPlayBackStateOpenEngaged	omx/openmax/OMX_Audio.h	/^  OMX_AUDIO_MIDIPlayBackStateOpenEngaged,      \/**< A MIDI resource is open and primed but $/;"	e	enum:OMX_AUDIO_MIDIPLAYBACKSTATETYPE
OMX_AUDIO_MIDIPlayBackStateParsing	omx/openmax/OMX_Audio.h	/^  OMX_AUDIO_MIDIPlayBackStateParsing,          \/**< A MIDI resource is open and is being $/;"	e	enum:OMX_AUDIO_MIDIPLAYBACKSTATETYPE
OMX_AUDIO_MIDIPlayBackStatePlaying	omx/openmax/OMX_Audio.h	/^  OMX_AUDIO_MIDIPlayBackStatePlaying,          \/**< A MIDI resource is open and currently$/;"	e	enum:OMX_AUDIO_MIDIPLAYBACKSTATETYPE
OMX_AUDIO_MIDIPlayBackStatePlayingPartially	omx/openmax/OMX_Audio.h	/^  OMX_AUDIO_MIDIPlayBackStatePlayingPartially, \/**< Best-effort playback due to SP-MIDI\/DLS$/;"	e	enum:OMX_AUDIO_MIDIPLAYBACKSTATETYPE
OMX_AUDIO_MIDIPlayBackStatePlayingSilently	omx/openmax/OMX_Audio.h	/^  OMX_AUDIO_MIDIPlayBackStatePlayingSilently,  \/**< Due to system resource constraints and$/;"	e	enum:OMX_AUDIO_MIDIPLAYBACKSTATETYPE
OMX_AUDIO_MIDIPlayBackStateUnknown	omx/openmax/OMX_Audio.h	/^  OMX_AUDIO_MIDIPlayBackStateUnknown = 0,      \/**< Unknown state or state does not map to $/;"	e	enum:OMX_AUDIO_MIDIPLAYBACKSTATETYPE
OMX_AUDIO_MIDIPlayBackStateVendorStartUnused	omx/openmax/OMX_Audio.h	/^  OMX_AUDIO_MIDIPlayBackStateVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_AUDIO_MIDIPLAYBACKSTATETYPE
OMX_AUDIO_MIDISOUNDBANKLAYOUTTYPE	omx/openmax/OMX_Audio.h	/^typedef enum OMX_AUDIO_MIDISOUNDBANKLAYOUTTYPE {$/;"	g
OMX_AUDIO_MIDISOUNDBANKLAYOUTTYPE	omx/openmax/OMX_Audio.h	/^} OMX_AUDIO_MIDISOUNDBANKLAYOUTTYPE;$/;"	t	typeref:enum:OMX_AUDIO_MIDISOUNDBANKLAYOUTTYPE
OMX_AUDIO_MIDISOUNDBANKTYPE	omx/openmax/OMX_Audio.h	/^typedef enum OMX_AUDIO_MIDISOUNDBANKTYPE {$/;"	g
OMX_AUDIO_MIDISOUNDBANKTYPE	omx/openmax/OMX_Audio.h	/^} OMX_AUDIO_MIDISOUNDBANKTYPE;$/;"	t	typeref:enum:OMX_AUDIO_MIDISOUNDBANKTYPE
OMX_AUDIO_MIDISoundBankDLS1	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_MIDISoundBankDLS1,                 \/**< DLS version 1 *\/$/;"	e	enum:OMX_AUDIO_MIDISOUNDBANKTYPE
OMX_AUDIO_MIDISoundBankDLS2	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_MIDISoundBankDLS2,                 \/**< DLS version 2 *\/$/;"	e	enum:OMX_AUDIO_MIDISOUNDBANKTYPE
OMX_AUDIO_MIDISoundBankKhronosExtensions	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_MIDISoundBankKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_AUDIO_MIDISOUNDBANKTYPE
OMX_AUDIO_MIDISoundBankLayoutGM	omx/openmax/OMX_Audio.h	/^   OMX_AUDIO_MIDISoundBankLayoutGM,           \/**< GS layout (based on bank MSB 0x00) *\/$/;"	e	enum:OMX_AUDIO_MIDISOUNDBANKLAYOUTTYPE
OMX_AUDIO_MIDISoundBankLayoutGM2	omx/openmax/OMX_Audio.h	/^   OMX_AUDIO_MIDISoundBankLayoutGM2,          \/**< General MIDI 2 layout (using MSB 0x78\/0x79, LSB 0x00) *\/$/;"	e	enum:OMX_AUDIO_MIDISOUNDBANKLAYOUTTYPE
OMX_AUDIO_MIDISoundBankLayoutKhronosExtensions	omx/openmax/OMX_Audio.h	/^   OMX_AUDIO_MIDISoundBankLayoutKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_AUDIO_MIDISOUNDBANKLAYOUTTYPE
OMX_AUDIO_MIDISoundBankLayoutMax	omx/openmax/OMX_Audio.h	/^   OMX_AUDIO_MIDISoundBankLayoutMax = 0x7FFFFFFF$/;"	e	enum:OMX_AUDIO_MIDISOUNDBANKLAYOUTTYPE
OMX_AUDIO_MIDISoundBankLayoutUnused	omx/openmax/OMX_Audio.h	/^   OMX_AUDIO_MIDISoundBankLayoutUnused = 0,   \/**< unused\/unknown soundbank type *\/$/;"	e	enum:OMX_AUDIO_MIDISOUNDBANKLAYOUTTYPE
OMX_AUDIO_MIDISoundBankLayoutUser	omx/openmax/OMX_Audio.h	/^   OMX_AUDIO_MIDISoundBankLayoutUser,         \/**< Does not conform to any bank numbering standards *\/$/;"	e	enum:OMX_AUDIO_MIDISOUNDBANKLAYOUTTYPE
OMX_AUDIO_MIDISoundBankLayoutVendorStartUnused	omx/openmax/OMX_Audio.h	/^   OMX_AUDIO_MIDISoundBankLayoutVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_AUDIO_MIDISOUNDBANKLAYOUTTYPE
OMX_AUDIO_MIDISoundBankMax	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_MIDISoundBankMax = 0x7FFFFFFF$/;"	e	enum:OMX_AUDIO_MIDISOUNDBANKTYPE
OMX_AUDIO_MIDISoundBankMobileDLSBase	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_MIDISoundBankMobileDLSBase,        \/**< Mobile DLS, using the base functionality *\/$/;"	e	enum:OMX_AUDIO_MIDISOUNDBANKTYPE
OMX_AUDIO_MIDISoundBankMobileDLSPlusOptions	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_MIDISoundBankMobileDLSPlusOptions, \/**< Mobile DLS, using the specification-defined optional feature set *\/$/;"	e	enum:OMX_AUDIO_MIDISOUNDBANKTYPE
OMX_AUDIO_MIDISoundBankUnused	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_MIDISoundBankUnused = 0,           \/**< unused\/unknown soundbank type *\/$/;"	e	enum:OMX_AUDIO_MIDISOUNDBANKTYPE
OMX_AUDIO_MIDISoundBankVendorStartUnused	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_MIDISoundBankVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_AUDIO_MIDISOUNDBANKTYPE
OMX_AUDIO_MP3STREAMFORMATTYPE	omx/openmax/OMX_Audio.h	/^typedef enum OMX_AUDIO_MP3STREAMFORMATTYPE {$/;"	g
OMX_AUDIO_MP3STREAMFORMATTYPE	omx/openmax/OMX_Audio.h	/^} OMX_AUDIO_MP3STREAMFORMATTYPE;$/;"	t	typeref:enum:OMX_AUDIO_MP3STREAMFORMATTYPE
OMX_AUDIO_MP3StreamFormatKhronosExtensions	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_MP3StreamFormatKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_AUDIO_MP3STREAMFORMATTYPE
OMX_AUDIO_MP3StreamFormatMP1Layer3	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_MP3StreamFormatMP1Layer3 = 0, \/**< MP3 Audio MPEG 1 Layer 3 Stream format *\/$/;"	e	enum:OMX_AUDIO_MP3STREAMFORMATTYPE
OMX_AUDIO_MP3StreamFormatMP2Layer3	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_MP3StreamFormatMP2Layer3,     \/**< MP3 Audio MPEG 2 Layer 3 Stream format *\/$/;"	e	enum:OMX_AUDIO_MP3STREAMFORMATTYPE
OMX_AUDIO_MP3StreamFormatMP2_5Layer3	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_MP3StreamFormatMP2_5Layer3,   \/**< MP3 Audio MPEG2.5 Layer 3 Stream format *\/$/;"	e	enum:OMX_AUDIO_MP3STREAMFORMATTYPE
OMX_AUDIO_MP3StreamFormatMax	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_MP3StreamFormatMax = 0x7FFFFFFF$/;"	e	enum:OMX_AUDIO_MP3STREAMFORMATTYPE
OMX_AUDIO_MP3StreamFormatVendorStartUnused	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_MP3StreamFormatVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_AUDIO_MP3STREAMFORMATTYPE
OMX_AUDIO_PARAM_AACPROFILETYPE	omx/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_AACPROFILETYPE {$/;"	s
OMX_AUDIO_PARAM_AACPROFILETYPE	omx/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_AACPROFILETYPE;$/;"	t	typeref:struct:OMX_AUDIO_PARAM_AACPROFILETYPE
OMX_AUDIO_PARAM_AACPROFILETYPE::eAACProfile	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_AACPROFILETYPE eAACProfile;   \/**< AAC profile enumeration *\/$/;"	m	struct:OMX_AUDIO_PARAM_AACPROFILETYPE	access:public
OMX_AUDIO_PARAM_AACPROFILETYPE::eAACStreamFormat	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_AACSTREAMFORMATTYPE eAACStreamFormat; \/**< AAC stream format enumeration *\/$/;"	m	struct:OMX_AUDIO_PARAM_AACPROFILETYPE	access:public
OMX_AUDIO_PARAM_AACPROFILETYPE::eChannelMode	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_CHANNELMODETYPE eChannelMode;   \/**< Channel mode enumeration *\/$/;"	m	struct:OMX_AUDIO_PARAM_AACPROFILETYPE	access:public
OMX_AUDIO_PARAM_AACPROFILETYPE::nAACERtools	omx/openmax/OMX_Audio.h	/^    OMX_U32 nAACERtools;           \/**< MPEG-4 AAC error resilience tool usage *\/$/;"	m	struct:OMX_AUDIO_PARAM_AACPROFILETYPE	access:public
OMX_AUDIO_PARAM_AACPROFILETYPE::nAACtools	omx/openmax/OMX_Audio.h	/^    OMX_U32 nAACtools;             \/**< AAC tool usage *\/$/;"	m	struct:OMX_AUDIO_PARAM_AACPROFILETYPE	access:public
OMX_AUDIO_PARAM_AACPROFILETYPE::nAudioBandWidth	omx/openmax/OMX_Audio.h	/^    OMX_U32 nAudioBandWidth;       \/**< Audio band width (in Hz) to which an encoder should$/;"	m	struct:OMX_AUDIO_PARAM_AACPROFILETYPE	access:public
OMX_AUDIO_PARAM_AACPROFILETYPE::nBitRate	omx/openmax/OMX_Audio.h	/^    OMX_U32 nBitRate;              \/**< Bit rate of the input data.  Use 0 for variable$/;"	m	struct:OMX_AUDIO_PARAM_AACPROFILETYPE	access:public
OMX_AUDIO_PARAM_AACPROFILETYPE::nChannels	omx/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;             \/**< Number of channels *\/$/;"	m	struct:OMX_AUDIO_PARAM_AACPROFILETYPE	access:public
OMX_AUDIO_PARAM_AACPROFILETYPE::nFrameLength	omx/openmax/OMX_Audio.h	/^    OMX_U32 nFrameLength;          \/**< Frame length (in audio samples per channel) of the codec.$/;"	m	struct:OMX_AUDIO_PARAM_AACPROFILETYPE	access:public
OMX_AUDIO_PARAM_AACPROFILETYPE::nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;            \/**< Port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_AACPROFILETYPE	access:public
OMX_AUDIO_PARAM_AACPROFILETYPE::nSampleRate	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSampleRate;           \/**< Sampling rate of the source data.  Use 0 for$/;"	m	struct:OMX_AUDIO_PARAM_AACPROFILETYPE	access:public
OMX_AUDIO_PARAM_AACPROFILETYPE::nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;                 \/**< Size of this structure, in Bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_AACPROFILETYPE	access:public
OMX_AUDIO_PARAM_AACPROFILETYPE::nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;      \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_AACPROFILETYPE	access:public
OMX_AUDIO_PARAM_ADPCMTYPE	omx/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_ADPCMTYPE { $/;"	s
OMX_AUDIO_PARAM_ADPCMTYPE	omx/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_ADPCMTYPE; $/;"	t	typeref:struct:OMX_AUDIO_PARAM_ADPCMTYPE
OMX_AUDIO_PARAM_ADPCMTYPE::nBitsPerSample	omx/openmax/OMX_Audio.h	/^    OMX_U32 nBitsPerSample;     \/**< Number of bits in each sample *\/ $/;"	m	struct:OMX_AUDIO_PARAM_ADPCMTYPE	access:public
OMX_AUDIO_PARAM_ADPCMTYPE::nChannels	omx/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;          \/**< Number of channels in the data stream (not $/;"	m	struct:OMX_AUDIO_PARAM_ADPCMTYPE	access:public
OMX_AUDIO_PARAM_ADPCMTYPE::nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;         \/**< port that this structure applies to *\/ $/;"	m	struct:OMX_AUDIO_PARAM_ADPCMTYPE	access:public
OMX_AUDIO_PARAM_ADPCMTYPE::nSampleRate	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSampleRate;        \/**< Sampling rate of the source data.  Use 0 for $/;"	m	struct:OMX_AUDIO_PARAM_ADPCMTYPE	access:public
OMX_AUDIO_PARAM_ADPCMTYPE::nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;              \/**< size of the structure in bytes *\/ $/;"	m	struct:OMX_AUDIO_PARAM_ADPCMTYPE	access:public
OMX_AUDIO_PARAM_ADPCMTYPE::nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;   \/**< OMX specification version information *\/ $/;"	m	struct:OMX_AUDIO_PARAM_ADPCMTYPE	access:public
OMX_AUDIO_PARAM_AMRTYPE	omx/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_AMRTYPE {$/;"	s
OMX_AUDIO_PARAM_AMRTYPE	omx/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_AMRTYPE;$/;"	t	typeref:struct:OMX_AUDIO_PARAM_AMRTYPE
OMX_AUDIO_PARAM_AMRTYPE::eAMRBandMode	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRBANDMODETYPE eAMRBandMode; \/**< AMR Band Mode enumeration *\/ $/;"	m	struct:OMX_AUDIO_PARAM_AMRTYPE	access:public
OMX_AUDIO_PARAM_AMRTYPE::eAMRDTXMode	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRDTXMODETYPE  eAMRDTXMode;  \/**< AMR DTX Mode enumeration *\/$/;"	m	struct:OMX_AUDIO_PARAM_AMRTYPE	access:public
OMX_AUDIO_PARAM_AMRTYPE::eAMRFrameFormat	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRFRAMEFORMATTYPE eAMRFrameFormat; \/**< AMR frame format enumeration *\/$/;"	m	struct:OMX_AUDIO_PARAM_AMRTYPE	access:public
OMX_AUDIO_PARAM_AMRTYPE::nBitRate	omx/openmax/OMX_Audio.h	/^    OMX_U32 nBitRate;                       \/**< Bit rate read only field *\/$/;"	m	struct:OMX_AUDIO_PARAM_AMRTYPE	access:public
OMX_AUDIO_PARAM_AMRTYPE::nChannels	omx/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;                      \/**< Number of channels *\/$/;"	m	struct:OMX_AUDIO_PARAM_AMRTYPE	access:public
OMX_AUDIO_PARAM_AMRTYPE::nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;                     \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_AMRTYPE	access:public
OMX_AUDIO_PARAM_AMRTYPE::nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;                          \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_AMRTYPE	access:public
OMX_AUDIO_PARAM_AMRTYPE::nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;               \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_AMRTYPE	access:public
OMX_AUDIO_PARAM_EVRCTYPE	omx/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_EVRCTYPE {$/;"	s
OMX_AUDIO_PARAM_EVRCTYPE	omx/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_EVRCTYPE;$/;"	t	typeref:struct:OMX_AUDIO_PARAM_EVRCTYPE
OMX_AUDIO_PARAM_EVRCTYPE::bHiPassFilter	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bHiPassFilter;       \/**< Enable encoder's High Pass Filter *\/$/;"	m	struct:OMX_AUDIO_PARAM_EVRCTYPE	access:public
OMX_AUDIO_PARAM_EVRCTYPE::bNoiseSuppressor	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bNoiseSuppressor;    \/**< Enable encoder's noise suppressor pre-processing *\/$/;"	m	struct:OMX_AUDIO_PARAM_EVRCTYPE	access:public
OMX_AUDIO_PARAM_EVRCTYPE::bPostFilter	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bPostFilter;         \/**< Enable decoder's post Filter *\/$/;"	m	struct:OMX_AUDIO_PARAM_EVRCTYPE	access:public
OMX_AUDIO_PARAM_EVRCTYPE::bRATE_REDUCon	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bRATE_REDUCon;       \/**< RATE_REDUCtion is requested for this frame *\/$/;"	m	struct:OMX_AUDIO_PARAM_EVRCTYPE	access:public
OMX_AUDIO_PARAM_EVRCTYPE::eCDMARate	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_CDMARATETYPE eCDMARate; \/**< actual Frame rate *\/$/;"	m	struct:OMX_AUDIO_PARAM_EVRCTYPE	access:public
OMX_AUDIO_PARAM_EVRCTYPE::nChannels	omx/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;            \/**< Number of channels in the data stream (not$/;"	m	struct:OMX_AUDIO_PARAM_EVRCTYPE	access:public
OMX_AUDIO_PARAM_EVRCTYPE::nMaxBitRate	omx/openmax/OMX_Audio.h	/^    OMX_U32 nMaxBitRate;          \/**< maximal rate for the encoder = 1,2,3,4, default = 4 *\/$/;"	m	struct:OMX_AUDIO_PARAM_EVRCTYPE	access:public
OMX_AUDIO_PARAM_EVRCTYPE::nMinBitRate	omx/openmax/OMX_Audio.h	/^    OMX_U32 nMinBitRate;          \/**< minmal rate for the encoder = 1,2,3,4, default = 1 *\/$/;"	m	struct:OMX_AUDIO_PARAM_EVRCTYPE	access:public
OMX_AUDIO_PARAM_EVRCTYPE::nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;           \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_EVRCTYPE	access:public
OMX_AUDIO_PARAM_EVRCTYPE::nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;                \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_EVRCTYPE	access:public
OMX_AUDIO_PARAM_EVRCTYPE::nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;     \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_EVRCTYPE	access:public
OMX_AUDIO_PARAM_G723TYPE	omx/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_G723TYPE { $/;"	s
OMX_AUDIO_PARAM_G723TYPE	omx/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_G723TYPE; $/;"	t	typeref:struct:OMX_AUDIO_PARAM_G723TYPE
OMX_AUDIO_PARAM_G723TYPE::bDTX	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bDTX;                \/**< Enable Discontinuous Transmisssion *\/ $/;"	m	struct:OMX_AUDIO_PARAM_G723TYPE	access:public
OMX_AUDIO_PARAM_G723TYPE::bHiPassFilter	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bHiPassFilter;       \/**< Enable High Pass Filter *\/ $/;"	m	struct:OMX_AUDIO_PARAM_G723TYPE	access:public
OMX_AUDIO_PARAM_G723TYPE::bPostFilter	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bPostFilter;         \/**< Enable Post Filter *\/ $/;"	m	struct:OMX_AUDIO_PARAM_G723TYPE	access:public
OMX_AUDIO_PARAM_G723TYPE::eBitRate	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_G723RATE eBitRate;  \/**< todo: Should this be moved to a config? *\/$/;"	m	struct:OMX_AUDIO_PARAM_G723TYPE	access:public
OMX_AUDIO_PARAM_G723TYPE::nChannels	omx/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;            \/**< Number of channels in the data stream (not $/;"	m	struct:OMX_AUDIO_PARAM_G723TYPE	access:public
OMX_AUDIO_PARAM_G723TYPE::nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;           \/**< port that this structure applies to *\/ $/;"	m	struct:OMX_AUDIO_PARAM_G723TYPE	access:public
OMX_AUDIO_PARAM_G723TYPE::nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;                \/**< size of the structure in bytes *\/ $/;"	m	struct:OMX_AUDIO_PARAM_G723TYPE	access:public
OMX_AUDIO_PARAM_G723TYPE::nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;     \/**< OMX specification version information *\/ $/;"	m	struct:OMX_AUDIO_PARAM_G723TYPE	access:public
OMX_AUDIO_PARAM_G726TYPE	omx/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_G726TYPE { $/;"	s
OMX_AUDIO_PARAM_G726TYPE	omx/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_G726TYPE; $/;"	t	typeref:struct:OMX_AUDIO_PARAM_G726TYPE
OMX_AUDIO_PARAM_G726TYPE::eG726Mode	omx/openmax/OMX_Audio.h	/^     OMX_AUDIO_G726MODE eG726Mode;$/;"	m	struct:OMX_AUDIO_PARAM_G726TYPE	access:public
OMX_AUDIO_PARAM_G726TYPE::nChannels	omx/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;          \/**< Number of channels in the data stream (not $/;"	m	struct:OMX_AUDIO_PARAM_G726TYPE	access:public
OMX_AUDIO_PARAM_G726TYPE::nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;         \/**< port that this structure applies to *\/ $/;"	m	struct:OMX_AUDIO_PARAM_G726TYPE	access:public
OMX_AUDIO_PARAM_G726TYPE::nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;              \/**< size of the structure in bytes *\/ $/;"	m	struct:OMX_AUDIO_PARAM_G726TYPE	access:public
OMX_AUDIO_PARAM_G726TYPE::nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;   \/**< OMX specification version information *\/ $/;"	m	struct:OMX_AUDIO_PARAM_G726TYPE	access:public
OMX_AUDIO_PARAM_G729TYPE	omx/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_G729TYPE {$/;"	s
OMX_AUDIO_PARAM_G729TYPE	omx/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_G729TYPE;$/;"	t	typeref:struct:OMX_AUDIO_PARAM_G729TYPE
OMX_AUDIO_PARAM_G729TYPE::bDTX	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bDTX;            \/**< Enable Discontinuous Transmisssion *\/$/;"	m	struct:OMX_AUDIO_PARAM_G729TYPE	access:public
OMX_AUDIO_PARAM_G729TYPE::eBitType	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_G729TYPE eBitType;$/;"	m	struct:OMX_AUDIO_PARAM_G729TYPE	access:public
OMX_AUDIO_PARAM_G729TYPE::nChannels	omx/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;        \/**< Number of channels in the data stream (not$/;"	m	struct:OMX_AUDIO_PARAM_G729TYPE	access:public
OMX_AUDIO_PARAM_G729TYPE::nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;       \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_G729TYPE	access:public
OMX_AUDIO_PARAM_G729TYPE::nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;            \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_G729TYPE	access:public
OMX_AUDIO_PARAM_G729TYPE::nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion; \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_G729TYPE	access:public
OMX_AUDIO_PARAM_GSMEFRTYPE	omx/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_GSMEFRTYPE {$/;"	s
OMX_AUDIO_PARAM_GSMEFRTYPE	omx/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_GSMEFRTYPE;$/;"	t	typeref:struct:OMX_AUDIO_PARAM_GSMEFRTYPE
OMX_AUDIO_PARAM_GSMEFRTYPE::bDTX	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bDTX;            \/**< Enable Discontinuous Transmisssion *\/$/;"	m	struct:OMX_AUDIO_PARAM_GSMEFRTYPE	access:public
OMX_AUDIO_PARAM_GSMEFRTYPE::bHiPassFilter	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bHiPassFilter;   \/**< Enable High Pass Filter *\/$/;"	m	struct:OMX_AUDIO_PARAM_GSMEFRTYPE	access:public
OMX_AUDIO_PARAM_GSMEFRTYPE::nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;       \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_GSMEFRTYPE	access:public
OMX_AUDIO_PARAM_GSMEFRTYPE::nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;            \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_GSMEFRTYPE	access:public
OMX_AUDIO_PARAM_GSMEFRTYPE::nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion; \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_GSMEFRTYPE	access:public
OMX_AUDIO_PARAM_GSMFRTYPE	omx/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_GSMFRTYPE {$/;"	s
OMX_AUDIO_PARAM_GSMFRTYPE	omx/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_GSMFRTYPE;$/;"	t	typeref:struct:OMX_AUDIO_PARAM_GSMFRTYPE
OMX_AUDIO_PARAM_GSMFRTYPE::bDTX	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bDTX;            \/**< Enable Discontinuous Transmisssion *\/$/;"	m	struct:OMX_AUDIO_PARAM_GSMFRTYPE	access:public
OMX_AUDIO_PARAM_GSMFRTYPE::bHiPassFilter	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bHiPassFilter;   \/**< Enable High Pass Filter *\/$/;"	m	struct:OMX_AUDIO_PARAM_GSMFRTYPE	access:public
OMX_AUDIO_PARAM_GSMFRTYPE::nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;       \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_GSMFRTYPE	access:public
OMX_AUDIO_PARAM_GSMFRTYPE::nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;            \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_GSMFRTYPE	access:public
OMX_AUDIO_PARAM_GSMFRTYPE::nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion; \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_GSMFRTYPE	access:public
OMX_AUDIO_PARAM_GSMHRTYPE	omx/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_GSMHRTYPE {$/;"	s
OMX_AUDIO_PARAM_GSMHRTYPE	omx/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_GSMHRTYPE;$/;"	t	typeref:struct:OMX_AUDIO_PARAM_GSMHRTYPE
OMX_AUDIO_PARAM_GSMHRTYPE::bDTX	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bDTX;            \/**< Enable Discontinuous Transmisssion *\/$/;"	m	struct:OMX_AUDIO_PARAM_GSMHRTYPE	access:public
OMX_AUDIO_PARAM_GSMHRTYPE::bHiPassFilter	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bHiPassFilter;   \/**< Enable High Pass Filter *\/$/;"	m	struct:OMX_AUDIO_PARAM_GSMHRTYPE	access:public
OMX_AUDIO_PARAM_GSMHRTYPE::nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;       \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_GSMHRTYPE	access:public
OMX_AUDIO_PARAM_GSMHRTYPE::nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;            \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_GSMHRTYPE	access:public
OMX_AUDIO_PARAM_GSMHRTYPE::nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion; \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_GSMHRTYPE	access:public
OMX_AUDIO_PARAM_MIDILOADUSERSOUNDTYPE	omx/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_MIDILOADUSERSOUNDTYPE {$/;"	s
OMX_AUDIO_PARAM_MIDILOADUSERSOUNDTYPE	omx/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_MIDILOADUSERSOUNDTYPE;$/;"	t	typeref:struct:OMX_AUDIO_PARAM_MIDILOADUSERSOUNDTYPE
OMX_AUDIO_PARAM_MIDILOADUSERSOUNDTYPE::eMidiSoundBank	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_MIDISOUNDBANKTYPE eMidiSoundBank;   \/**< Midi sound bank type enumeration *\/$/;"	m	struct:OMX_AUDIO_PARAM_MIDILOADUSERSOUNDTYPE	access:public
OMX_AUDIO_PARAM_MIDILOADUSERSOUNDTYPE::eMidiSoundBankLayout	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_MIDISOUNDBANKLAYOUTTYPE eMidiSoundBankLayout; \/**< Midi sound bank layout enumeration *\/$/;"	m	struct:OMX_AUDIO_PARAM_MIDILOADUSERSOUNDTYPE	access:public
OMX_AUDIO_PARAM_MIDILOADUSERSOUNDTYPE::nDLSIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nDLSIndex;        \/**< DLS file index to be loaded *\/$/;"	m	struct:OMX_AUDIO_PARAM_MIDILOADUSERSOUNDTYPE	access:public
OMX_AUDIO_PARAM_MIDILOADUSERSOUNDTYPE::nDLSSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nDLSSize;         \/**< Size in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_MIDILOADUSERSOUNDTYPE	access:public
OMX_AUDIO_PARAM_MIDILOADUSERSOUNDTYPE::nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;       \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_MIDILOADUSERSOUNDTYPE	access:public
OMX_AUDIO_PARAM_MIDILOADUSERSOUNDTYPE::nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;            \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_MIDILOADUSERSOUNDTYPE	access:public
OMX_AUDIO_PARAM_MIDILOADUSERSOUNDTYPE::nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion; \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_MIDILOADUSERSOUNDTYPE	access:public
OMX_AUDIO_PARAM_MIDILOADUSERSOUNDTYPE::pDLSData	omx/openmax/OMX_Audio.h	/^    OMX_PTR pDLSData;         \/**< Pointer to DLS file data *\/$/;"	m	struct:OMX_AUDIO_PARAM_MIDILOADUSERSOUNDTYPE	access:public
OMX_AUDIO_PARAM_MIDITYPE	omx/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_MIDITYPE {$/;"	s
OMX_AUDIO_PARAM_MIDITYPE	omx/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_MIDITYPE;$/;"	t	typeref:struct:OMX_AUDIO_PARAM_MIDITYPE
OMX_AUDIO_PARAM_MIDITYPE::bLoadDefaultSound	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bLoadDefaultSound;    \/**< Whether to load default sound $/;"	m	struct:OMX_AUDIO_PARAM_MIDITYPE	access:public
OMX_AUDIO_PARAM_MIDITYPE::eMidiFormat	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_MIDIFORMATTYPE eMidiFormat; \/**< Version of the MIDI file *\/                                                                           $/;"	m	struct:OMX_AUDIO_PARAM_MIDITYPE	access:public
OMX_AUDIO_PARAM_MIDITYPE::nFileSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nFileSize;             \/**< size of the MIDI file in bytes, where the entire $/;"	m	struct:OMX_AUDIO_PARAM_MIDITYPE	access:public
OMX_AUDIO_PARAM_MIDITYPE::nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;            \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_MIDITYPE	access:public
OMX_AUDIO_PARAM_MIDITYPE::nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;                 \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_MIDITYPE	access:public
OMX_AUDIO_PARAM_MIDITYPE::nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;      \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_MIDITYPE	access:public
OMX_AUDIO_PARAM_MIDITYPE::sMaxPolyphony	omx/openmax/OMX_Audio.h	/^    OMX_BU32 sMaxPolyphony;        \/**< Specifies the maximum simultaneous polyphonic $/;"	m	struct:OMX_AUDIO_PARAM_MIDITYPE	access:public
OMX_AUDIO_PARAM_MP3TYPE	omx/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_MP3TYPE {$/;"	s
OMX_AUDIO_PARAM_MP3TYPE	omx/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_MP3TYPE;$/;"	t	typeref:struct:OMX_AUDIO_PARAM_MP3TYPE
OMX_AUDIO_PARAM_MP3TYPE::eChannelMode	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_CHANNELMODETYPE eChannelMode;   \/**< Channel mode enumeration *\/$/;"	m	struct:OMX_AUDIO_PARAM_MP3TYPE	access:public
OMX_AUDIO_PARAM_MP3TYPE::eFormat	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_MP3STREAMFORMATTYPE eFormat;  \/**< MP3 stream format *\/$/;"	m	struct:OMX_AUDIO_PARAM_MP3TYPE	access:public
OMX_AUDIO_PARAM_MP3TYPE::nAudioBandWidth	omx/openmax/OMX_Audio.h	/^    OMX_U32 nAudioBandWidth;       \/**< Audio band width (in Hz) to which an encoder should$/;"	m	struct:OMX_AUDIO_PARAM_MP3TYPE	access:public
OMX_AUDIO_PARAM_MP3TYPE::nBitRate	omx/openmax/OMX_Audio.h	/^    OMX_U32 nBitRate;              \/**< Bit rate of the input data.  Use 0 for variable$/;"	m	struct:OMX_AUDIO_PARAM_MP3TYPE	access:public
OMX_AUDIO_PARAM_MP3TYPE::nChannels	omx/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;             \/**< Number of channels *\/$/;"	m	struct:OMX_AUDIO_PARAM_MP3TYPE	access:public
OMX_AUDIO_PARAM_MP3TYPE::nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;            \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_MP3TYPE	access:public
OMX_AUDIO_PARAM_MP3TYPE::nSampleRate	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSampleRate;           \/**< Sampling rate of the source data.  Use 0 for$/;"	m	struct:OMX_AUDIO_PARAM_MP3TYPE	access:public
OMX_AUDIO_PARAM_MP3TYPE::nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;                 \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_MP3TYPE	access:public
OMX_AUDIO_PARAM_MP3TYPE::nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;      \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_MP3TYPE	access:public
OMX_AUDIO_PARAM_PCMMODETYPE	omx/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_PCMMODETYPE { $/;"	s
OMX_AUDIO_PARAM_PCMMODETYPE	omx/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_PCMMODETYPE; $/;"	t	typeref:struct:OMX_AUDIO_PARAM_PCMMODETYPE
OMX_AUDIO_PARAM_PCMMODETYPE::bInterleaved	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bInterleaved;            \/**< True for normal interleaved data; false for $/;"	m	struct:OMX_AUDIO_PARAM_PCMMODETYPE	access:public
OMX_AUDIO_PARAM_PCMMODETYPE::eChannelMapping	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_CHANNELTYPE eChannelMapping[OMX_AUDIO_MAXCHANNELS]; \/**< Slot i contains channel defined by eChannelMap[i] *\/$/;"	m	struct:OMX_AUDIO_PARAM_PCMMODETYPE	access:public
OMX_AUDIO_PARAM_PCMMODETYPE::eEndian	omx/openmax/OMX_Audio.h	/^    OMX_ENDIANTYPE eEndian;           \/**< indicates PCM data as little or big endian *\/ $/;"	m	struct:OMX_AUDIO_PARAM_PCMMODETYPE	access:public
OMX_AUDIO_PARAM_PCMMODETYPE::eNumData	omx/openmax/OMX_Audio.h	/^    OMX_NUMERICALDATATYPE eNumData;   \/**< indicates PCM data as signed or unsigned *\/ $/;"	m	struct:OMX_AUDIO_PARAM_PCMMODETYPE	access:public
OMX_AUDIO_PARAM_PCMMODETYPE::ePCMMode	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_PCMMODETYPE ePCMMode;   \/**< PCM mode enumeration *\/ $/;"	m	struct:OMX_AUDIO_PARAM_PCMMODETYPE	access:public
OMX_AUDIO_PARAM_PCMMODETYPE::nBitPerSample	omx/openmax/OMX_Audio.h	/^    OMX_U32 nBitPerSample;            \/**< Bit per sample *\/ $/;"	m	struct:OMX_AUDIO_PARAM_PCMMODETYPE	access:public
OMX_AUDIO_PARAM_PCMMODETYPE::nChannels	omx/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;                \/**< Number of channels (e.g. 2 for stereo) *\/ $/;"	m	struct:OMX_AUDIO_PARAM_PCMMODETYPE	access:public
OMX_AUDIO_PARAM_PCMMODETYPE::nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;               \/**< port that this structure applies to *\/ $/;"	m	struct:OMX_AUDIO_PARAM_PCMMODETYPE	access:public
OMX_AUDIO_PARAM_PCMMODETYPE::nSamplingRate	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSamplingRate;            \/**< Sampling rate of the source data.  Use 0 for $/;"	m	struct:OMX_AUDIO_PARAM_PCMMODETYPE	access:public
OMX_AUDIO_PARAM_PCMMODETYPE::nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;                    \/**< Size of this structure, in Bytes *\/ $/;"	m	struct:OMX_AUDIO_PARAM_PCMMODETYPE	access:public
OMX_AUDIO_PARAM_PCMMODETYPE::nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;         \/**< OMX specification version information *\/ $/;"	m	struct:OMX_AUDIO_PARAM_PCMMODETYPE	access:public
OMX_AUDIO_PARAM_PDCEFRTYPE	omx/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_PDCEFRTYPE {$/;"	s
OMX_AUDIO_PARAM_PDCEFRTYPE	omx/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_PDCEFRTYPE;$/;"	t	typeref:struct:OMX_AUDIO_PARAM_PDCEFRTYPE
OMX_AUDIO_PARAM_PDCEFRTYPE::bDTX	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bDTX;                \/**< Enable Discontinuous Transmisssion *\/$/;"	m	struct:OMX_AUDIO_PARAM_PDCEFRTYPE	access:public
OMX_AUDIO_PARAM_PDCEFRTYPE::bHiPassFilter	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bHiPassFilter;       \/**< Enable High Pass Filter *\/$/;"	m	struct:OMX_AUDIO_PARAM_PDCEFRTYPE	access:public
OMX_AUDIO_PARAM_PDCEFRTYPE::nChannels	omx/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;            \/**< Number of channels in the data stream (not$/;"	m	struct:OMX_AUDIO_PARAM_PDCEFRTYPE	access:public
OMX_AUDIO_PARAM_PDCEFRTYPE::nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;           \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_PDCEFRTYPE	access:public
OMX_AUDIO_PARAM_PDCEFRTYPE::nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;                \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_PDCEFRTYPE	access:public
OMX_AUDIO_PARAM_PDCEFRTYPE::nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;     \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_PDCEFRTYPE	access:public
OMX_AUDIO_PARAM_PDCFRTYPE	omx/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_PDCFRTYPE {$/;"	s
OMX_AUDIO_PARAM_PDCFRTYPE	omx/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_PDCFRTYPE;$/;"	t	typeref:struct:OMX_AUDIO_PARAM_PDCFRTYPE
OMX_AUDIO_PARAM_PDCFRTYPE::bDTX	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bDTX;                \/**< Enable Discontinuous Transmisssion *\/$/;"	m	struct:OMX_AUDIO_PARAM_PDCFRTYPE	access:public
OMX_AUDIO_PARAM_PDCFRTYPE::bHiPassFilter	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bHiPassFilter;       \/**< Enable High Pass Filter *\/$/;"	m	struct:OMX_AUDIO_PARAM_PDCFRTYPE	access:public
OMX_AUDIO_PARAM_PDCFRTYPE::nChannels	omx/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;            \/**< Number of channels in the data stream (not$/;"	m	struct:OMX_AUDIO_PARAM_PDCFRTYPE	access:public
OMX_AUDIO_PARAM_PDCFRTYPE::nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;           \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_PDCFRTYPE	access:public
OMX_AUDIO_PARAM_PDCFRTYPE::nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;                \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_PDCFRTYPE	access:public
OMX_AUDIO_PARAM_PDCFRTYPE::nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;     \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_PDCFRTYPE	access:public
OMX_AUDIO_PARAM_PDCHRTYPE	omx/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_PDCHRTYPE {$/;"	s
OMX_AUDIO_PARAM_PDCHRTYPE	omx/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_PDCHRTYPE;$/;"	t	typeref:struct:OMX_AUDIO_PARAM_PDCHRTYPE
OMX_AUDIO_PARAM_PDCHRTYPE::bDTX	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bDTX;                \/**< Enable Discontinuous Transmisssion *\/$/;"	m	struct:OMX_AUDIO_PARAM_PDCHRTYPE	access:public
OMX_AUDIO_PARAM_PDCHRTYPE::bHiPassFilter	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bHiPassFilter;       \/**< Enable High Pass Filter *\/$/;"	m	struct:OMX_AUDIO_PARAM_PDCHRTYPE	access:public
OMX_AUDIO_PARAM_PDCHRTYPE::nChannels	omx/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;            \/**< Number of channels in the data stream (not$/;"	m	struct:OMX_AUDIO_PARAM_PDCHRTYPE	access:public
OMX_AUDIO_PARAM_PDCHRTYPE::nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;           \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_PDCHRTYPE	access:public
OMX_AUDIO_PARAM_PDCHRTYPE::nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;                \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_PDCHRTYPE	access:public
OMX_AUDIO_PARAM_PDCHRTYPE::nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;     \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_PDCHRTYPE	access:public
OMX_AUDIO_PARAM_PORTFORMATTYPE	omx/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_PORTFORMATTYPE {$/;"	s
OMX_AUDIO_PARAM_PORTFORMATTYPE	omx/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_PORTFORMATTYPE;$/;"	t	typeref:struct:OMX_AUDIO_PARAM_PORTFORMATTYPE
OMX_AUDIO_PARAM_PORTFORMATTYPE::eEncoding	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_CODINGTYPE eEncoding; \/**< Type of data expected for this port (e.g. PCM, AMR, MP3, etc) *\/$/;"	m	struct:OMX_AUDIO_PARAM_PORTFORMATTYPE	access:public
OMX_AUDIO_PARAM_PORTFORMATTYPE::nIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nIndex;                 \/**< Indicates the enumeration index for the format from 0x0 to N-1 *\/$/;"	m	struct:OMX_AUDIO_PARAM_PORTFORMATTYPE	access:public
OMX_AUDIO_PARAM_PORTFORMATTYPE::nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;             \/**< Indicates which port to set *\/$/;"	m	struct:OMX_AUDIO_PARAM_PORTFORMATTYPE	access:public
OMX_AUDIO_PARAM_PORTFORMATTYPE::nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;                  \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_PORTFORMATTYPE	access:public
OMX_AUDIO_PARAM_PORTFORMATTYPE::nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;       \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_PORTFORMATTYPE	access:public
OMX_AUDIO_PARAM_QCELP13TYPE	omx/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_QCELP13TYPE {$/;"	s
OMX_AUDIO_PARAM_QCELP13TYPE	omx/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_QCELP13TYPE;$/;"	t	typeref:struct:OMX_AUDIO_PARAM_QCELP13TYPE
OMX_AUDIO_PARAM_QCELP13TYPE::eCDMARate	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_CDMARATETYPE eCDMARate; \/**< Frame rate *\/$/;"	m	struct:OMX_AUDIO_PARAM_QCELP13TYPE	access:public
OMX_AUDIO_PARAM_QCELP13TYPE::nChannels	omx/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;            \/**< Number of channels in the data stream (not$/;"	m	struct:OMX_AUDIO_PARAM_QCELP13TYPE	access:public
OMX_AUDIO_PARAM_QCELP13TYPE::nMaxBitRate	omx/openmax/OMX_Audio.h	/^    OMX_U32 nMaxBitRate;          \/**< maximal rate for the encoder = 1,2,3,4, default = 4 *\/$/;"	m	struct:OMX_AUDIO_PARAM_QCELP13TYPE	access:public
OMX_AUDIO_PARAM_QCELP13TYPE::nMinBitRate	omx/openmax/OMX_Audio.h	/^    OMX_U32 nMinBitRate;          \/**< minmal rate for the encoder = 1,2,3,4, default = 1 *\/$/;"	m	struct:OMX_AUDIO_PARAM_QCELP13TYPE	access:public
OMX_AUDIO_PARAM_QCELP13TYPE::nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;           \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_QCELP13TYPE	access:public
OMX_AUDIO_PARAM_QCELP13TYPE::nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;                \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_QCELP13TYPE	access:public
OMX_AUDIO_PARAM_QCELP13TYPE::nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;     \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_QCELP13TYPE	access:public
OMX_AUDIO_PARAM_QCELP8TYPE	omx/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_QCELP8TYPE {$/;"	s
OMX_AUDIO_PARAM_QCELP8TYPE	omx/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_QCELP8TYPE;$/;"	t	typeref:struct:OMX_AUDIO_PARAM_QCELP8TYPE
OMX_AUDIO_PARAM_QCELP8TYPE::eCDMARate	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_CDMARATETYPE eCDMARate; \/**< Frame rate *\/$/;"	m	struct:OMX_AUDIO_PARAM_QCELP8TYPE	access:public
OMX_AUDIO_PARAM_QCELP8TYPE::nBitRate	omx/openmax/OMX_Audio.h	/^    OMX_U32 nBitRate;             \/**< Bit rate of the input data.  Use 0 for variable$/;"	m	struct:OMX_AUDIO_PARAM_QCELP8TYPE	access:public
OMX_AUDIO_PARAM_QCELP8TYPE::nChannels	omx/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;            \/**< Number of channels in the data stream (not$/;"	m	struct:OMX_AUDIO_PARAM_QCELP8TYPE	access:public
OMX_AUDIO_PARAM_QCELP8TYPE::nMaxBitRate	omx/openmax/OMX_Audio.h	/^    OMX_U32 nMaxBitRate;          \/**< maximal rate for the encoder = 1,2,3,4, default = 4 *\/$/;"	m	struct:OMX_AUDIO_PARAM_QCELP8TYPE	access:public
OMX_AUDIO_PARAM_QCELP8TYPE::nMinBitRate	omx/openmax/OMX_Audio.h	/^    OMX_U32 nMinBitRate;          \/**< minmal rate for the encoder = 1,2,3,4, default = 1 *\/$/;"	m	struct:OMX_AUDIO_PARAM_QCELP8TYPE	access:public
OMX_AUDIO_PARAM_QCELP8TYPE::nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;           \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_QCELP8TYPE	access:public
OMX_AUDIO_PARAM_QCELP8TYPE::nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;                \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_QCELP8TYPE	access:public
OMX_AUDIO_PARAM_QCELP8TYPE::nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;     \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_QCELP8TYPE	access:public
OMX_AUDIO_PARAM_RATYPE	omx/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_RATYPE { $/;"	s
OMX_AUDIO_PARAM_RATYPE	omx/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_RATYPE; $/;"	t	typeref:struct:OMX_AUDIO_PARAM_RATYPE
OMX_AUDIO_PARAM_RATYPE::eFormat	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_RAFORMATTYPE eFormat; \/**< is the RealAudio audio format *\/$/;"	m	struct:OMX_AUDIO_PARAM_RATYPE	access:public
OMX_AUDIO_PARAM_RATYPE::nBitsPerFrame	omx/openmax/OMX_Audio.h	/^    OMX_U32 nBitsPerFrame;      \/**< is the value for bits per frame  *\/ $/;"	m	struct:OMX_AUDIO_PARAM_RATYPE	access:public
OMX_AUDIO_PARAM_RATYPE::nChannels	omx/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;          \/**< Number of channels *\/ $/;"	m	struct:OMX_AUDIO_PARAM_RATYPE	access:public
OMX_AUDIO_PARAM_RATYPE::nCouplingQuantBits	omx/openmax/OMX_Audio.h	/^    OMX_U32 nCouplingQuantBits; \/**< is the number of coupling quantization bits in the stream *\/ $/;"	m	struct:OMX_AUDIO_PARAM_RATYPE	access:public
OMX_AUDIO_PARAM_RATYPE::nCouplingStartRegion	omx/openmax/OMX_Audio.h	/^    OMX_U32 nCouplingStartRegion;   \/**< is the coupling start region in the stream  *\/ $/;"	m	struct:OMX_AUDIO_PARAM_RATYPE	access:public
OMX_AUDIO_PARAM_RATYPE::nNumRegions	omx/openmax/OMX_Audio.h	/^    OMX_U32 nNumRegions;        \/**< is the number of regions value *\/ $/;"	m	struct:OMX_AUDIO_PARAM_RATYPE	access:public
OMX_AUDIO_PARAM_RATYPE::nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;         \/**< Port that this structure applies to *\/ $/;"	m	struct:OMX_AUDIO_PARAM_RATYPE	access:public
OMX_AUDIO_PARAM_RATYPE::nSamplePerFrame	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSamplePerFrame;    \/**< is the value for samples per frame *\/ $/;"	m	struct:OMX_AUDIO_PARAM_RATYPE	access:public
OMX_AUDIO_PARAM_RATYPE::nSamplingRate	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSamplingRate;      \/**< is the sampling rate of the source data *\/ $/;"	m	struct:OMX_AUDIO_PARAM_RATYPE	access:public
OMX_AUDIO_PARAM_RATYPE::nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;              \/**< Size of this structure, in Bytes *\/ $/;"	m	struct:OMX_AUDIO_PARAM_RATYPE	access:public
OMX_AUDIO_PARAM_RATYPE::nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;   \/**< OMX specification version information *\/ $/;"	m	struct:OMX_AUDIO_PARAM_RATYPE	access:public
OMX_AUDIO_PARAM_SBCTYPE	omx/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_SBCTYPE {$/;"	s
OMX_AUDIO_PARAM_SBCTYPE	omx/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_SBCTYPE;$/;"	t	typeref:struct:OMX_AUDIO_PARAM_SBCTYPE
OMX_AUDIO_PARAM_SBCTYPE::bEnableBitrate	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bEnableBitrate;   \/**< Use bitrate value instead of bitpool *\/$/;"	m	struct:OMX_AUDIO_PARAM_SBCTYPE	access:public
OMX_AUDIO_PARAM_SBCTYPE::eChannelMode	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_CHANNELMODETYPE eChannelMode; \/**< Channel mode enumeration *\/$/;"	m	struct:OMX_AUDIO_PARAM_SBCTYPE	access:public
OMX_AUDIO_PARAM_SBCTYPE::eSBCAllocType	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_SBCALLOCMETHODTYPE eSBCAllocType;   \/**< SBC Allocation method type *\/$/;"	m	struct:OMX_AUDIO_PARAM_SBCTYPE	access:public
OMX_AUDIO_PARAM_SBCTYPE::nBitPool	omx/openmax/OMX_Audio.h	/^    OMX_U32 nBitPool;          \/**< Bitpool value *\/$/;"	m	struct:OMX_AUDIO_PARAM_SBCTYPE	access:public
OMX_AUDIO_PARAM_SBCTYPE::nBitRate	omx/openmax/OMX_Audio.h	/^    OMX_U32 nBitRate;          \/**< Bit rate of the input data.  Use 0 for variable$/;"	m	struct:OMX_AUDIO_PARAM_SBCTYPE	access:public
OMX_AUDIO_PARAM_SBCTYPE::nBlocks	omx/openmax/OMX_Audio.h	/^    OMX_U32 nBlocks;           \/**< Number of blocks *\/$/;"	m	struct:OMX_AUDIO_PARAM_SBCTYPE	access:public
OMX_AUDIO_PARAM_SBCTYPE::nChannels	omx/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;         \/**< Number of channels *\/$/;"	m	struct:OMX_AUDIO_PARAM_SBCTYPE	access:public
OMX_AUDIO_PARAM_SBCTYPE::nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;        \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_SBCTYPE	access:public
OMX_AUDIO_PARAM_SBCTYPE::nSampleRate	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSampleRate;       \/**< Sampling rate of the source data.  Use 0 for$/;"	m	struct:OMX_AUDIO_PARAM_SBCTYPE	access:public
OMX_AUDIO_PARAM_SBCTYPE::nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;             \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_SBCTYPE	access:public
OMX_AUDIO_PARAM_SBCTYPE::nSubbands	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSubbands;         \/**< Number of subbands *\/$/;"	m	struct:OMX_AUDIO_PARAM_SBCTYPE	access:public
OMX_AUDIO_PARAM_SBCTYPE::nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;  \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_SBCTYPE	access:public
OMX_AUDIO_PARAM_SMVTYPE	omx/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_SMVTYPE {$/;"	s
OMX_AUDIO_PARAM_SMVTYPE	omx/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_SMVTYPE;$/;"	t	typeref:struct:OMX_AUDIO_PARAM_SMVTYPE
OMX_AUDIO_PARAM_SMVTYPE::bHiPassFilter	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bHiPassFilter;       \/**< Enable encoder's High Pass Filter ??*\/$/;"	m	struct:OMX_AUDIO_PARAM_SMVTYPE	access:public
OMX_AUDIO_PARAM_SMVTYPE::bNoiseSuppressor	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bNoiseSuppressor;    \/**< Enable encoder's noise suppressor pre-processing *\/$/;"	m	struct:OMX_AUDIO_PARAM_SMVTYPE	access:public
OMX_AUDIO_PARAM_SMVTYPE::bPostFilter	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bPostFilter;         \/**< Enable decoder's post Filter ??*\/$/;"	m	struct:OMX_AUDIO_PARAM_SMVTYPE	access:public
OMX_AUDIO_PARAM_SMVTYPE::bRATE_REDUCon	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bRATE_REDUCon;           \/**< RATE_REDUCtion is requested for this frame *\/$/;"	m	struct:OMX_AUDIO_PARAM_SMVTYPE	access:public
OMX_AUDIO_PARAM_SMVTYPE::eCDMARate	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_CDMARATETYPE eCDMARate; \/**< Frame rate *\/$/;"	m	struct:OMX_AUDIO_PARAM_SMVTYPE	access:public
OMX_AUDIO_PARAM_SMVTYPE::nChannels	omx/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;            \/**< Number of channels in the data stream (not$/;"	m	struct:OMX_AUDIO_PARAM_SMVTYPE	access:public
OMX_AUDIO_PARAM_SMVTYPE::nMaxBitRate	omx/openmax/OMX_Audio.h	/^    OMX_U32 nMaxBitRate;          \/**< maximal rate for the encoder = 1,2,3,4, default = 4 ??*\/$/;"	m	struct:OMX_AUDIO_PARAM_SMVTYPE	access:public
OMX_AUDIO_PARAM_SMVTYPE::nMinBitRate	omx/openmax/OMX_Audio.h	/^    OMX_U32 nMinBitRate;          \/**< minmal rate for the encoder = 1,2,3,4, default = 1 ??*\/$/;"	m	struct:OMX_AUDIO_PARAM_SMVTYPE	access:public
OMX_AUDIO_PARAM_SMVTYPE::nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;           \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_SMVTYPE	access:public
OMX_AUDIO_PARAM_SMVTYPE::nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;                \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_SMVTYPE	access:public
OMX_AUDIO_PARAM_SMVTYPE::nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;     \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_SMVTYPE	access:public
OMX_AUDIO_PARAM_TDMAEFRTYPE	omx/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_TDMAEFRTYPE {$/;"	s
OMX_AUDIO_PARAM_TDMAEFRTYPE	omx/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_TDMAEFRTYPE;$/;"	t	typeref:struct:OMX_AUDIO_PARAM_TDMAEFRTYPE
OMX_AUDIO_PARAM_TDMAEFRTYPE::bDTX	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bDTX;                \/**< Enable Discontinuous Transmisssion *\/$/;"	m	struct:OMX_AUDIO_PARAM_TDMAEFRTYPE	access:public
OMX_AUDIO_PARAM_TDMAEFRTYPE::bHiPassFilter	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bHiPassFilter;       \/**< Enable High Pass Filter *\/$/;"	m	struct:OMX_AUDIO_PARAM_TDMAEFRTYPE	access:public
OMX_AUDIO_PARAM_TDMAEFRTYPE::nChannels	omx/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;            \/**< Number of channels in the data stream (not$/;"	m	struct:OMX_AUDIO_PARAM_TDMAEFRTYPE	access:public
OMX_AUDIO_PARAM_TDMAEFRTYPE::nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;           \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_TDMAEFRTYPE	access:public
OMX_AUDIO_PARAM_TDMAEFRTYPE::nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;                \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_TDMAEFRTYPE	access:public
OMX_AUDIO_PARAM_TDMAEFRTYPE::nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;     \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_TDMAEFRTYPE	access:public
OMX_AUDIO_PARAM_TDMAFRTYPE	omx/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_TDMAFRTYPE {$/;"	s
OMX_AUDIO_PARAM_TDMAFRTYPE	omx/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_TDMAFRTYPE;$/;"	t	typeref:struct:OMX_AUDIO_PARAM_TDMAFRTYPE
OMX_AUDIO_PARAM_TDMAFRTYPE::bDTX	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bDTX;                \/**< Enable Discontinuous Transmisssion *\/$/;"	m	struct:OMX_AUDIO_PARAM_TDMAFRTYPE	access:public
OMX_AUDIO_PARAM_TDMAFRTYPE::bHiPassFilter	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bHiPassFilter;       \/**< Enable High Pass Filter *\/$/;"	m	struct:OMX_AUDIO_PARAM_TDMAFRTYPE	access:public
OMX_AUDIO_PARAM_TDMAFRTYPE::nChannels	omx/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;            \/**< Number of channels in the data stream (not$/;"	m	struct:OMX_AUDIO_PARAM_TDMAFRTYPE	access:public
OMX_AUDIO_PARAM_TDMAFRTYPE::nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;           \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_TDMAFRTYPE	access:public
OMX_AUDIO_PARAM_TDMAFRTYPE::nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;                \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_TDMAFRTYPE	access:public
OMX_AUDIO_PARAM_TDMAFRTYPE::nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;     \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_TDMAFRTYPE	access:public
OMX_AUDIO_PARAM_VORBISTYPE	omx/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_VORBISTYPE {$/;"	s
OMX_AUDIO_PARAM_VORBISTYPE	omx/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_VORBISTYPE;$/;"	t	typeref:struct:OMX_AUDIO_PARAM_VORBISTYPE
OMX_AUDIO_PARAM_VORBISTYPE::bDownmix	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bDownmix;		  \/**< Downmix input from stereo to mono (has no effect on $/;"	m	struct:OMX_AUDIO_PARAM_VORBISTYPE	access:public
OMX_AUDIO_PARAM_VORBISTYPE::bManaged	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bManaged;		  \/**< Set  bitrate  management  mode. This turns off the$/;"	m	struct:OMX_AUDIO_PARAM_VORBISTYPE	access:public
OMX_AUDIO_PARAM_VORBISTYPE::nAudioBandWidth	omx/openmax/OMX_Audio.h	/^    OMX_U32 nAudioBandWidth;  \/**< Audio band width (in Hz) to which an encoder should$/;"	m	struct:OMX_AUDIO_PARAM_VORBISTYPE	access:public
OMX_AUDIO_PARAM_VORBISTYPE::nBitRate	omx/openmax/OMX_Audio.h	/^    OMX_U32 nBitRate;         \/**< Bit rate of the encoded data data.  Use 0 for variable$/;"	m	struct:OMX_AUDIO_PARAM_VORBISTYPE	access:public
OMX_AUDIO_PARAM_VORBISTYPE::nChannels	omx/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;        \/**< Number of channels *\/$/;"	m	struct:OMX_AUDIO_PARAM_VORBISTYPE	access:public
OMX_AUDIO_PARAM_VORBISTYPE::nMaxBitRate	omx/openmax/OMX_Audio.h	/^    OMX_U32 nMaxBitRate;      \/**< Sets maximum bitrate (in bps). *\/$/;"	m	struct:OMX_AUDIO_PARAM_VORBISTYPE	access:public
OMX_AUDIO_PARAM_VORBISTYPE::nMinBitRate	omx/openmax/OMX_Audio.h	/^    OMX_U32 nMinBitRate;      \/**< Sets minimum bitrate (in bps). *\/$/;"	m	struct:OMX_AUDIO_PARAM_VORBISTYPE	access:public
OMX_AUDIO_PARAM_VORBISTYPE::nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;       \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_VORBISTYPE	access:public
OMX_AUDIO_PARAM_VORBISTYPE::nQuality	omx/openmax/OMX_Audio.h	/^    OMX_S32 nQuality;		  \/**< Sets encoding quality to n, between -1 (low) and 10 (high).$/;"	m	struct:OMX_AUDIO_PARAM_VORBISTYPE	access:public
OMX_AUDIO_PARAM_VORBISTYPE::nSampleRate	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSampleRate;      \/**< Sampling rate of the source data.  Use 0 for$/;"	m	struct:OMX_AUDIO_PARAM_VORBISTYPE	access:public
OMX_AUDIO_PARAM_VORBISTYPE::nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;            \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_VORBISTYPE	access:public
OMX_AUDIO_PARAM_VORBISTYPE::nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion; \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_VORBISTYPE	access:public
OMX_AUDIO_PARAM_WMATYPE	omx/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_WMATYPE {$/;"	s
OMX_AUDIO_PARAM_WMATYPE	omx/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_WMATYPE;$/;"	t	typeref:struct:OMX_AUDIO_PARAM_WMATYPE
OMX_AUDIO_PARAM_WMATYPE::eFormat	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_WMAFORMATTYPE eFormat; \/**< Version of WMA stream \/ data *\/$/;"	m	struct:OMX_AUDIO_PARAM_WMATYPE	access:public
OMX_AUDIO_PARAM_WMATYPE::eProfile	omx/openmax/OMX_Audio.h	/^	OMX_AUDIO_WMAPROFILETYPE eProfile;  \/**< Profile of WMA stream \/ data *\/$/;"	m	struct:OMX_AUDIO_PARAM_WMATYPE	access:public
OMX_AUDIO_PARAM_WMATYPE::nBitRate	omx/openmax/OMX_Audio.h	/^    OMX_U32 nBitRate;         \/**< Bit rate of the input data.  Use 0 for variable$/;"	m	struct:OMX_AUDIO_PARAM_WMATYPE	access:public
OMX_AUDIO_PARAM_WMATYPE::nBlockAlign	omx/openmax/OMX_Audio.h	/^    OMX_U16 nBlockAlign;      \/**< is the block alignment, or block size, in bytes of the audio codec *\/$/;"	m	struct:OMX_AUDIO_PARAM_WMATYPE	access:public
OMX_AUDIO_PARAM_WMATYPE::nChannels	omx/openmax/OMX_Audio.h	/^    OMX_U16 nChannels;        \/**< Number of channels *\/$/;"	m	struct:OMX_AUDIO_PARAM_WMATYPE	access:public
OMX_AUDIO_PARAM_WMATYPE::nEncodeOptions	omx/openmax/OMX_Audio.h	/^    OMX_U16 nEncodeOptions;   \/**< WMA Type-specific data *\/$/;"	m	struct:OMX_AUDIO_PARAM_WMATYPE	access:public
OMX_AUDIO_PARAM_WMATYPE::nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;       \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_WMATYPE	access:public
OMX_AUDIO_PARAM_WMATYPE::nSamplingRate	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSamplingRate;    \/**< Sampling rate of the source data *\/$/;"	m	struct:OMX_AUDIO_PARAM_WMATYPE	access:public
OMX_AUDIO_PARAM_WMATYPE::nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;            \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_WMATYPE	access:public
OMX_AUDIO_PARAM_WMATYPE::nSuperBlockAlign	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSuperBlockAlign; \/**< WMA Type-specific data *\/$/;"	m	struct:OMX_AUDIO_PARAM_WMATYPE	access:public
OMX_AUDIO_PARAM_WMATYPE::nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion; \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_WMATYPE	access:public
OMX_AUDIO_PCMMODETYPE	omx/openmax/OMX_Audio.h	/^typedef enum OMX_AUDIO_PCMMODETYPE { $/;"	g
OMX_AUDIO_PCMMODETYPE	omx/openmax/OMX_Audio.h	/^} OMX_AUDIO_PCMMODETYPE; $/;"	t	typeref:enum:OMX_AUDIO_PCMMODETYPE
OMX_AUDIO_PCMModeALaw	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_PCMModeALaw,        \/**< A law PCM encoded data (G.711) *\/ $/;"	e	enum:OMX_AUDIO_PCMMODETYPE
OMX_AUDIO_PCMModeKhronosExtensions	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_PCMModeKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_AUDIO_PCMMODETYPE
OMX_AUDIO_PCMModeLinear	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_PCMModeLinear = 0,  \/**< Linear PCM encoded data *\/ $/;"	e	enum:OMX_AUDIO_PCMMODETYPE
OMX_AUDIO_PCMModeMULaw	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_PCMModeMULaw,       \/**< Mu law PCM encoded data (G.711)  *\/ $/;"	e	enum:OMX_AUDIO_PCMMODETYPE
OMX_AUDIO_PCMModeMax	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_PCMModeMax = 0x7FFFFFFF $/;"	e	enum:OMX_AUDIO_PCMMODETYPE
OMX_AUDIO_PCMModeVendorStartUnused	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_PCMModeVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_AUDIO_PCMMODETYPE
OMX_AUDIO_PORTDEFINITIONTYPE	omx/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PORTDEFINITIONTYPE {$/;"	s
OMX_AUDIO_PORTDEFINITIONTYPE	omx/openmax/OMX_Audio.h	/^} OMX_AUDIO_PORTDEFINITIONTYPE;$/;"	t	typeref:struct:OMX_AUDIO_PORTDEFINITIONTYPE
OMX_AUDIO_PORTDEFINITIONTYPE::bFlagErrorConcealment	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bFlagErrorConcealment;  \/**< Turns on error concealment if it is $/;"	m	struct:OMX_AUDIO_PORTDEFINITIONTYPE	access:public
OMX_AUDIO_PORTDEFINITIONTYPE::cMIMEType	omx/openmax/OMX_Audio.h	/^    OMX_STRING cMIMEType;            \/**< MIME type of data for the port *\/$/;"	m	struct:OMX_AUDIO_PORTDEFINITIONTYPE	access:public
OMX_AUDIO_PORTDEFINITIONTYPE::eEncoding	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_CODINGTYPE eEncoding;  \/**< Type of data expected for this $/;"	m	struct:OMX_AUDIO_PORTDEFINITIONTYPE	access:public
OMX_AUDIO_PORTDEFINITIONTYPE::pNativeRender	omx/openmax/OMX_Audio.h	/^    OMX_NATIVE_DEVICETYPE pNativeRender; \/** < platform specific reference$/;"	m	struct:OMX_AUDIO_PORTDEFINITIONTYPE	access:public
OMX_AUDIO_RA10_AAC	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_RA10_AAC,           \/**< MPEG-4 AAC codec for bitrates of more than 128kbps *\/$/;"	e	enum:OMX_AUDIO_RAFORMATTYPE
OMX_AUDIO_RA10_CODEC	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_RA10_CODEC,         \/**< RealAudio codec for bitrates less than 128 kbps *\/$/;"	e	enum:OMX_AUDIO_RAFORMATTYPE
OMX_AUDIO_RA10_LOSSLESS	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_RA10_LOSSLESS,      \/**< RealAudio Lossless *\/$/;"	e	enum:OMX_AUDIO_RAFORMATTYPE
OMX_AUDIO_RA10_MULTICHANNEL	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_RA10_MULTICHANNEL,  \/**< RealAudio Multichannel *\/$/;"	e	enum:OMX_AUDIO_RAFORMATTYPE
OMX_AUDIO_RA10_VOICE	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_RA10_VOICE,         \/**< RealAudio Voice for bitrates below 15 kbps *\/$/;"	e	enum:OMX_AUDIO_RAFORMATTYPE
OMX_AUDIO_RA8	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_RA8,                \/**< RealAudio 8 codec *\/$/;"	e	enum:OMX_AUDIO_RAFORMATTYPE
OMX_AUDIO_RA9	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_RA9,                \/**< RealAudio 9 codec *\/$/;"	e	enum:OMX_AUDIO_RAFORMATTYPE
OMX_AUDIO_RAFORMATTYPE	omx/openmax/OMX_Audio.h	/^typedef enum OMX_AUDIO_RAFORMATTYPE {$/;"	g
OMX_AUDIO_RAFORMATTYPE	omx/openmax/OMX_Audio.h	/^} OMX_AUDIO_RAFORMATTYPE;$/;"	t	typeref:enum:OMX_AUDIO_RAFORMATTYPE
OMX_AUDIO_RAFormatKhronosExtensions	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_RAFormatKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_AUDIO_RAFORMATTYPE
OMX_AUDIO_RAFormatUnused	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_RAFormatUnused = 0, \/**< Format unused or unknown *\/$/;"	e	enum:OMX_AUDIO_RAFORMATTYPE
OMX_AUDIO_RAFormatVendorStartUnused	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_RAFormatVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_AUDIO_RAFORMATTYPE
OMX_AUDIO_SBCALLOCMETHODTYPE	omx/openmax/OMX_Audio.h	/^typedef enum OMX_AUDIO_SBCALLOCMETHODTYPE {$/;"	g
OMX_AUDIO_SBCALLOCMETHODTYPE	omx/openmax/OMX_Audio.h	/^} OMX_AUDIO_SBCALLOCMETHODTYPE;$/;"	t	typeref:enum:OMX_AUDIO_SBCALLOCMETHODTYPE
OMX_AUDIO_SBCAllocMethodKhronosExtensions	omx/openmax/OMX_Audio.h	/^  OMX_AUDIO_SBCAllocMethodKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_AUDIO_SBCALLOCMETHODTYPE
OMX_AUDIO_SBCAllocMethodLoudness	omx/openmax/OMX_Audio.h	/^  OMX_AUDIO_SBCAllocMethodLoudness, \/**< Loudness allocation method *\/$/;"	e	enum:OMX_AUDIO_SBCALLOCMETHODTYPE
OMX_AUDIO_SBCAllocMethodMax	omx/openmax/OMX_Audio.h	/^  OMX_AUDIO_SBCAllocMethodMax = 0x7FFFFFFF$/;"	e	enum:OMX_AUDIO_SBCALLOCMETHODTYPE
OMX_AUDIO_SBCAllocMethodSNR	omx/openmax/OMX_Audio.h	/^  OMX_AUDIO_SBCAllocMethodSNR,      \/**< SNR allocation method *\/$/;"	e	enum:OMX_AUDIO_SBCALLOCMETHODTYPE
OMX_AUDIO_SBCAllocMethodVendorStartUnused	omx/openmax/OMX_Audio.h	/^  OMX_AUDIO_SBCAllocMethodVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_AUDIO_SBCALLOCMETHODTYPE
OMX_AUDIO_STEREOWIDENINGTYPE	omx/openmax/OMX_Audio.h	/^typedef enum OMX_AUDIO_STEREOWIDENINGTYPE {$/;"	g
OMX_AUDIO_STEREOWIDENINGTYPE	omx/openmax/OMX_Audio.h	/^} OMX_AUDIO_STEREOWIDENINGTYPE;$/;"	t	typeref:enum:OMX_AUDIO_STEREOWIDENINGTYPE
OMX_AUDIO_StereoWideningHeadphones	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_StereoWideningHeadphones,    \/**< Stereo widening for loudspeakers *\/$/;"	e	enum:OMX_AUDIO_STEREOWIDENINGTYPE
OMX_AUDIO_StereoWideningKhronosExtensions	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_StereoWideningKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_AUDIO_STEREOWIDENINGTYPE
OMX_AUDIO_StereoWideningLoudspeakers	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_StereoWideningLoudspeakers,  \/**< Stereo widening for closely spaced loudspeakers *\/$/;"	e	enum:OMX_AUDIO_STEREOWIDENINGTYPE
OMX_AUDIO_StereoWideningMax	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_StereoWideningMax = 0x7FFFFFFF$/;"	e	enum:OMX_AUDIO_STEREOWIDENINGTYPE
OMX_AUDIO_StereoWideningVendorStartUnused	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_StereoWideningVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_AUDIO_STEREOWIDENINGTYPE
OMX_AUDIO_WMAFORMATTYPE	omx/openmax/OMX_Audio.h	/^typedef enum OMX_AUDIO_WMAFORMATTYPE {$/;"	g
OMX_AUDIO_WMAFORMATTYPE	omx/openmax/OMX_Audio.h	/^} OMX_AUDIO_WMAFORMATTYPE;$/;"	t	typeref:enum:OMX_AUDIO_WMAFORMATTYPE
OMX_AUDIO_WMAFormat7	omx/openmax/OMX_Audio.h	/^  OMX_AUDIO_WMAFormat7,          \/**< Windows Media Audio format 7 *\/$/;"	e	enum:OMX_AUDIO_WMAFORMATTYPE
OMX_AUDIO_WMAFormat8	omx/openmax/OMX_Audio.h	/^  OMX_AUDIO_WMAFormat8,          \/**< Windows Media Audio format 8 *\/$/;"	e	enum:OMX_AUDIO_WMAFORMATTYPE
OMX_AUDIO_WMAFormat9	omx/openmax/OMX_Audio.h	/^  OMX_AUDIO_WMAFormat9,          \/**< Windows Media Audio format 9 *\/$/;"	e	enum:OMX_AUDIO_WMAFORMATTYPE
OMX_AUDIO_WMAFormatKhronosExtensions	omx/openmax/OMX_Audio.h	/^  OMX_AUDIO_WMAFormatKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_AUDIO_WMAFORMATTYPE
OMX_AUDIO_WMAFormatMax	omx/openmax/OMX_Audio.h	/^  OMX_AUDIO_WMAFormatMax = 0x7FFFFFFF$/;"	e	enum:OMX_AUDIO_WMAFORMATTYPE
OMX_AUDIO_WMAFormatUnused	omx/openmax/OMX_Audio.h	/^  OMX_AUDIO_WMAFormatUnused = 0, \/**< format unused or unknown *\/$/;"	e	enum:OMX_AUDIO_WMAFORMATTYPE
OMX_AUDIO_WMAFormatVendorStartUnused	omx/openmax/OMX_Audio.h	/^  OMX_AUDIO_WMAFormatVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_AUDIO_WMAFORMATTYPE
OMX_AUDIO_WMAPROFILETYPE	omx/openmax/OMX_Audio.h	/^typedef enum OMX_AUDIO_WMAPROFILETYPE {$/;"	g
OMX_AUDIO_WMAPROFILETYPE	omx/openmax/OMX_Audio.h	/^} OMX_AUDIO_WMAPROFILETYPE;$/;"	t	typeref:enum:OMX_AUDIO_WMAPROFILETYPE
OMX_AUDIO_WMAProfileKhronosExtensions	omx/openmax/OMX_Audio.h	/^  OMX_AUDIO_WMAProfileKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_AUDIO_WMAPROFILETYPE
OMX_AUDIO_WMAProfileL1	omx/openmax/OMX_Audio.h	/^  OMX_AUDIO_WMAProfileL1,          \/**< Windows Media audio version 9 profile L1 *\/$/;"	e	enum:OMX_AUDIO_WMAPROFILETYPE
OMX_AUDIO_WMAProfileL2	omx/openmax/OMX_Audio.h	/^  OMX_AUDIO_WMAProfileL2,          \/**< Windows Media audio version 9 profile L2 *\/$/;"	e	enum:OMX_AUDIO_WMAPROFILETYPE
OMX_AUDIO_WMAProfileL3	omx/openmax/OMX_Audio.h	/^  OMX_AUDIO_WMAProfileL3,          \/**< Windows Media audio version 9 profile L3 *\/$/;"	e	enum:OMX_AUDIO_WMAPROFILETYPE
OMX_AUDIO_WMAProfileMax	omx/openmax/OMX_Audio.h	/^  OMX_AUDIO_WMAProfileMax = 0x7FFFFFFF$/;"	e	enum:OMX_AUDIO_WMAPROFILETYPE
OMX_AUDIO_WMAProfileUnused	omx/openmax/OMX_Audio.h	/^  OMX_AUDIO_WMAProfileUnused = 0,  \/**< profile unused or unknown *\/$/;"	e	enum:OMX_AUDIO_WMAPROFILETYPE
OMX_AUDIO_WMAProfileVendorStartUnused	omx/openmax/OMX_Audio.h	/^  OMX_AUDIO_WMAProfileVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_AUDIO_WMAPROFILETYPE
OMX_AllocateBuffer	omx/openmax/OMX_Core.h	1028;"	d
OMX_Audio_h	omx/openmax/OMX_Audio.h	30;"	d
OMX_BOOL	omx/openmax/OMX_Types.h	/^typedef enum OMX_BOOL {$/;"	g
OMX_BOOL	omx/openmax/OMX_Types.h	/^} OMX_BOOL; $/;"	t	typeref:enum:OMX_BOOL
OMX_BOOL_MAX	omx/openmax/OMX_Types.h	/^    OMX_BOOL_MAX = 0x7FFFFFFF$/;"	e	enum:OMX_BOOL
OMX_BS32	omx/openmax/OMX_Types.h	/^typedef struct OMX_BS32 {$/;"	s
OMX_BS32	omx/openmax/OMX_Types.h	/^} OMX_BS32;$/;"	t	typeref:struct:OMX_BS32
OMX_BS32::nMax	omx/openmax/OMX_Types.h	/^    OMX_S32 nMax;   \/**< maximum for value (i.e. nValue <= nMax) *\/$/;"	m	struct:OMX_BS32	access:public
OMX_BS32::nMin	omx/openmax/OMX_Types.h	/^    OMX_S32 nMin;   \/**< minimum for value (i.e. nValue >= nMin) *\/$/;"	m	struct:OMX_BS32	access:public
OMX_BS32::nValue	omx/openmax/OMX_Types.h	/^    OMX_S32 nValue; \/**< actual value *\/$/;"	m	struct:OMX_BS32	access:public
OMX_BU32	omx/openmax/OMX_Types.h	/^typedef struct OMX_BU32 {$/;"	s
OMX_BU32	omx/openmax/OMX_Types.h	/^} OMX_BU32;$/;"	t	typeref:struct:OMX_BU32
OMX_BU32::nMax	omx/openmax/OMX_Types.h	/^    OMX_U32 nMax;   \/**< maximum for value (i.e. nValue <= nMax) *\/$/;"	m	struct:OMX_BU32	access:public
OMX_BU32::nMin	omx/openmax/OMX_Types.h	/^    OMX_U32 nMin;   \/**< minimum for value (i.e. nValue >= nMin) *\/$/;"	m	struct:OMX_BU32	access:public
OMX_BU32::nValue	omx/openmax/OMX_Types.h	/^    OMX_U32 nValue; \/**< actual value *\/$/;"	m	struct:OMX_BU32	access:public
OMX_BUFFERFLAG_CODECCONFIG	omx/openmax/OMX_Core.h	393;"	d
OMX_BUFFERFLAG_DATACORRUPT	omx/openmax/OMX_Core.h	356;"	d
OMX_BUFFERFLAG_DECODEONLY	omx/openmax/OMX_Core.h	349;"	d
OMX_BUFFERFLAG_ENDOFFRAME	omx/openmax/OMX_Core.h	363;"	d
OMX_BUFFERFLAG_EOS	omx/openmax/OMX_Core.h	299;"	d
OMX_BUFFERFLAG_EXTRADATA	omx/openmax/OMX_Core.h	375;"	d
OMX_BUFFERFLAG_STARTTIME	omx/openmax/OMX_Core.h	326;"	d
OMX_BUFFERFLAG_SYNCFRAME	omx/openmax/OMX_Core.h	369;"	d
OMX_BUFFERHEADERTYPE	omx/openmax/OMX_Core.h	/^typedef struct OMX_BUFFERHEADERTYPE$/;"	s
OMX_BUFFERHEADERTYPE	omx/openmax/OMX_Core.h	/^} OMX_BUFFERHEADERTYPE;$/;"	t	typeref:struct:OMX_BUFFERHEADERTYPE
OMX_BUFFERHEADERTYPE::hMarkTargetComponent	omx/openmax/OMX_Core.h	/^    OMX_HANDLETYPE hMarkTargetComponent; \/**< The component that will generate a $/;"	m	struct:OMX_BUFFERHEADERTYPE	access:public
OMX_BUFFERHEADERTYPE::nAllocLen	omx/openmax/OMX_Core.h	/^    OMX_U32 nAllocLen;          \/**< size of the buffer allocated, in bytes *\/$/;"	m	struct:OMX_BUFFERHEADERTYPE	access:public
OMX_BUFFERHEADERTYPE::nFilledLen	omx/openmax/OMX_Core.h	/^    OMX_U32 nFilledLen;         \/**< number of bytes currently in the $/;"	m	struct:OMX_BUFFERHEADERTYPE	access:public
OMX_BUFFERHEADERTYPE::nFlags	omx/openmax/OMX_Core.h	/^  OMX_U32     nFlags;           \/**< buffer specific flags *\/$/;"	m	struct:OMX_BUFFERHEADERTYPE	access:public
OMX_BUFFERHEADERTYPE::nInputPortIndex	omx/openmax/OMX_Core.h	/^  OMX_U32 nInputPortIndex;      \/**< The index of the input port (if any) using$/;"	m	struct:OMX_BUFFERHEADERTYPE	access:public
OMX_BUFFERHEADERTYPE::nOffset	omx/openmax/OMX_Core.h	/^    OMX_U32 nOffset;            \/**< start offset of valid data in bytes from$/;"	m	struct:OMX_BUFFERHEADERTYPE	access:public
OMX_BUFFERHEADERTYPE::nOutputPortIndex	omx/openmax/OMX_Core.h	/^  OMX_U32 nOutputPortIndex;     \/**< The index of the output port (if any) using $/;"	m	struct:OMX_BUFFERHEADERTYPE	access:public
OMX_BUFFERHEADERTYPE::nSize	omx/openmax/OMX_Core.h	/^    OMX_U32 nSize;              \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_BUFFERHEADERTYPE	access:public
OMX_BUFFERHEADERTYPE::nTickCount	omx/openmax/OMX_Core.h	/^    OMX_U32 nTickCount;         \/**< Optional entry that the component and$/;"	m	struct:OMX_BUFFERHEADERTYPE	access:public
OMX_BUFFERHEADERTYPE::nTimeStamp	omx/openmax/OMX_Core.h	/^ OMX_TICKS nTimeStamp;          \/**< Timestamp corresponding to the sample $/;"	m	struct:OMX_BUFFERHEADERTYPE	access:public
OMX_BUFFERHEADERTYPE::nVersion	omx/openmax/OMX_Core.h	/^    OMX_VERSIONTYPE nVersion;   \/**< OMX specification version information *\/$/;"	m	struct:OMX_BUFFERHEADERTYPE	access:public
OMX_BUFFERHEADERTYPE::pAppPrivate	omx/openmax/OMX_Core.h	/^    OMX_PTR pAppPrivate;        \/**< pointer to any data the application$/;"	m	struct:OMX_BUFFERHEADERTYPE	access:public
OMX_BUFFERHEADERTYPE::pBuffer	omx/openmax/OMX_Core.h	/^    OMX_U8* pBuffer;            \/**< Pointer to actual block of memory $/;"	m	struct:OMX_BUFFERHEADERTYPE	access:public
OMX_BUFFERHEADERTYPE::pInputPortPrivate	omx/openmax/OMX_Core.h	/^    OMX_PTR pInputPortPrivate;  \/**< pointer to any data the input port$/;"	m	struct:OMX_BUFFERHEADERTYPE	access:public
OMX_BUFFERHEADERTYPE::pMarkData	omx/openmax/OMX_Core.h	/^    OMX_PTR pMarkData;          \/**< Application specific data associated with $/;"	m	struct:OMX_BUFFERHEADERTYPE	access:public
OMX_BUFFERHEADERTYPE::pOutputPortPrivate	omx/openmax/OMX_Core.h	/^    OMX_PTR pOutputPortPrivate; \/**< pointer to any data the output port$/;"	m	struct:OMX_BUFFERHEADERTYPE	access:public
OMX_BUFFERHEADERTYPE::pPlatformPrivate	omx/openmax/OMX_Core.h	/^    OMX_PTR pPlatformPrivate;   \/**< pointer to any data the platform$/;"	m	struct:OMX_BUFFERHEADERTYPE	access:public
OMX_BUFFERSUPPLIERTYPE	omx/openmax/OMX_Core.h	/^typedef enum OMX_BUFFERSUPPLIERTYPE$/;"	g
OMX_BUFFERSUPPLIERTYPE	omx/openmax/OMX_Core.h	/^} OMX_BUFFERSUPPLIERTYPE;$/;"	t	typeref:enum:OMX_BUFFERSUPPLIERTYPE
OMX_BYTE	omx/openmax/OMX_Types.h	/^typedef unsigned char* OMX_BYTE;$/;"	t
OMX_BufferSupplyInput	omx/openmax/OMX_Core.h	/^    OMX_BufferSupplyInput,             \/**< input port supplies the buffers *\/$/;"	e	enum:OMX_BUFFERSUPPLIERTYPE
OMX_BufferSupplyKhronosExtensions	omx/openmax/OMX_Core.h	/^    OMX_BufferSupplyKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_BUFFERSUPPLIERTYPE
OMX_BufferSupplyMax	omx/openmax/OMX_Core.h	/^    OMX_BufferSupplyMax = 0x7FFFFFFF$/;"	e	enum:OMX_BUFFERSUPPLIERTYPE
OMX_BufferSupplyOutput	omx/openmax/OMX_Core.h	/^    OMX_BufferSupplyOutput,            \/**< output port supplies the buffers *\/$/;"	e	enum:OMX_BUFFERSUPPLIERTYPE
OMX_BufferSupplyUnspecified	omx/openmax/OMX_Core.h	/^    OMX_BufferSupplyUnspecified = 0x0, \/**< port supplying the buffers is unspecified,$/;"	e	enum:OMX_BUFFERSUPPLIERTYPE
OMX_BufferSupplyVendorStartUnused	omx/openmax/OMX_Core.h	/^    OMX_BufferSupplyVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_BUFFERSUPPLIERTYPE
OMX_CALLBACKTYPE	omx/openmax/OMX_Core.h	/^typedef struct OMX_CALLBACKTYPE$/;"	s
OMX_CALLBACKTYPE	omx/openmax/OMX_Core.h	/^} OMX_CALLBACKTYPE;$/;"	t	typeref:struct:OMX_CALLBACKTYPE
OMX_CALLBACKTYPE::EmptyBufferDone	omx/openmax/OMX_Core.h	/^    OMX_ERRORTYPE (*EmptyBufferDone)($/;"	m	struct:OMX_CALLBACKTYPE	access:public
OMX_CALLBACKTYPE::EventHandler	omx/openmax/OMX_Core.h	/^   OMX_ERRORTYPE (*EventHandler)($/;"	m	struct:OMX_CALLBACKTYPE	access:public
OMX_CALLBACKTYPE::FillBufferDone	omx/openmax/OMX_Core.h	/^    OMX_ERRORTYPE (*FillBufferDone)($/;"	m	struct:OMX_CALLBACKTYPE	access:public
OMX_CLOCKPORT0	omx/openmax/OMX_Other.h	251;"	d
OMX_CLOCKPORT1	omx/openmax/OMX_Other.h	252;"	d
OMX_CLOCKPORT2	omx/openmax/OMX_Other.h	253;"	d
OMX_CLOCKPORT3	omx/openmax/OMX_Other.h	254;"	d
OMX_CLOCKPORT4	omx/openmax/OMX_Other.h	255;"	d
OMX_CLOCKPORT5	omx/openmax/OMX_Other.h	256;"	d
OMX_CLOCKPORT6	omx/openmax/OMX_Other.h	257;"	d
OMX_CLOCKPORT7	omx/openmax/OMX_Other.h	258;"	d
OMX_COLORBLENDTYPE	omx/openmax/OMX_IVCommon.h	/^typedef enum OMX_COLORBLENDTYPE {$/;"	g
OMX_COLORBLENDTYPE	omx/openmax/OMX_IVCommon.h	/^} OMX_COLORBLENDTYPE;$/;"	t	typeref:enum:OMX_COLORBLENDTYPE
OMX_COLOR_FORMATTYPE	omx/openmax/OMX_IVCommon.h	/^typedef enum OMX_COLOR_FORMATTYPE {$/;"	g
OMX_COLOR_FORMATTYPE	omx/openmax/OMX_IVCommon.h	/^} OMX_COLOR_FORMATTYPE;$/;"	t	typeref:enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_Format12bitRGB444	omx/openmax/OMX_IVCommon.h	/^    OMX_COLOR_Format12bitRGB444,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_Format16bitARGB1555	omx/openmax/OMX_IVCommon.h	/^    OMX_COLOR_Format16bitARGB1555,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_Format16bitARGB4444	omx/openmax/OMX_IVCommon.h	/^    OMX_COLOR_Format16bitARGB4444,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_Format16bitBGR565	omx/openmax/OMX_IVCommon.h	/^    OMX_COLOR_Format16bitBGR565,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_Format16bitRGB565	omx/openmax/OMX_IVCommon.h	/^    OMX_COLOR_Format16bitRGB565,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_Format18BitBGR666	omx/openmax/OMX_IVCommon.h	/^    OMX_COLOR_Format18BitBGR666,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_Format18bitARGB1665	omx/openmax/OMX_IVCommon.h	/^    OMX_COLOR_Format18bitARGB1665,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_Format18bitRGB666	omx/openmax/OMX_IVCommon.h	/^    OMX_COLOR_Format18bitRGB666,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_Format19bitARGB1666	omx/openmax/OMX_IVCommon.h	/^    OMX_COLOR_Format19bitARGB1666, $/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_Format24BitABGR6666	omx/openmax/OMX_IVCommon.h	/^    OMX_COLOR_Format24BitABGR6666,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_Format24BitARGB6666	omx/openmax/OMX_IVCommon.h	/^    OMX_COLOR_Format24BitARGB6666,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_Format24bitARGB1887	omx/openmax/OMX_IVCommon.h	/^    OMX_COLOR_Format24bitARGB1887,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_Format24bitBGR888	omx/openmax/OMX_IVCommon.h	/^    OMX_COLOR_Format24bitBGR888,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_Format24bitRGB888	omx/openmax/OMX_IVCommon.h	/^    OMX_COLOR_Format24bitRGB888,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_Format25bitARGB1888	omx/openmax/OMX_IVCommon.h	/^    OMX_COLOR_Format25bitARGB1888,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_Format32bitARGB8888	omx/openmax/OMX_IVCommon.h	/^    OMX_COLOR_Format32bitARGB8888,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_Format32bitBGRA8888	omx/openmax/OMX_IVCommon.h	/^    OMX_COLOR_Format32bitBGRA8888,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_Format8bitRGB332	omx/openmax/OMX_IVCommon.h	/^    OMX_COLOR_Format8bitRGB332,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatCbYCrY	omx/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatCbYCrY,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatCrYCbY	omx/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatCrYCbY,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatKhronosExtensions	omx/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatL16	omx/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatL16, $/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatL2	omx/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatL2, $/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatL24	omx/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatL24, $/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatL32	omx/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatL32,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatL4	omx/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatL4, $/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatL8	omx/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatL8, $/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatMax	omx/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatMax = 0x7FFFFFFF$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatMonochrome	omx/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatMonochrome,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatRawBayer10bit	omx/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatRawBayer10bit,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatRawBayer8bit	omx/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatRawBayer8bit,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatRawBayer8bitcompressed	omx/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatRawBayer8bitcompressed,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatUnused	omx/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatUnused,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatVendorStartUnused	omx/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatYCbYCr	omx/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatYCbYCr,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatYCrYCb	omx/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatYCrYCb,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatYUV411PackedPlanar	omx/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatYUV411PackedPlanar,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatYUV411Planar	omx/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatYUV411Planar,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatYUV420PackedPlanar	omx/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatYUV420PackedPlanar,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatYUV420PackedSemiPlanar	omx/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatYUV420PackedSemiPlanar,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatYUV420Planar	omx/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatYUV420Planar,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatYUV420SemiPlanar	omx/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatYUV420SemiPlanar,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatYUV422PackedPlanar	omx/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatYUV422PackedPlanar,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatYUV422PackedSemiPlanar	omx/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatYUV422PackedSemiPlanar,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatYUV422Planar	omx/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatYUV422Planar,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatYUV422SemiPlanar	omx/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatYUV422SemiPlanar,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatYUV444Interleaved	omx/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatYUV444Interleaved,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COMMANDTYPE	omx/openmax/OMX_Core.h	/^typedef enum OMX_COMMANDTYPE$/;"	g
OMX_COMMANDTYPE	omx/openmax/OMX_Core.h	/^} OMX_COMMANDTYPE;$/;"	t	typeref:enum:OMX_COMMANDTYPE
OMX_COMPONENTINITTYPE	omx/openmax/OMX_Core.h	/^typedef OMX_ERRORTYPE (* OMX_COMPONENTINITTYPE)(OMX_IN  OMX_HANDLETYPE hComponent);$/;"	t
OMX_COMPONENTREGISTERTYPE	omx/openmax/OMX_Core.h	/^typedef struct OMX_COMPONENTREGISTERTYPE$/;"	s
OMX_COMPONENTREGISTERTYPE	omx/openmax/OMX_Core.h	/^} OMX_COMPONENTREGISTERTYPE;$/;"	t	typeref:struct:OMX_COMPONENTREGISTERTYPE
OMX_COMPONENTREGISTERTYPE::pInitialize	omx/openmax/OMX_Core.h	/^  OMX_COMPONENTINITTYPE pInitialize; \/* Component instance initialization function *\/$/;"	m	struct:OMX_COMPONENTREGISTERTYPE	access:public
OMX_COMPONENTREGISTERTYPE::pName	omx/openmax/OMX_Core.h	/^  const char          * pName;       \/* Component name, 128 byte limit (including '\\0') applies *\/$/;"	m	struct:OMX_COMPONENTREGISTERTYPE	access:public
OMX_COMPONENTTYPE	omx/openmax/OMX_Component.h	/^typedef struct OMX_COMPONENTTYPE$/;"	s
OMX_COMPONENTTYPE	omx/openmax/OMX_Component.h	/^} OMX_COMPONENTTYPE;$/;"	t	typeref:struct:OMX_COMPONENTTYPE
OMX_COMPONENTTYPE::AllocateBuffer	omx/openmax/OMX_Component.h	/^    OMX_ERRORTYPE (*AllocateBuffer)($/;"	m	struct:OMX_COMPONENTTYPE	access:public
OMX_COMPONENTTYPE::ComponentDeInit	omx/openmax/OMX_Component.h	/^    OMX_ERRORTYPE (*ComponentDeInit)($/;"	m	struct:OMX_COMPONENTTYPE	access:public
OMX_COMPONENTTYPE::ComponentRoleEnum	omx/openmax/OMX_Component.h	/^    OMX_ERRORTYPE (*ComponentRoleEnum)($/;"	m	struct:OMX_COMPONENTTYPE	access:public
OMX_COMPONENTTYPE::ComponentTunnelRequest	omx/openmax/OMX_Component.h	/^    OMX_ERRORTYPE (*ComponentTunnelRequest)($/;"	m	struct:OMX_COMPONENTTYPE	access:public
OMX_COMPONENTTYPE::EmptyThisBuffer	omx/openmax/OMX_Component.h	/^    OMX_ERRORTYPE (*EmptyThisBuffer)($/;"	m	struct:OMX_COMPONENTTYPE	access:public
OMX_COMPONENTTYPE::FillThisBuffer	omx/openmax/OMX_Component.h	/^    OMX_ERRORTYPE (*FillThisBuffer)($/;"	m	struct:OMX_COMPONENTTYPE	access:public
OMX_COMPONENTTYPE::FreeBuffer	omx/openmax/OMX_Component.h	/^    OMX_ERRORTYPE (*FreeBuffer)($/;"	m	struct:OMX_COMPONENTTYPE	access:public
OMX_COMPONENTTYPE::GetComponentVersion	omx/openmax/OMX_Component.h	/^    OMX_ERRORTYPE (*GetComponentVersion)($/;"	m	struct:OMX_COMPONENTTYPE	access:public
OMX_COMPONENTTYPE::GetConfig	omx/openmax/OMX_Component.h	/^    OMX_ERRORTYPE (*GetConfig)($/;"	m	struct:OMX_COMPONENTTYPE	access:public
OMX_COMPONENTTYPE::GetExtensionIndex	omx/openmax/OMX_Component.h	/^    OMX_ERRORTYPE (*GetExtensionIndex)($/;"	m	struct:OMX_COMPONENTTYPE	access:public
OMX_COMPONENTTYPE::GetParameter	omx/openmax/OMX_Component.h	/^    OMX_ERRORTYPE (*GetParameter)($/;"	m	struct:OMX_COMPONENTTYPE	access:public
OMX_COMPONENTTYPE::GetState	omx/openmax/OMX_Component.h	/^    OMX_ERRORTYPE (*GetState)($/;"	m	struct:OMX_COMPONENTTYPE	access:public
OMX_COMPONENTTYPE::SendCommand	omx/openmax/OMX_Component.h	/^    OMX_ERRORTYPE (*SendCommand)($/;"	m	struct:OMX_COMPONENTTYPE	access:public
OMX_COMPONENTTYPE::SetCallbacks	omx/openmax/OMX_Component.h	/^    OMX_ERRORTYPE (*SetCallbacks)($/;"	m	struct:OMX_COMPONENTTYPE	access:public
OMX_COMPONENTTYPE::SetConfig	omx/openmax/OMX_Component.h	/^    OMX_ERRORTYPE (*SetConfig)($/;"	m	struct:OMX_COMPONENTTYPE	access:public
OMX_COMPONENTTYPE::SetParameter	omx/openmax/OMX_Component.h	/^    OMX_ERRORTYPE (*SetParameter)($/;"	m	struct:OMX_COMPONENTTYPE	access:public
OMX_COMPONENTTYPE::UseBuffer	omx/openmax/OMX_Component.h	/^    OMX_ERRORTYPE (*UseBuffer)($/;"	m	struct:OMX_COMPONENTTYPE	access:public
OMX_COMPONENTTYPE::UseEGLImage	omx/openmax/OMX_Component.h	/^    OMX_ERRORTYPE (*UseEGLImage)($/;"	m	struct:OMX_COMPONENTTYPE	access:public
OMX_COMPONENTTYPE::nSize	omx/openmax/OMX_Component.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_COMPONENTTYPE	access:public
OMX_COMPONENTTYPE::nVersion	omx/openmax/OMX_Component.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_COMPONENTTYPE	access:public
OMX_COMPONENTTYPE::pApplicationPrivate	omx/openmax/OMX_Component.h	/^    OMX_PTR pApplicationPrivate;$/;"	m	struct:OMX_COMPONENTTYPE	access:public
OMX_COMPONENTTYPE::pComponentPrivate	omx/openmax/OMX_Component.h	/^    OMX_PTR pComponentPrivate;$/;"	m	struct:OMX_COMPONENTTYPE	access:public
OMX_CONFIG_BACKLIGHTTYPE	omx/openmax/OMX_IVCommon.h	/^typedef struct OMX_CONFIG_BACKLIGHTTYPE {$/;"	s
OMX_CONFIG_BACKLIGHTTYPE	omx/openmax/OMX_IVCommon.h	/^} OMX_CONFIG_BACKLIGHTTYPE;$/;"	t	typeref:struct:OMX_CONFIG_BACKLIGHTTYPE
OMX_CONFIG_BACKLIGHTTYPE::nBacklight	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nBacklight;$/;"	m	struct:OMX_CONFIG_BACKLIGHTTYPE	access:public
OMX_CONFIG_BACKLIGHTTYPE::nPortIndex	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_BACKLIGHTTYPE	access:public
OMX_CONFIG_BACKLIGHTTYPE::nSize	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_BACKLIGHTTYPE	access:public
OMX_CONFIG_BACKLIGHTTYPE::nTimeout	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nTimeout;$/;"	m	struct:OMX_CONFIG_BACKLIGHTTYPE	access:public
OMX_CONFIG_BACKLIGHTTYPE::nVersion	omx/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_BACKLIGHTTYPE	access:public
OMX_CONFIG_BOOLEANTYPE	omx/openmax/OMX_Component.h	/^typedef struct OMX_CONFIG_BOOLEANTYPE {$/;"	s
OMX_CONFIG_BOOLEANTYPE	omx/openmax/OMX_Component.h	/^} OMX_CONFIG_BOOLEANTYPE;$/;"	t	typeref:struct:OMX_CONFIG_BOOLEANTYPE
OMX_CONFIG_BOOLEANTYPE::bEnabled	omx/openmax/OMX_Component.h	/^    OMX_BOOL bEnabled;    $/;"	m	struct:OMX_CONFIG_BOOLEANTYPE	access:public
OMX_CONFIG_BOOLEANTYPE::nSize	omx/openmax/OMX_Component.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_BOOLEANTYPE	access:public
OMX_CONFIG_BOOLEANTYPE::nVersion	omx/openmax/OMX_Component.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_BOOLEANTYPE	access:public
OMX_CONFIG_BRIGHTNESSTYPE	omx/openmax/OMX_IVCommon.h	/^typedef struct OMX_CONFIG_BRIGHTNESSTYPE {$/;"	s
OMX_CONFIG_BRIGHTNESSTYPE	omx/openmax/OMX_IVCommon.h	/^} OMX_CONFIG_BRIGHTNESSTYPE;$/;"	t	typeref:struct:OMX_CONFIG_BRIGHTNESSTYPE
OMX_CONFIG_BRIGHTNESSTYPE::nBrightness	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nBrightness;$/;"	m	struct:OMX_CONFIG_BRIGHTNESSTYPE	access:public
OMX_CONFIG_BRIGHTNESSTYPE::nPortIndex	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_BRIGHTNESSTYPE	access:public
OMX_CONFIG_BRIGHTNESSTYPE::nSize	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_BRIGHTNESSTYPE	access:public
OMX_CONFIG_BRIGHTNESSTYPE::nVersion	omx/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_BRIGHTNESSTYPE	access:public
OMX_CONFIG_CALLBACKREQUESTTYPE	omx/openmax/OMX_CoreExt.h	/^typedef struct OMX_CONFIG_CALLBACKREQUESTTYPE {$/;"	s
OMX_CONFIG_CALLBACKREQUESTTYPE	omx/openmax/OMX_CoreExt.h	/^} OMX_CONFIG_CALLBACKREQUESTTYPE;$/;"	t	typeref:struct:OMX_CONFIG_CALLBACKREQUESTTYPE
OMX_CONFIG_CALLBACKREQUESTTYPE::bEnable	omx/openmax/OMX_CoreExt.h	/^    OMX_BOOL bEnable;           \/**< enable (OMX_TRUE) or disable (OMX_FALSE) the callback *\/$/;"	m	struct:OMX_CONFIG_CALLBACKREQUESTTYPE	access:public
OMX_CONFIG_CALLBACKREQUESTTYPE::nIndex	omx/openmax/OMX_CoreExt.h	/^    OMX_INDEXTYPE nIndex;       \/**< the index the callback is requested for *\/$/;"	m	struct:OMX_CONFIG_CALLBACKREQUESTTYPE	access:public
OMX_CONFIG_CALLBACKREQUESTTYPE::nPortIndex	omx/openmax/OMX_CoreExt.h	/^    OMX_U32 nPortIndex;         \/**< port that this structure applies to *\/$/;"	m	struct:OMX_CONFIG_CALLBACKREQUESTTYPE	access:public
OMX_CONFIG_CALLBACKREQUESTTYPE::nSize	omx/openmax/OMX_CoreExt.h	/^    OMX_U32 nSize;              \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_CONFIG_CALLBACKREQUESTTYPE	access:public
OMX_CONFIG_CALLBACKREQUESTTYPE::nVersion	omx/openmax/OMX_CoreExt.h	/^    OMX_VERSIONTYPE nVersion;   \/**< OMX specification version information *\/$/;"	m	struct:OMX_CONFIG_CALLBACKREQUESTTYPE	access:public
OMX_CONFIG_CAPTUREMODETYPE	omx/openmax/OMX_IVCommon.h	/^typedef struct OMX_CONFIG_CAPTUREMODETYPE {$/;"	s
OMX_CONFIG_CAPTUREMODETYPE	omx/openmax/OMX_IVCommon.h	/^} OMX_CONFIG_CAPTUREMODETYPE;$/;"	t	typeref:struct:OMX_CONFIG_CAPTUREMODETYPE
OMX_CONFIG_CAPTUREMODETYPE::bContinuous	omx/openmax/OMX_IVCommon.h	/^    OMX_BOOL bContinuous;   \/**< If true then ignore frame rate and emit capture $/;"	m	struct:OMX_CONFIG_CAPTUREMODETYPE	access:public
OMX_CONFIG_CAPTUREMODETYPE::bFrameLimited	omx/openmax/OMX_IVCommon.h	/^    OMX_BOOL bFrameLimited; \/**< If true then terminate capture after the port emits the $/;"	m	struct:OMX_CONFIG_CAPTUREMODETYPE	access:public
OMX_CONFIG_CAPTUREMODETYPE::nFrameLimit	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nFrameLimit;      \/**< Limit on number of frames emitted during a capture (only$/;"	m	struct:OMX_CONFIG_CAPTUREMODETYPE	access:public
OMX_CONFIG_CAPTUREMODETYPE::nPortIndex	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;     \/**< Port that this structure applies to *\/$/;"	m	struct:OMX_CONFIG_CAPTUREMODETYPE	access:public
OMX_CONFIG_CAPTUREMODETYPE::nSize	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_CAPTUREMODETYPE	access:public
OMX_CONFIG_CAPTUREMODETYPE::nVersion	omx/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_CAPTUREMODETYPE	access:public
OMX_CONFIG_COLORBLENDTYPE	omx/openmax/OMX_IVCommon.h	/^typedef struct OMX_CONFIG_COLORBLENDTYPE {$/;"	s
OMX_CONFIG_COLORBLENDTYPE	omx/openmax/OMX_IVCommon.h	/^} OMX_CONFIG_COLORBLENDTYPE;$/;"	t	typeref:struct:OMX_CONFIG_COLORBLENDTYPE
OMX_CONFIG_COLORBLENDTYPE::eColorBlend	omx/openmax/OMX_IVCommon.h	/^    OMX_COLORBLENDTYPE  eColorBlend;$/;"	m	struct:OMX_CONFIG_COLORBLENDTYPE	access:public
OMX_CONFIG_COLORBLENDTYPE::nPortIndex	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_COLORBLENDTYPE	access:public
OMX_CONFIG_COLORBLENDTYPE::nRGBAlphaConstant	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nRGBAlphaConstant;$/;"	m	struct:OMX_CONFIG_COLORBLENDTYPE	access:public
OMX_CONFIG_COLORBLENDTYPE::nSize	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_COLORBLENDTYPE	access:public
OMX_CONFIG_COLORBLENDTYPE::nVersion	omx/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_COLORBLENDTYPE	access:public
OMX_CONFIG_COLORCONVERSIONTYPE	omx/openmax/OMX_IVCommon.h	/^typedef struct OMX_CONFIG_COLORCONVERSIONTYPE {$/;"	s
OMX_CONFIG_COLORCONVERSIONTYPE	omx/openmax/OMX_IVCommon.h	/^}OMX_CONFIG_COLORCONVERSIONTYPE;$/;"	t	typeref:struct:OMX_CONFIG_COLORCONVERSIONTYPE
OMX_CONFIG_COLORCONVERSIONTYPE::nPortIndex	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;         \/**< Port that this struct applies to *\/$/;"	m	struct:OMX_CONFIG_COLORCONVERSIONTYPE	access:public
OMX_CONFIG_COLORCONVERSIONTYPE::nSize	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;              \/**< Size of the structure in bytes *\/$/;"	m	struct:OMX_CONFIG_COLORCONVERSIONTYPE	access:public
OMX_CONFIG_COLORCONVERSIONTYPE::nVersion	omx/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;   \/**< OMX specification version info *\/ $/;"	m	struct:OMX_CONFIG_COLORCONVERSIONTYPE	access:public
OMX_CONFIG_COLORCONVERSIONTYPE::xColorMatrix	omx/openmax/OMX_IVCommon.h	/^    OMX_S32 xColorMatrix[3][3]; \/**< Stored in signed Q16 format *\/$/;"	m	struct:OMX_CONFIG_COLORCONVERSIONTYPE	access:public
OMX_CONFIG_COLORCONVERSIONTYPE::xColorOffset	omx/openmax/OMX_IVCommon.h	/^    OMX_S32 xColorOffset[4];    \/**< Stored in signed Q16 format *\/$/;"	m	struct:OMX_CONFIG_COLORCONVERSIONTYPE	access:public
OMX_CONFIG_COLORENHANCEMENTTYPE	omx/openmax/OMX_IVCommon.h	/^typedef struct OMX_CONFIG_COLORENHANCEMENTTYPE {$/;"	s
OMX_CONFIG_COLORENHANCEMENTTYPE	omx/openmax/OMX_IVCommon.h	/^} OMX_CONFIG_COLORENHANCEMENTTYPE;$/;"	t	typeref:struct:OMX_CONFIG_COLORENHANCEMENTTYPE
OMX_CONFIG_COLORENHANCEMENTTYPE::bColorEnhancement	omx/openmax/OMX_IVCommon.h	/^    OMX_BOOL bColorEnhancement;$/;"	m	struct:OMX_CONFIG_COLORENHANCEMENTTYPE	access:public
OMX_CONFIG_COLORENHANCEMENTTYPE::nCustomizedU	omx/openmax/OMX_IVCommon.h	/^    OMX_U8 nCustomizedU;$/;"	m	struct:OMX_CONFIG_COLORENHANCEMENTTYPE	access:public
OMX_CONFIG_COLORENHANCEMENTTYPE::nCustomizedV	omx/openmax/OMX_IVCommon.h	/^    OMX_U8 nCustomizedV;$/;"	m	struct:OMX_CONFIG_COLORENHANCEMENTTYPE	access:public
OMX_CONFIG_COLORENHANCEMENTTYPE::nPortIndex	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_COLORENHANCEMENTTYPE	access:public
OMX_CONFIG_COLORENHANCEMENTTYPE::nSize	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_COLORENHANCEMENTTYPE	access:public
OMX_CONFIG_COLORENHANCEMENTTYPE::nVersion	omx/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion; $/;"	m	struct:OMX_CONFIG_COLORENHANCEMENTTYPE	access:public
OMX_CONFIG_COLORKEYTYPE	omx/openmax/OMX_IVCommon.h	/^typedef struct OMX_CONFIG_COLORKEYTYPE {$/;"	s
OMX_CONFIG_COLORKEYTYPE	omx/openmax/OMX_IVCommon.h	/^} OMX_CONFIG_COLORKEYTYPE;$/;"	t	typeref:struct:OMX_CONFIG_COLORKEYTYPE
OMX_CONFIG_COLORKEYTYPE::nARGBColor	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nARGBColor;$/;"	m	struct:OMX_CONFIG_COLORKEYTYPE	access:public
OMX_CONFIG_COLORKEYTYPE::nARGBMask	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nARGBMask;$/;"	m	struct:OMX_CONFIG_COLORKEYTYPE	access:public
OMX_CONFIG_COLORKEYTYPE::nPortIndex	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_COLORKEYTYPE	access:public
OMX_CONFIG_COLORKEYTYPE::nSize	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_COLORKEYTYPE	access:public
OMX_CONFIG_COLORKEYTYPE::nVersion	omx/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_COLORKEYTYPE	access:public
OMX_CONFIG_COMMITMODETYPE	omx/openmax/OMX_ComponentExt.h	/^typedef struct OMX_CONFIG_COMMITMODETYPE {$/;"	s
OMX_CONFIG_COMMITMODETYPE	omx/openmax/OMX_ComponentExt.h	/^} OMX_CONFIG_COMMITMODETYPE;$/;"	t	typeref:struct:OMX_CONFIG_COMMITMODETYPE
OMX_CONFIG_COMMITMODETYPE::bDeferred	omx/openmax/OMX_ComponentExt.h	/^    OMX_BOOL bDeferred;$/;"	m	struct:OMX_CONFIG_COMMITMODETYPE	access:public
OMX_CONFIG_COMMITMODETYPE::nSize	omx/openmax/OMX_ComponentExt.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_COMMITMODETYPE	access:public
OMX_CONFIG_COMMITMODETYPE::nVersion	omx/openmax/OMX_ComponentExt.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_COMMITMODETYPE	access:public
OMX_CONFIG_COMMITTYPE	omx/openmax/OMX_ComponentExt.h	/^typedef struct OMX_CONFIG_COMMITTYPE {$/;"	s
OMX_CONFIG_COMMITTYPE	omx/openmax/OMX_ComponentExt.h	/^} OMX_CONFIG_COMMITTYPE;$/;"	t	typeref:struct:OMX_CONFIG_COMMITTYPE
OMX_CONFIG_COMMITTYPE::nSize	omx/openmax/OMX_ComponentExt.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_COMMITTYPE	access:public
OMX_CONFIG_COMMITTYPE::nVersion	omx/openmax/OMX_ComponentExt.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_COMMITTYPE	access:public
OMX_CONFIG_CONTAINERNODECOUNTTYPE	omx/openmax/OMX_Component.h	/^typedef struct OMX_CONFIG_CONTAINERNODECOUNTTYPE$/;"	s
OMX_CONFIG_CONTAINERNODECOUNTTYPE	omx/openmax/OMX_Component.h	/^} OMX_CONFIG_CONTAINERNODECOUNTTYPE;$/;"	t	typeref:struct:OMX_CONFIG_CONTAINERNODECOUNTTYPE
OMX_CONFIG_CONTAINERNODECOUNTTYPE::bAllKeys	omx/openmax/OMX_Component.h	/^    OMX_BOOL bAllKeys;$/;"	m	struct:OMX_CONFIG_CONTAINERNODECOUNTTYPE	access:public
OMX_CONFIG_CONTAINERNODECOUNTTYPE::nNumNodes	omx/openmax/OMX_Component.h	/^    OMX_U32 nNumNodes;$/;"	m	struct:OMX_CONFIG_CONTAINERNODECOUNTTYPE	access:public
OMX_CONFIG_CONTAINERNODECOUNTTYPE::nParentNodeID	omx/openmax/OMX_Component.h	/^    OMX_U32 nParentNodeID;$/;"	m	struct:OMX_CONFIG_CONTAINERNODECOUNTTYPE	access:public
OMX_CONFIG_CONTAINERNODECOUNTTYPE::nSize	omx/openmax/OMX_Component.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_CONTAINERNODECOUNTTYPE	access:public
OMX_CONFIG_CONTAINERNODECOUNTTYPE::nVersion	omx/openmax/OMX_Component.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_CONTAINERNODECOUNTTYPE	access:public
OMX_CONFIG_CONTAINERNODEIDTYPE	omx/openmax/OMX_Component.h	/^typedef struct OMX_CONFIG_CONTAINERNODEIDTYPE$/;"	s
OMX_CONFIG_CONTAINERNODEIDTYPE	omx/openmax/OMX_Component.h	/^} OMX_CONFIG_CONTAINERNODEIDTYPE;$/;"	t	typeref:struct:OMX_CONFIG_CONTAINERNODEIDTYPE
OMX_CONFIG_CONTAINERNODEIDTYPE::bAllKeys	omx/openmax/OMX_Component.h	/^    OMX_BOOL bAllKeys;$/;"	m	struct:OMX_CONFIG_CONTAINERNODEIDTYPE	access:public
OMX_CONFIG_CONTAINERNODEIDTYPE::bIsLeafType	omx/openmax/OMX_Component.h	/^    OMX_BOOL bIsLeafType;$/;"	m	struct:OMX_CONFIG_CONTAINERNODEIDTYPE	access:public
OMX_CONFIG_CONTAINERNODEIDTYPE::cNodeName	omx/openmax/OMX_Component.h	/^    OMX_STRING cNodeName;$/;"	m	struct:OMX_CONFIG_CONTAINERNODEIDTYPE	access:public
OMX_CONFIG_CONTAINERNODEIDTYPE::nNodeID	omx/openmax/OMX_Component.h	/^    OMX_U32 nNodeID; $/;"	m	struct:OMX_CONFIG_CONTAINERNODEIDTYPE	access:public
OMX_CONFIG_CONTAINERNODEIDTYPE::nNodeIndex	omx/openmax/OMX_Component.h	/^    OMX_U32 nNodeIndex; $/;"	m	struct:OMX_CONFIG_CONTAINERNODEIDTYPE	access:public
OMX_CONFIG_CONTAINERNODEIDTYPE::nParentNodeID	omx/openmax/OMX_Component.h	/^    OMX_U32 nParentNodeID;$/;"	m	struct:OMX_CONFIG_CONTAINERNODEIDTYPE	access:public
OMX_CONFIG_CONTAINERNODEIDTYPE::nSize	omx/openmax/OMX_Component.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_CONTAINERNODEIDTYPE	access:public
OMX_CONFIG_CONTAINERNODEIDTYPE::nVersion	omx/openmax/OMX_Component.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_CONTAINERNODEIDTYPE	access:public
OMX_CONFIG_CONTRASTTYPE	omx/openmax/OMX_IVCommon.h	/^typedef struct OMX_CONFIG_CONTRASTTYPE {$/;"	s
OMX_CONFIG_CONTRASTTYPE	omx/openmax/OMX_IVCommon.h	/^} OMX_CONFIG_CONTRASTTYPE;$/;"	t	typeref:struct:OMX_CONFIG_CONTRASTTYPE
OMX_CONFIG_CONTRASTTYPE::nContrast	omx/openmax/OMX_IVCommon.h	/^    OMX_S32 nContrast;$/;"	m	struct:OMX_CONFIG_CONTRASTTYPE	access:public
OMX_CONFIG_CONTRASTTYPE::nPortIndex	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_CONTRASTTYPE	access:public
OMX_CONFIG_CONTRASTTYPE::nSize	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_CONTRASTTYPE	access:public
OMX_CONFIG_CONTRASTTYPE::nVersion	omx/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_CONTRASTTYPE	access:public
OMX_CONFIG_DITHERTYPE	omx/openmax/OMX_IVCommon.h	/^typedef struct OMX_CONFIG_DITHERTYPE {$/;"	s
OMX_CONFIG_DITHERTYPE	omx/openmax/OMX_IVCommon.h	/^} OMX_CONFIG_DITHERTYPE;$/;"	t	typeref:struct:OMX_CONFIG_DITHERTYPE
OMX_CONFIG_DITHERTYPE::eDither	omx/openmax/OMX_IVCommon.h	/^    OMX_DITHERTYPE eDither;   \/**< Type of dithering to use *\/$/;"	m	struct:OMX_CONFIG_DITHERTYPE	access:public
OMX_CONFIG_DITHERTYPE::nPortIndex	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;       \/**< Port that this structure applies to *\/$/;"	m	struct:OMX_CONFIG_DITHERTYPE	access:public
OMX_CONFIG_DITHERTYPE::nSize	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;            \/**< Size of the structure in bytes *\/$/;"	m	struct:OMX_CONFIG_DITHERTYPE	access:public
OMX_CONFIG_DITHERTYPE::nVersion	omx/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion; \/**< OMX specification version information *\/ $/;"	m	struct:OMX_CONFIG_DITHERTYPE	access:public
OMX_CONFIG_EXPOSURECONTROLTYPE	omx/openmax/OMX_IVCommon.h	/^typedef struct OMX_CONFIG_EXPOSURECONTROLTYPE {$/;"	s
OMX_CONFIG_EXPOSURECONTROLTYPE	omx/openmax/OMX_IVCommon.h	/^} OMX_CONFIG_EXPOSURECONTROLTYPE;$/;"	t	typeref:struct:OMX_CONFIG_EXPOSURECONTROLTYPE
OMX_CONFIG_EXPOSURECONTROLTYPE::eExposureControl	omx/openmax/OMX_IVCommon.h	/^    OMX_EXPOSURECONTROLTYPE eExposureControl;$/;"	m	struct:OMX_CONFIG_EXPOSURECONTROLTYPE	access:public
OMX_CONFIG_EXPOSURECONTROLTYPE::nPortIndex	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_EXPOSURECONTROLTYPE	access:public
OMX_CONFIG_EXPOSURECONTROLTYPE::nSize	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_EXPOSURECONTROLTYPE	access:public
OMX_CONFIG_EXPOSURECONTROLTYPE::nVersion	omx/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_EXPOSURECONTROLTYPE	access:public
OMX_CONFIG_EXPOSUREVALUETYPE	omx/openmax/OMX_IVCommon.h	/^typedef struct OMX_CONFIG_EXPOSUREVALUETYPE {$/;"	s
OMX_CONFIG_EXPOSUREVALUETYPE	omx/openmax/OMX_IVCommon.h	/^} OMX_CONFIG_EXPOSUREVALUETYPE;$/;"	t	typeref:struct:OMX_CONFIG_EXPOSUREVALUETYPE
OMX_CONFIG_EXPOSUREVALUETYPE::bAutoAperture	omx/openmax/OMX_IVCommon.h	/^    OMX_BOOL bAutoAperture;		\/**< Whether aperture number is defined automatically *\/$/;"	m	struct:OMX_CONFIG_EXPOSUREVALUETYPE	access:public
OMX_CONFIG_EXPOSUREVALUETYPE::bAutoSensitivity	omx/openmax/OMX_IVCommon.h	/^    OMX_BOOL bAutoSensitivity;	\/**< Whether sensitivity is defined automatically *\/$/;"	m	struct:OMX_CONFIG_EXPOSUREVALUETYPE	access:public
OMX_CONFIG_EXPOSUREVALUETYPE::bAutoShutterSpeed	omx/openmax/OMX_IVCommon.h	/^    OMX_BOOL bAutoShutterSpeed;	\/**< Whether shutter speed is defined automatically *\/ $/;"	m	struct:OMX_CONFIG_EXPOSUREVALUETYPE	access:public
OMX_CONFIG_EXPOSUREVALUETYPE::eMetering	omx/openmax/OMX_IVCommon.h	/^    OMX_METERINGTYPE eMetering;$/;"	m	struct:OMX_CONFIG_EXPOSUREVALUETYPE	access:public
OMX_CONFIG_EXPOSUREVALUETYPE::nApertureFNumber	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nApertureFNumber;     \/**< e.g. nApertureFNumber = 2 implies "f\/2" - Q16 format *\/$/;"	m	struct:OMX_CONFIG_EXPOSUREVALUETYPE	access:public
OMX_CONFIG_EXPOSUREVALUETYPE::nPortIndex	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_EXPOSUREVALUETYPE	access:public
OMX_CONFIG_EXPOSUREVALUETYPE::nSensitivity	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nSensitivity;         \/**< e.g. nSensitivity = 100 implies "ISO 100" *\/$/;"	m	struct:OMX_CONFIG_EXPOSUREVALUETYPE	access:public
OMX_CONFIG_EXPOSUREVALUETYPE::nShutterSpeedMsec	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nShutterSpeedMsec;    \/**< Shutterspeed in milliseconds *\/ $/;"	m	struct:OMX_CONFIG_EXPOSUREVALUETYPE	access:public
OMX_CONFIG_EXPOSUREVALUETYPE::nSize	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_EXPOSUREVALUETYPE	access:public
OMX_CONFIG_EXPOSUREVALUETYPE::nVersion	omx/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_EXPOSUREVALUETYPE	access:public
OMX_CONFIG_EXPOSUREVALUETYPE::xEVCompensation	omx/openmax/OMX_IVCommon.h	/^    OMX_S32 xEVCompensation;      \/**< Fixed point value stored as Q16 *\/$/;"	m	struct:OMX_CONFIG_EXPOSUREVALUETYPE	access:public
OMX_CONFIG_FOCUSREGIONTYPE	omx/openmax/OMX_IVCommon.h	/^typedef struct OMX_CONFIG_FOCUSREGIONTYPE {$/;"	s
OMX_CONFIG_FOCUSREGIONTYPE	omx/openmax/OMX_IVCommon.h	/^} OMX_CONFIG_FOCUSREGIONTYPE;$/;"	t	typeref:struct:OMX_CONFIG_FOCUSREGIONTYPE
OMX_CONFIG_FOCUSREGIONTYPE::bBottom	omx/openmax/OMX_IVCommon.h	/^    OMX_BOOL bBottom;$/;"	m	struct:OMX_CONFIG_FOCUSREGIONTYPE	access:public
OMX_CONFIG_FOCUSREGIONTYPE::bBottomLeft	omx/openmax/OMX_IVCommon.h	/^    OMX_BOOL bBottomLeft;$/;"	m	struct:OMX_CONFIG_FOCUSREGIONTYPE	access:public
OMX_CONFIG_FOCUSREGIONTYPE::bBottomRight	omx/openmax/OMX_IVCommon.h	/^    OMX_BOOL bBottomRight;$/;"	m	struct:OMX_CONFIG_FOCUSREGIONTYPE	access:public
OMX_CONFIG_FOCUSREGIONTYPE::bCenter	omx/openmax/OMX_IVCommon.h	/^    OMX_BOOL bCenter;$/;"	m	struct:OMX_CONFIG_FOCUSREGIONTYPE	access:public
OMX_CONFIG_FOCUSREGIONTYPE::bLeft	omx/openmax/OMX_IVCommon.h	/^    OMX_BOOL bLeft;$/;"	m	struct:OMX_CONFIG_FOCUSREGIONTYPE	access:public
OMX_CONFIG_FOCUSREGIONTYPE::bRight	omx/openmax/OMX_IVCommon.h	/^    OMX_BOOL bRight;$/;"	m	struct:OMX_CONFIG_FOCUSREGIONTYPE	access:public
OMX_CONFIG_FOCUSREGIONTYPE::bTop	omx/openmax/OMX_IVCommon.h	/^    OMX_BOOL bTop;$/;"	m	struct:OMX_CONFIG_FOCUSREGIONTYPE	access:public
OMX_CONFIG_FOCUSREGIONTYPE::bTopLeft	omx/openmax/OMX_IVCommon.h	/^    OMX_BOOL bTopLeft;$/;"	m	struct:OMX_CONFIG_FOCUSREGIONTYPE	access:public
OMX_CONFIG_FOCUSREGIONTYPE::bTopRight	omx/openmax/OMX_IVCommon.h	/^    OMX_BOOL bTopRight;$/;"	m	struct:OMX_CONFIG_FOCUSREGIONTYPE	access:public
OMX_CONFIG_FOCUSREGIONTYPE::nPortIndex	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_FOCUSREGIONTYPE	access:public
OMX_CONFIG_FOCUSREGIONTYPE::nSize	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_FOCUSREGIONTYPE	access:public
OMX_CONFIG_FOCUSREGIONTYPE::nVersion	omx/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_FOCUSREGIONTYPE	access:public
OMX_CONFIG_FRAMERATETYPE	omx/openmax/OMX_Video.h	/^typedef struct OMX_CONFIG_FRAMERATETYPE {$/;"	s
OMX_CONFIG_FRAMERATETYPE	omx/openmax/OMX_Video.h	/^} OMX_CONFIG_FRAMERATETYPE;$/;"	t	typeref:struct:OMX_CONFIG_FRAMERATETYPE
OMX_CONFIG_FRAMERATETYPE::nPortIndex	omx/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_FRAMERATETYPE	access:public
OMX_CONFIG_FRAMERATETYPE::nSize	omx/openmax/OMX_Video.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_FRAMERATETYPE	access:public
OMX_CONFIG_FRAMERATETYPE::nVersion	omx/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_FRAMERATETYPE	access:public
OMX_CONFIG_FRAMERATETYPE::xEncodeFramerate	omx/openmax/OMX_Video.h	/^    OMX_U32 xEncodeFramerate; \/* Q16 format *\/$/;"	m	struct:OMX_CONFIG_FRAMERATETYPE	access:public
OMX_CONFIG_FRAMESTABTYPE	omx/openmax/OMX_IVCommon.h	/^typedef struct OMX_CONFIG_FRAMESTABTYPE {$/;"	s
OMX_CONFIG_FRAMESTABTYPE	omx/openmax/OMX_IVCommon.h	/^} OMX_CONFIG_FRAMESTABTYPE;$/;"	t	typeref:struct:OMX_CONFIG_FRAMESTABTYPE
OMX_CONFIG_FRAMESTABTYPE::bStab	omx/openmax/OMX_IVCommon.h	/^    OMX_BOOL bStab;$/;"	m	struct:OMX_CONFIG_FRAMESTABTYPE	access:public
OMX_CONFIG_FRAMESTABTYPE::nPortIndex	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_FRAMESTABTYPE	access:public
OMX_CONFIG_FRAMESTABTYPE::nSize	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_FRAMESTABTYPE	access:public
OMX_CONFIG_FRAMESTABTYPE::nVersion	omx/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_FRAMESTABTYPE	access:public
OMX_CONFIG_GAMMATYPE	omx/openmax/OMX_IVCommon.h	/^typedef struct OMX_CONFIG_GAMMATYPE {$/;"	s
OMX_CONFIG_GAMMATYPE	omx/openmax/OMX_IVCommon.h	/^} OMX_CONFIG_GAMMATYPE;$/;"	t	typeref:struct:OMX_CONFIG_GAMMATYPE
OMX_CONFIG_GAMMATYPE::nGamma	omx/openmax/OMX_IVCommon.h	/^    OMX_S32 nGamma;$/;"	m	struct:OMX_CONFIG_GAMMATYPE	access:public
OMX_CONFIG_GAMMATYPE::nPortIndex	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_GAMMATYPE	access:public
OMX_CONFIG_GAMMATYPE::nSize	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_GAMMATYPE	access:public
OMX_CONFIG_GAMMATYPE::nVersion	omx/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_GAMMATYPE	access:public
OMX_CONFIG_IMAGEFILTERTYPE	omx/openmax/OMX_IVCommon.h	/^typedef struct OMX_CONFIG_IMAGEFILTERTYPE {$/;"	s
OMX_CONFIG_IMAGEFILTERTYPE	omx/openmax/OMX_IVCommon.h	/^} OMX_CONFIG_IMAGEFILTERTYPE;$/;"	t	typeref:struct:OMX_CONFIG_IMAGEFILTERTYPE
OMX_CONFIG_IMAGEFILTERTYPE::eImageFilter	omx/openmax/OMX_IVCommon.h	/^    OMX_IMAGEFILTERTYPE eImageFilter;$/;"	m	struct:OMX_CONFIG_IMAGEFILTERTYPE	access:public
OMX_CONFIG_IMAGEFILTERTYPE::nPortIndex	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_IMAGEFILTERTYPE	access:public
OMX_CONFIG_IMAGEFILTERTYPE::nSize	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_IMAGEFILTERTYPE	access:public
OMX_CONFIG_IMAGEFILTERTYPE::nVersion	omx/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_IMAGEFILTERTYPE	access:public
OMX_CONFIG_INTRAREFRESHVOPTYPE	omx/openmax/OMX_Video.h	/^typedef struct OMX_CONFIG_INTRAREFRESHVOPTYPE {$/;"	s
OMX_CONFIG_INTRAREFRESHVOPTYPE	omx/openmax/OMX_Video.h	/^} OMX_CONFIG_INTRAREFRESHVOPTYPE;$/;"	t	typeref:struct:OMX_CONFIG_INTRAREFRESHVOPTYPE
OMX_CONFIG_INTRAREFRESHVOPTYPE::IntraRefreshVOP	omx/openmax/OMX_Video.h	/^    OMX_BOOL IntraRefreshVOP;$/;"	m	struct:OMX_CONFIG_INTRAREFRESHVOPTYPE	access:public
OMX_CONFIG_INTRAREFRESHVOPTYPE::nPortIndex	omx/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_INTRAREFRESHVOPTYPE	access:public
OMX_CONFIG_INTRAREFRESHVOPTYPE::nSize	omx/openmax/OMX_Video.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_INTRAREFRESHVOPTYPE	access:public
OMX_CONFIG_INTRAREFRESHVOPTYPE::nVersion	omx/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_INTRAREFRESHVOPTYPE	access:public
OMX_CONFIG_LIGHTNESSTYPE	omx/openmax/OMX_IVCommon.h	/^typedef struct OMX_CONFIG_LIGHTNESSTYPE {$/;"	s
OMX_CONFIG_LIGHTNESSTYPE	omx/openmax/OMX_IVCommon.h	/^} OMX_CONFIG_LIGHTNESSTYPE;$/;"	t	typeref:struct:OMX_CONFIG_LIGHTNESSTYPE
OMX_CONFIG_LIGHTNESSTYPE::nLightness	omx/openmax/OMX_IVCommon.h	/^    OMX_S32 nLightness;$/;"	m	struct:OMX_CONFIG_LIGHTNESSTYPE	access:public
OMX_CONFIG_LIGHTNESSTYPE::nPortIndex	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_LIGHTNESSTYPE	access:public
OMX_CONFIG_LIGHTNESSTYPE::nSize	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_LIGHTNESSTYPE	access:public
OMX_CONFIG_LIGHTNESSTYPE::nVersion	omx/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_LIGHTNESSTYPE	access:public
OMX_CONFIG_MACROBLOCKERRORMAPTYPE	omx/openmax/OMX_Video.h	/^typedef struct OMX_CONFIG_MACROBLOCKERRORMAPTYPE {$/;"	s
OMX_CONFIG_MACROBLOCKERRORMAPTYPE	omx/openmax/OMX_Video.h	/^} OMX_CONFIG_MACROBLOCKERRORMAPTYPE;$/;"	t	typeref:struct:OMX_CONFIG_MACROBLOCKERRORMAPTYPE
OMX_CONFIG_MACROBLOCKERRORMAPTYPE::ErrMap	omx/openmax/OMX_Video.h	/^    OMX_U8  ErrMap[1];             \/* Error map hint *\/$/;"	m	struct:OMX_CONFIG_MACROBLOCKERRORMAPTYPE	access:public
OMX_CONFIG_MACROBLOCKERRORMAPTYPE::nErrMapSize	omx/openmax/OMX_Video.h	/^    OMX_U32 nErrMapSize;           \/* Size of the Error Map in bytes *\/$/;"	m	struct:OMX_CONFIG_MACROBLOCKERRORMAPTYPE	access:public
OMX_CONFIG_MACROBLOCKERRORMAPTYPE::nPortIndex	omx/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_MACROBLOCKERRORMAPTYPE	access:public
OMX_CONFIG_MACROBLOCKERRORMAPTYPE::nSize	omx/openmax/OMX_Video.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_MACROBLOCKERRORMAPTYPE	access:public
OMX_CONFIG_MACROBLOCKERRORMAPTYPE::nVersion	omx/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_MACROBLOCKERRORMAPTYPE	access:public
OMX_CONFIG_MBERRORREPORTINGTYPE	omx/openmax/OMX_Video.h	/^typedef struct OMX_CONFIG_MBERRORREPORTINGTYPE {$/;"	s
OMX_CONFIG_MBERRORREPORTINGTYPE	omx/openmax/OMX_Video.h	/^} OMX_CONFIG_MBERRORREPORTINGTYPE;$/;"	t	typeref:struct:OMX_CONFIG_MBERRORREPORTINGTYPE
OMX_CONFIG_MBERRORREPORTINGTYPE::bEnabled	omx/openmax/OMX_Video.h	/^    OMX_BOOL bEnabled;$/;"	m	struct:OMX_CONFIG_MBERRORREPORTINGTYPE	access:public
OMX_CONFIG_MBERRORREPORTINGTYPE::nPortIndex	omx/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_MBERRORREPORTINGTYPE	access:public
OMX_CONFIG_MBERRORREPORTINGTYPE::nSize	omx/openmax/OMX_Video.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_MBERRORREPORTINGTYPE	access:public
OMX_CONFIG_MBERRORREPORTINGTYPE::nVersion	omx/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_MBERRORREPORTINGTYPE	access:public
OMX_CONFIG_METADATAITEMCOUNTTYPE	omx/openmax/OMX_Component.h	/^typedef struct OMX_CONFIG_METADATAITEMCOUNTTYPE$/;"	s
OMX_CONFIG_METADATAITEMCOUNTTYPE	omx/openmax/OMX_Component.h	/^} OMX_CONFIG_METADATAITEMCOUNTTYPE;$/;"	t	typeref:struct:OMX_CONFIG_METADATAITEMCOUNTTYPE
OMX_CONFIG_METADATAITEMCOUNTTYPE::eScopeMode	omx/openmax/OMX_Component.h	/^    OMX_METADATASCOPETYPE eScopeMode;$/;"	m	struct:OMX_CONFIG_METADATAITEMCOUNTTYPE	access:public
OMX_CONFIG_METADATAITEMCOUNTTYPE::nMetadataItemCount	omx/openmax/OMX_Component.h	/^    OMX_U32 nMetadataItemCount;$/;"	m	struct:OMX_CONFIG_METADATAITEMCOUNTTYPE	access:public
OMX_CONFIG_METADATAITEMCOUNTTYPE::nScopeSpecifier	omx/openmax/OMX_Component.h	/^    OMX_U32 nScopeSpecifier;$/;"	m	struct:OMX_CONFIG_METADATAITEMCOUNTTYPE	access:public
OMX_CONFIG_METADATAITEMCOUNTTYPE::nSize	omx/openmax/OMX_Component.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_METADATAITEMCOUNTTYPE	access:public
OMX_CONFIG_METADATAITEMCOUNTTYPE::nVersion	omx/openmax/OMX_Component.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_METADATAITEMCOUNTTYPE	access:public
OMX_CONFIG_METADATAITEMTYPE	omx/openmax/OMX_Component.h	/^typedef struct OMX_CONFIG_METADATAITEMTYPE$/;"	s
OMX_CONFIG_METADATAITEMTYPE	omx/openmax/OMX_Component.h	/^} OMX_CONFIG_METADATAITEMTYPE;$/;"	t	typeref:struct:OMX_CONFIG_METADATAITEMTYPE
OMX_CONFIG_METADATAITEMTYPE::eKeyCharset	omx/openmax/OMX_Component.h	/^    OMX_METADATACHARSETTYPE eKeyCharset;$/;"	m	struct:OMX_CONFIG_METADATAITEMTYPE	access:public
OMX_CONFIG_METADATAITEMTYPE::eScopeMode	omx/openmax/OMX_Component.h	/^    OMX_METADATASCOPETYPE eScopeMode;$/;"	m	struct:OMX_CONFIG_METADATAITEMTYPE	access:public
OMX_CONFIG_METADATAITEMTYPE::eSearchMode	omx/openmax/OMX_Component.h	/^    OMX_METADATASEARCHMODETYPE eSearchMode;$/;"	m	struct:OMX_CONFIG_METADATAITEMTYPE	access:public
OMX_CONFIG_METADATAITEMTYPE::eValueCharset	omx/openmax/OMX_Component.h	/^    OMX_METADATACHARSETTYPE eValueCharset;$/;"	m	struct:OMX_CONFIG_METADATAITEMTYPE	access:public
OMX_CONFIG_METADATAITEMTYPE::nKey	omx/openmax/OMX_Component.h	/^    OMX_U8 nKey[128];$/;"	m	struct:OMX_CONFIG_METADATAITEMTYPE	access:public
OMX_CONFIG_METADATAITEMTYPE::nKeySizeUsed	omx/openmax/OMX_Component.h	/^    OMX_U8 nKeySizeUsed;$/;"	m	struct:OMX_CONFIG_METADATAITEMTYPE	access:public
OMX_CONFIG_METADATAITEMTYPE::nMetadataItemIndex	omx/openmax/OMX_Component.h	/^    OMX_U32 nMetadataItemIndex;  $/;"	m	struct:OMX_CONFIG_METADATAITEMTYPE	access:public
OMX_CONFIG_METADATAITEMTYPE::nScopeSpecifier	omx/openmax/OMX_Component.h	/^    OMX_U32 nScopeSpecifier;$/;"	m	struct:OMX_CONFIG_METADATAITEMTYPE	access:public
OMX_CONFIG_METADATAITEMTYPE::nSize	omx/openmax/OMX_Component.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_METADATAITEMTYPE	access:public
OMX_CONFIG_METADATAITEMTYPE::nValue	omx/openmax/OMX_Component.h	/^    OMX_U8 nValue[1];$/;"	m	struct:OMX_CONFIG_METADATAITEMTYPE	access:public
OMX_CONFIG_METADATAITEMTYPE::nValueMaxSize	omx/openmax/OMX_Component.h	/^    OMX_U32 nValueMaxSize;$/;"	m	struct:OMX_CONFIG_METADATAITEMTYPE	access:public
OMX_CONFIG_METADATAITEMTYPE::nValueSizeUsed	omx/openmax/OMX_Component.h	/^    OMX_U32 nValueSizeUsed;$/;"	m	struct:OMX_CONFIG_METADATAITEMTYPE	access:public
OMX_CONFIG_METADATAITEMTYPE::nVersion	omx/openmax/OMX_Component.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_METADATAITEMTYPE	access:public
OMX_CONFIG_METADATAITEMTYPE::sLanguageCountry	omx/openmax/OMX_Component.h	/^    OMX_STRING sLanguageCountry;$/;"	m	struct:OMX_CONFIG_METADATAITEMTYPE	access:public
OMX_CONFIG_MIRRORTYPE	omx/openmax/OMX_IVCommon.h	/^typedef struct OMX_CONFIG_MIRRORTYPE {$/;"	s
OMX_CONFIG_MIRRORTYPE	omx/openmax/OMX_IVCommon.h	/^} OMX_CONFIG_MIRRORTYPE;$/;"	t	typeref:struct:OMX_CONFIG_MIRRORTYPE
OMX_CONFIG_MIRRORTYPE::eMirror	omx/openmax/OMX_IVCommon.h	/^    OMX_MIRRORTYPE  eMirror;$/;"	m	struct:OMX_CONFIG_MIRRORTYPE	access:public
OMX_CONFIG_MIRRORTYPE::nPortIndex	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_MIRRORTYPE	access:public
OMX_CONFIG_MIRRORTYPE::nSize	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_MIRRORTYPE	access:public
OMX_CONFIG_MIRRORTYPE::nVersion	omx/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion; $/;"	m	struct:OMX_CONFIG_MIRRORTYPE	access:public
OMX_CONFIG_PLANEBLENDTYPE	omx/openmax/OMX_IVCommon.h	/^typedef struct OMX_CONFIG_PLANEBLENDTYPE {$/;"	s
OMX_CONFIG_PLANEBLENDTYPE	omx/openmax/OMX_IVCommon.h	/^} OMX_CONFIG_PLANEBLENDTYPE;$/;"	t	typeref:struct:OMX_CONFIG_PLANEBLENDTYPE
OMX_CONFIG_PLANEBLENDTYPE::nAlpha	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nAlpha;$/;"	m	struct:OMX_CONFIG_PLANEBLENDTYPE	access:public
OMX_CONFIG_PLANEBLENDTYPE::nDepth	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nDepth;$/;"	m	struct:OMX_CONFIG_PLANEBLENDTYPE	access:public
OMX_CONFIG_PLANEBLENDTYPE::nPortIndex	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_PLANEBLENDTYPE	access:public
OMX_CONFIG_PLANEBLENDTYPE::nSize	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_PLANEBLENDTYPE	access:public
OMX_CONFIG_PLANEBLENDTYPE::nVersion	omx/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_PLANEBLENDTYPE	access:public
OMX_CONFIG_POINTTYPE	omx/openmax/OMX_IVCommon.h	/^typedef struct OMX_CONFIG_POINTTYPE {$/;"	s
OMX_CONFIG_POINTTYPE	omx/openmax/OMX_IVCommon.h	/^} OMX_CONFIG_POINTTYPE;$/;"	t	typeref:struct:OMX_CONFIG_POINTTYPE
OMX_CONFIG_POINTTYPE::nPortIndex	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_POINTTYPE	access:public
OMX_CONFIG_POINTTYPE::nSize	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_POINTTYPE	access:public
OMX_CONFIG_POINTTYPE::nVersion	omx/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_POINTTYPE	access:public
OMX_CONFIG_POINTTYPE::nX	omx/openmax/OMX_IVCommon.h	/^    OMX_S32 nX;$/;"	m	struct:OMX_CONFIG_POINTTYPE	access:public
OMX_CONFIG_POINTTYPE::nY	omx/openmax/OMX_IVCommon.h	/^    OMX_S32 nY;$/;"	m	struct:OMX_CONFIG_POINTTYPE	access:public
OMX_CONFIG_RECTTYPE	omx/openmax/OMX_IVCommon.h	/^typedef struct OMX_CONFIG_RECTTYPE {$/;"	s
OMX_CONFIG_RECTTYPE	omx/openmax/OMX_IVCommon.h	/^} OMX_CONFIG_RECTTYPE;$/;"	t	typeref:struct:OMX_CONFIG_RECTTYPE
OMX_CONFIG_RECTTYPE::nHeight	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nHeight;$/;"	m	struct:OMX_CONFIG_RECTTYPE	access:public
OMX_CONFIG_RECTTYPE::nLeft	omx/openmax/OMX_IVCommon.h	/^    OMX_S32 nLeft; $/;"	m	struct:OMX_CONFIG_RECTTYPE	access:public
OMX_CONFIG_RECTTYPE::nPortIndex	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex; $/;"	m	struct:OMX_CONFIG_RECTTYPE	access:public
OMX_CONFIG_RECTTYPE::nSize	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_RECTTYPE	access:public
OMX_CONFIG_RECTTYPE::nTop	omx/openmax/OMX_IVCommon.h	/^    OMX_S32 nTop;$/;"	m	struct:OMX_CONFIG_RECTTYPE	access:public
OMX_CONFIG_RECTTYPE::nVersion	omx/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;  $/;"	m	struct:OMX_CONFIG_RECTTYPE	access:public
OMX_CONFIG_RECTTYPE::nWidth	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nWidth;$/;"	m	struct:OMX_CONFIG_RECTTYPE	access:public
OMX_CONFIG_ROTATIONTYPE	omx/openmax/OMX_IVCommon.h	/^typedef struct OMX_CONFIG_ROTATIONTYPE {$/;"	s
OMX_CONFIG_ROTATIONTYPE	omx/openmax/OMX_IVCommon.h	/^} OMX_CONFIG_ROTATIONTYPE;$/;"	t	typeref:struct:OMX_CONFIG_ROTATIONTYPE
OMX_CONFIG_ROTATIONTYPE::nPortIndex	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_ROTATIONTYPE	access:public
OMX_CONFIG_ROTATIONTYPE::nRotation	omx/openmax/OMX_IVCommon.h	/^    OMX_S32 nRotation; $/;"	m	struct:OMX_CONFIG_ROTATIONTYPE	access:public
OMX_CONFIG_ROTATIONTYPE::nSize	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_ROTATIONTYPE	access:public
OMX_CONFIG_ROTATIONTYPE::nVersion	omx/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_ROTATIONTYPE	access:public
OMX_CONFIG_SATURATIONTYPE	omx/openmax/OMX_IVCommon.h	/^typedef struct OMX_CONFIG_SATURATIONTYPE {$/;"	s
OMX_CONFIG_SATURATIONTYPE	omx/openmax/OMX_IVCommon.h	/^} OMX_CONFIG_SATURATIONTYPE;$/;"	t	typeref:struct:OMX_CONFIG_SATURATIONTYPE
OMX_CONFIG_SATURATIONTYPE::nPortIndex	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_SATURATIONTYPE	access:public
OMX_CONFIG_SATURATIONTYPE::nSaturation	omx/openmax/OMX_IVCommon.h	/^    OMX_S32 nSaturation;$/;"	m	struct:OMX_CONFIG_SATURATIONTYPE	access:public
OMX_CONFIG_SATURATIONTYPE::nSize	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_SATURATIONTYPE	access:public
OMX_CONFIG_SATURATIONTYPE::nVersion	omx/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_SATURATIONTYPE	access:public
OMX_CONFIG_SCALEFACTORTYPE	omx/openmax/OMX_IVCommon.h	/^typedef struct OMX_CONFIG_SCALEFACTORTYPE {$/;"	s
OMX_CONFIG_SCALEFACTORTYPE	omx/openmax/OMX_IVCommon.h	/^}OMX_CONFIG_SCALEFACTORTYPE;$/;"	t	typeref:struct:OMX_CONFIG_SCALEFACTORTYPE
OMX_CONFIG_SCALEFACTORTYPE::nPortIndex	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;       \/**< Port that this struct applies to *\/$/;"	m	struct:OMX_CONFIG_SCALEFACTORTYPE	access:public
OMX_CONFIG_SCALEFACTORTYPE::nSize	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;            \/**< Size of the structure in bytes *\/$/;"	m	struct:OMX_CONFIG_SCALEFACTORTYPE	access:public
OMX_CONFIG_SCALEFACTORTYPE::nVersion	omx/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion; \/**< OMX specification version info *\/ $/;"	m	struct:OMX_CONFIG_SCALEFACTORTYPE	access:public
OMX_CONFIG_SCALEFACTORTYPE::xHeight	omx/openmax/OMX_IVCommon.h	/^    OMX_S32 xHeight;          \/**< Fixed point value stored as Q16 *\/$/;"	m	struct:OMX_CONFIG_SCALEFACTORTYPE	access:public
OMX_CONFIG_SCALEFACTORTYPE::xWidth	omx/openmax/OMX_IVCommon.h	/^    OMX_S32 xWidth;           \/**< Fixed point value stored as Q16 *\/$/;"	m	struct:OMX_CONFIG_SCALEFACTORTYPE	access:public
OMX_CONFIG_TRANSITIONEFFECTTYPE	omx/openmax/OMX_IVCommon.h	/^typedef struct OMX_CONFIG_TRANSITIONEFFECTTYPE {$/;"	s
OMX_CONFIG_TRANSITIONEFFECTTYPE	omx/openmax/OMX_IVCommon.h	/^} OMX_CONFIG_TRANSITIONEFFECTTYPE;$/;"	t	typeref:struct:OMX_CONFIG_TRANSITIONEFFECTTYPE
OMX_CONFIG_TRANSITIONEFFECTTYPE::eEffect	omx/openmax/OMX_IVCommon.h	/^    OMX_TRANSITIONEFFECTTYPE eEffect;$/;"	m	struct:OMX_CONFIG_TRANSITIONEFFECTTYPE	access:public
OMX_CONFIG_TRANSITIONEFFECTTYPE::nPortIndex	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_TRANSITIONEFFECTTYPE	access:public
OMX_CONFIG_TRANSITIONEFFECTTYPE::nSize	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_TRANSITIONEFFECTTYPE	access:public
OMX_CONFIG_TRANSITIONEFFECTTYPE::nVersion	omx/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_TRANSITIONEFFECTTYPE	access:public
OMX_CONFIG_WHITEBALCONTROLTYPE	omx/openmax/OMX_IVCommon.h	/^typedef struct OMX_CONFIG_WHITEBALCONTROLTYPE {$/;"	s
OMX_CONFIG_WHITEBALCONTROLTYPE	omx/openmax/OMX_IVCommon.h	/^} OMX_CONFIG_WHITEBALCONTROLTYPE;$/;"	t	typeref:struct:OMX_CONFIG_WHITEBALCONTROLTYPE
OMX_CONFIG_WHITEBALCONTROLTYPE::eWhiteBalControl	omx/openmax/OMX_IVCommon.h	/^    OMX_WHITEBALCONTROLTYPE eWhiteBalControl;$/;"	m	struct:OMX_CONFIG_WHITEBALCONTROLTYPE	access:public
OMX_CONFIG_WHITEBALCONTROLTYPE::nPortIndex	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_WHITEBALCONTROLTYPE	access:public
OMX_CONFIG_WHITEBALCONTROLTYPE::nSize	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_WHITEBALCONTROLTYPE	access:public
OMX_CONFIG_WHITEBALCONTROLTYPE::nVersion	omx/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_WHITEBALCONTROLTYPE	access:public
OMX_CONTENTPIPE_H	omx/openmax/OMX_ContentPipe.h	31;"	d
OMX_ColorBlendAlphaConstant	omx/openmax/OMX_IVCommon.h	/^    OMX_ColorBlendAlphaConstant,$/;"	e	enum:OMX_COLORBLENDTYPE
OMX_ColorBlendAlphaPerPixel	omx/openmax/OMX_IVCommon.h	/^    OMX_ColorBlendAlphaPerPixel,$/;"	e	enum:OMX_COLORBLENDTYPE
OMX_ColorBlendAlternate	omx/openmax/OMX_IVCommon.h	/^    OMX_ColorBlendAlternate,$/;"	e	enum:OMX_COLORBLENDTYPE
OMX_ColorBlendAnd	omx/openmax/OMX_IVCommon.h	/^    OMX_ColorBlendAnd,$/;"	e	enum:OMX_COLORBLENDTYPE
OMX_ColorBlendInvert	omx/openmax/OMX_IVCommon.h	/^    OMX_ColorBlendInvert,$/;"	e	enum:OMX_COLORBLENDTYPE
OMX_ColorBlendKhronosExtensions	omx/openmax/OMX_IVCommon.h	/^    OMX_ColorBlendKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_COLORBLENDTYPE
OMX_ColorBlendMax	omx/openmax/OMX_IVCommon.h	/^    OMX_ColorBlendMax = 0x7FFFFFFF$/;"	e	enum:OMX_COLORBLENDTYPE
OMX_ColorBlendNone	omx/openmax/OMX_IVCommon.h	/^    OMX_ColorBlendNone,$/;"	e	enum:OMX_COLORBLENDTYPE
OMX_ColorBlendOr	omx/openmax/OMX_IVCommon.h	/^    OMX_ColorBlendOr,$/;"	e	enum:OMX_COLORBLENDTYPE
OMX_ColorBlendVendorStartUnused	omx/openmax/OMX_IVCommon.h	/^    OMX_ColorBlendVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_COLORBLENDTYPE
OMX_CommandFlush	omx/openmax/OMX_Core.h	/^    OMX_CommandFlush,       \/**< Flush the data queue(s) of a component *\/$/;"	e	enum:OMX_COMMANDTYPE
OMX_CommandKhronosExtensions	omx/openmax/OMX_Core.h	/^    OMX_CommandKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_COMMANDTYPE
OMX_CommandMarkBuffer	omx/openmax/OMX_Core.h	/^    OMX_CommandMarkBuffer,  \/**< Mark a component\/buffer for observation *\/$/;"	e	enum:OMX_COMMANDTYPE
OMX_CommandMax	omx/openmax/OMX_Core.h	/^    OMX_CommandMax = 0X7FFFFFFF$/;"	e	enum:OMX_COMMANDTYPE
OMX_CommandPortDisable	omx/openmax/OMX_Core.h	/^    OMX_CommandPortDisable, \/**< Disable a port on a component. *\/$/;"	e	enum:OMX_COMMANDTYPE
OMX_CommandPortEnable	omx/openmax/OMX_Core.h	/^    OMX_CommandPortEnable,  \/**< Enable a port on a component. *\/$/;"	e	enum:OMX_COMMANDTYPE
OMX_CommandStateSet	omx/openmax/OMX_Core.h	/^    OMX_CommandStateSet,    \/**< Change the component state *\/$/;"	e	enum:OMX_COMMANDTYPE
OMX_CommandVendorStartUnused	omx/openmax/OMX_Core.h	/^    OMX_CommandVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_COMMANDTYPE
OMX_ComponentExt_h	omx/openmax/OMX_ComponentExt.h	30;"	d
OMX_ComponentNameEnum	omx/openmax/OMX_Core.h	/^OMX_API OMX_ERRORTYPE OMX_APIENTRY OMX_ComponentNameEnum($/;"	p	signature:( OMX_OUT OMX_STRING cComponentName, OMX_IN OMX_U32 nNameLength, OMX_IN OMX_U32 nIndex)
OMX_Component_h	omx/openmax/OMX_Component.h	31;"	d
OMX_CoreExt_h	omx/openmax/OMX_CoreExt.h	30;"	d
OMX_Core_h	omx/openmax/OMX_Core.h	30;"	d
OMX_DATAUNITENCAPSULATIONTYPE	omx/openmax/OMX_IVCommon.h	/^typedef enum OMX_DATAUNITENCAPSULATIONTYPE {$/;"	g
OMX_DATAUNITENCAPSULATIONTYPE	omx/openmax/OMX_IVCommon.h	/^} OMX_DATAUNITENCAPSULATIONTYPE;$/;"	t	typeref:enum:OMX_DATAUNITENCAPSULATIONTYPE
OMX_DATAUNITTYPE	omx/openmax/OMX_IVCommon.h	/^typedef enum OMX_DATAUNITTYPE {$/;"	g
OMX_DATAUNITTYPE	omx/openmax/OMX_IVCommon.h	/^} OMX_DATAUNITTYPE;$/;"	t	typeref:enum:OMX_DATAUNITTYPE
OMX_DIRTYPE	omx/openmax/OMX_Types.h	/^typedef enum OMX_DIRTYPE$/;"	g
OMX_DIRTYPE	omx/openmax/OMX_Types.h	/^} OMX_DIRTYPE;$/;"	t	typeref:enum:OMX_DIRTYPE
OMX_DITHERTYPE	omx/openmax/OMX_IVCommon.h	/^typedef enum OMX_DITHERTYPE {$/;"	g
OMX_DITHERTYPE	omx/openmax/OMX_IVCommon.h	/^} OMX_DITHERTYPE;$/;"	t	typeref:enum:OMX_DITHERTYPE
OMX_DataEncapsulationElementaryStream	omx/openmax/OMX_IVCommon.h	/^    OMX_DataEncapsulationElementaryStream,$/;"	e	enum:OMX_DATAUNITENCAPSULATIONTYPE
OMX_DataEncapsulationGenericPayload	omx/openmax/OMX_IVCommon.h	/^    OMX_DataEncapsulationGenericPayload,$/;"	e	enum:OMX_DATAUNITENCAPSULATIONTYPE
OMX_DataEncapsulationKhronosExtensions	omx/openmax/OMX_IVCommon.h	/^    OMX_DataEncapsulationKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_DATAUNITENCAPSULATIONTYPE
OMX_DataEncapsulationMax	omx/openmax/OMX_IVCommon.h	/^    OMX_DataEncapsulationMax = 0x7FFFFFFF$/;"	e	enum:OMX_DATAUNITENCAPSULATIONTYPE
OMX_DataEncapsulationRtpPayload	omx/openmax/OMX_IVCommon.h	/^    OMX_DataEncapsulationRtpPayload,$/;"	e	enum:OMX_DATAUNITENCAPSULATIONTYPE
OMX_DataEncapsulationVendorStartUnused	omx/openmax/OMX_IVCommon.h	/^    OMX_DataEncapsulationVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_DATAUNITENCAPSULATIONTYPE
OMX_DataUnitArbitraryStreamSection	omx/openmax/OMX_IVCommon.h	/^    OMX_DataUnitArbitraryStreamSection,$/;"	e	enum:OMX_DATAUNITTYPE
OMX_DataUnitCodedPicture	omx/openmax/OMX_IVCommon.h	/^    OMX_DataUnitCodedPicture,$/;"	e	enum:OMX_DATAUNITTYPE
OMX_DataUnitKhronosExtensions	omx/openmax/OMX_IVCommon.h	/^    OMX_DataUnitKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_DATAUNITTYPE
OMX_DataUnitMax	omx/openmax/OMX_IVCommon.h	/^    OMX_DataUnitMax = 0x7FFFFFFF$/;"	e	enum:OMX_DATAUNITTYPE
OMX_DataUnitSeveralSegments	omx/openmax/OMX_IVCommon.h	/^    OMX_DataUnitSeveralSegments,$/;"	e	enum:OMX_DATAUNITTYPE
OMX_DataUnitVendorStartUnused	omx/openmax/OMX_IVCommon.h	/^    OMX_DataUnitVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_DATAUNITTYPE
OMX_DataUnitVideoSegment	omx/openmax/OMX_IVCommon.h	/^    OMX_DataUnitVideoSegment,$/;"	e	enum:OMX_DATAUNITTYPE
OMX_Deinit	omx/openmax/OMX_Core.h	/^OMX_API OMX_ERRORTYPE OMX_APIENTRY OMX_Deinit(void);$/;"	p	signature:(void)
OMX_DirInput	omx/openmax/OMX_Types.h	/^    OMX_DirInput,              \/**< Port is an input port *\/$/;"	e	enum:OMX_DIRTYPE
OMX_DirMax	omx/openmax/OMX_Types.h	/^    OMX_DirMax = 0x7FFFFFFF$/;"	e	enum:OMX_DIRTYPE
OMX_DirOutput	omx/openmax/OMX_Types.h	/^    OMX_DirOutput,             \/**< Port is an output port *\/$/;"	e	enum:OMX_DIRTYPE
OMX_DitherErrorDiffusion	omx/openmax/OMX_IVCommon.h	/^    OMX_DitherErrorDiffusion,$/;"	e	enum:OMX_DITHERTYPE
OMX_DitherKhronosExtensions	omx/openmax/OMX_IVCommon.h	/^    OMX_DitherKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_DITHERTYPE
OMX_DitherMax	omx/openmax/OMX_IVCommon.h	/^    OMX_DitherMax = 0x7FFFFFFF$/;"	e	enum:OMX_DITHERTYPE
OMX_DitherNone	omx/openmax/OMX_IVCommon.h	/^    OMX_DitherNone,$/;"	e	enum:OMX_DITHERTYPE
OMX_DitherOrdered	omx/openmax/OMX_IVCommon.h	/^    OMX_DitherOrdered,$/;"	e	enum:OMX_DITHERTYPE
OMX_DitherOther	omx/openmax/OMX_IVCommon.h	/^    OMX_DitherOther,$/;"	e	enum:OMX_DITHERTYPE
OMX_DitherVendorStartUnused	omx/openmax/OMX_IVCommon.h	/^    OMX_DitherVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_DITHERTYPE
OMX_ENDIANTYPE	omx/openmax/OMX_Types.h	/^typedef enum OMX_ENDIANTYPE$/;"	g
OMX_ENDIANTYPE	omx/openmax/OMX_Types.h	/^} OMX_ENDIANTYPE;$/;"	t	typeref:enum:OMX_ENDIANTYPE
OMX_ERROREXTTYPE	omx/openmax/OMX_CoreExt.h	/^typedef enum OMX_ERROREXTTYPE $/;"	g
OMX_ERROREXTTYPE	omx/openmax/OMX_CoreExt.h	/^} OMX_ERROREXTTYPE;$/;"	t	typeref:enum:OMX_ERROREXTTYPE
OMX_ERRORTYPE	omx/openmax/OMX_Core.h	/^typedef enum OMX_ERRORTYPE$/;"	g
OMX_ERRORTYPE	omx/openmax/OMX_Core.h	/^} OMX_ERRORTYPE;$/;"	t	typeref:enum:OMX_ERRORTYPE
OMX_EVENTEXTTYPE	omx/openmax/OMX_CoreExt.h	/^typedef enum OMX_EVENTEXTTYPE$/;"	g
OMX_EVENTEXTTYPE	omx/openmax/OMX_CoreExt.h	/^} OMX_EVENTEXTTYPE;$/;"	t	typeref:enum:OMX_EVENTEXTTYPE
OMX_EVENTTYPE	omx/openmax/OMX_Core.h	/^typedef enum OMX_EVENTTYPE$/;"	g
OMX_EVENTTYPE	omx/openmax/OMX_Core.h	/^} OMX_EVENTTYPE;$/;"	t	typeref:enum:OMX_EVENTTYPE
OMX_EVModeMax	omx/openmax/OMX_IVCommon.h	/^    OMX_EVModeMax = 0x7fffffff$/;"	e	enum:OMX_METERINGTYPE
OMX_EXPOSURECONTROLTYPE	omx/openmax/OMX_IVCommon.h	/^typedef enum OMX_EXPOSURECONTROLTYPE {$/;"	g
OMX_EXPOSURECONTROLTYPE	omx/openmax/OMX_IVCommon.h	/^} OMX_EXPOSURECONTROLTYPE;$/;"	t	typeref:enum:OMX_EXPOSURECONTROLTYPE
OMX_EXTRADATATYPE	omx/openmax/OMX_Core.h	/^typedef enum OMX_EXTRADATATYPE$/;"	g
OMX_EXTRADATATYPE	omx/openmax/OMX_Core.h	/^} OMX_EXTRADATATYPE;$/;"	t	typeref:enum:OMX_EXTRADATATYPE
OMX_EXT_COLOR_FormatNV12LFdValue	omx/gstomx.h	/^    OMX_EXT_COLOR_FormatNV12LFdValue = 0x7F000013$/;"	e	enum:__anon4
OMX_EXT_COLOR_FormatNV12LPhysicalAddress	omx/gstomx.h	/^    OMX_EXT_COLOR_FormatNV12LPhysicalAddress = 0x7F000002,$/;"	e	enum:__anon4
OMX_EXT_COLOR_FormatNV12TFdValue	omx/gstomx.h	/^    OMX_EXT_COLOR_FormatNV12TFdValue = 0x7F000012,$/;"	e	enum:__anon4
OMX_EXT_COLOR_FormatNV12TPhysicalAddress	omx/gstomx.h	/^    OMX_EXT_COLOR_FormatNV12TPhysicalAddress = 0x7F000001, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:__anon4
OMX_EXT_COLOR_FormatNV12Tiled	omx/gstomx.h	/^    OMX_EXT_COLOR_FormatNV12Tiled = 0x7FC00002,$/;"	e	enum:__anon4
OMX_EffectDissolve	omx/openmax/OMX_IVCommon.h	/^    OMX_EffectDissolve,$/;"	e	enum:OMX_TRANSITIONEFFECTTYPE
OMX_EffectFadeFromBlack	omx/openmax/OMX_IVCommon.h	/^    OMX_EffectFadeFromBlack,$/;"	e	enum:OMX_TRANSITIONEFFECTTYPE
OMX_EffectFadeToBlack	omx/openmax/OMX_IVCommon.h	/^    OMX_EffectFadeToBlack,$/;"	e	enum:OMX_TRANSITIONEFFECTTYPE
OMX_EffectKhronosExtensions	omx/openmax/OMX_IVCommon.h	/^    OMX_EffectKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_TRANSITIONEFFECTTYPE
OMX_EffectMax	omx/openmax/OMX_IVCommon.h	/^    OMX_EffectMax = 0x7FFFFFFF$/;"	e	enum:OMX_TRANSITIONEFFECTTYPE
OMX_EffectNone	omx/openmax/OMX_IVCommon.h	/^    OMX_EffectNone,$/;"	e	enum:OMX_TRANSITIONEFFECTTYPE
OMX_EffectUnspecifiedMixOfTwoScenes	omx/openmax/OMX_IVCommon.h	/^    OMX_EffectUnspecifiedMixOfTwoScenes,$/;"	e	enum:OMX_TRANSITIONEFFECTTYPE
OMX_EffectUnspecifiedThroughConstantColor	omx/openmax/OMX_IVCommon.h	/^    OMX_EffectUnspecifiedThroughConstantColor,$/;"	e	enum:OMX_TRANSITIONEFFECTTYPE
OMX_EffectVendorStartUnused	omx/openmax/OMX_IVCommon.h	/^    OMX_EffectVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_TRANSITIONEFFECTTYPE
OMX_EffectWipe	omx/openmax/OMX_IVCommon.h	/^    OMX_EffectWipe,$/;"	e	enum:OMX_TRANSITIONEFFECTTYPE
OMX_EmptyThisBuffer	omx/openmax/OMX_Core.h	1096;"	d
OMX_EndianBig	omx/openmax/OMX_Types.h	/^    OMX_EndianBig, \/**< big endian *\/$/;"	e	enum:OMX_ENDIANTYPE
OMX_EndianLittle	omx/openmax/OMX_Types.h	/^    OMX_EndianLittle, \/**< little endian *\/$/;"	e	enum:OMX_ENDIANTYPE
OMX_EndianMax	omx/openmax/OMX_Types.h	/^    OMX_EndianMax = 0x7FFFFFFF$/;"	e	enum:OMX_ENDIANTYPE
OMX_ErrorBadParameter	omx/openmax/OMX_Core.h	/^  OMX_ErrorBadParameter = (OMX_S32) 0x80001005,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorBadPortIndex	omx/openmax/OMX_Core.h	/^  OMX_ErrorBadPortIndex = (OMX_S32) 0x8000101B,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorComponentNotFound	omx/openmax/OMX_Core.h	/^  OMX_ErrorComponentNotFound = (OMX_S32) 0x80001003,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorComponentSuspended	omx/openmax/OMX_Core.h	/^  OMX_ErrorComponentSuspended = (OMX_S32) 0x8000101D,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorContentPipeCreationFailed	omx/openmax/OMX_Core.h	/^  OMX_ErrorContentPipeCreationFailed = (OMX_S32) 0x80001022,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorContentPipeOpenFailed	omx/openmax/OMX_Core.h	/^  OMX_ErrorContentPipeOpenFailed = (OMX_S32) 0x80001021,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorDynamicResourcesUnavailable	omx/openmax/OMX_Core.h	/^  OMX_ErrorDynamicResourcesUnavailable = (OMX_S32) 0x8000101E,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorExtMax	omx/openmax/OMX_CoreExt.h	/^    OMX_ErrorExtMax = 0x7FFFFFFF$/;"	e	enum:OMX_ERROREXTTYPE
OMX_ErrorFormatNotDetected	omx/openmax/OMX_Core.h	/^  OMX_ErrorFormatNotDetected = (OMX_S32) 0x80001020, $/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorHardware	omx/openmax/OMX_Core.h	/^  OMX_ErrorHardware = (OMX_S32) 0x80001009,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorIncorrectStateOperation	omx/openmax/OMX_Core.h	/^  OMX_ErrorIncorrectStateOperation = (OMX_S32) 0x80001018, $/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorIncorrectStateTransition	omx/openmax/OMX_Core.h	/^  OMX_ErrorIncorrectStateTransition = (OMX_S32) 0x80001017,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorInsufficientResources	omx/openmax/OMX_Core.h	/^  OMX_ErrorInsufficientResources = (OMX_S32) 0x80001000,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorInvalidComponent	omx/openmax/OMX_Core.h	/^  OMX_ErrorInvalidComponent = (OMX_S32) 0x80001004,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorInvalidComponentName	omx/openmax/OMX_Core.h	/^  OMX_ErrorInvalidComponentName = (OMX_S32) 0x80001002,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorInvalidMode	omx/openmax/OMX_CoreExt.h	/^    OMX_ErrorInvalidMode = (OMX_S32) (OMX_ErrorKhronosExtensions + 0x00000001),$/;"	e	enum:OMX_ERROREXTTYPE
OMX_ErrorInvalidState	omx/openmax/OMX_Core.h	/^  OMX_ErrorInvalidState = (OMX_S32) 0x8000100A,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorKhronosExtensions	omx/openmax/OMX_Core.h	/^  OMX_ErrorKhronosExtensions = (OMX_S32)0x8F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorMax	omx/openmax/OMX_Core.h	/^  OMX_ErrorMax = 0x7FFFFFFF$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorMbErrorsInFrame	omx/openmax/OMX_Core.h	/^  OMX_ErrorMbErrorsInFrame = (OMX_S32) 0x8000101F,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorNoMore	omx/openmax/OMX_Core.h	/^  OMX_ErrorNoMore = (OMX_S32) 0x8000100E,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorNone	omx/openmax/OMX_Core.h	/^  OMX_ErrorNone = 0,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorNotImplemented	omx/openmax/OMX_Core.h	/^  OMX_ErrorNotImplemented = (OMX_S32) 0x80001006,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorNotReady	omx/openmax/OMX_Core.h	/^  OMX_ErrorNotReady = (OMX_S32) 0x80001010,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorOverflow	omx/openmax/OMX_Core.h	/^  OMX_ErrorOverflow = (OMX_S32) 0x80001008,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorPortUnpopulated	omx/openmax/OMX_Core.h	/^  OMX_ErrorPortUnpopulated = (OMX_S32) 0x8000101C,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorPortUnresponsiveDuringAllocation	omx/openmax/OMX_Core.h	/^  OMX_ErrorPortUnresponsiveDuringAllocation = (OMX_S32) 0x80001014,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorPortUnresponsiveDuringDeallocation	omx/openmax/OMX_Core.h	/^  OMX_ErrorPortUnresponsiveDuringDeallocation = (OMX_S32) 0x80001015,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorPortUnresponsiveDuringStop	omx/openmax/OMX_Core.h	/^  OMX_ErrorPortUnresponsiveDuringStop = (OMX_S32) 0x80001016,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorPortsNotCompatible	omx/openmax/OMX_Core.h	/^  OMX_ErrorPortsNotCompatible = (OMX_S32) 0x8000100C,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorResourcesLost	omx/openmax/OMX_Core.h	/^  OMX_ErrorResourcesLost = (OMX_S32) 0x8000100D,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorResourcesPreempted	omx/openmax/OMX_Core.h	/^  OMX_ErrorResourcesPreempted = (OMX_S32) 0x80001013, $/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorSameState	omx/openmax/OMX_Core.h	/^  OMX_ErrorSameState = (OMX_S32) 0x80001012,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorSeperateTablesUsed	omx/openmax/OMX_Core.h	/^  OMX_ErrorSeperateTablesUsed = (OMX_S32) 0x80001023,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorStreamCorrupt	omx/openmax/OMX_Core.h	/^  OMX_ErrorStreamCorrupt = (OMX_S32) 0x8000100B,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorTimeout	omx/openmax/OMX_Core.h	/^  OMX_ErrorTimeout = (OMX_S32) 0x80001011,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorTunnelingUnsupported	omx/openmax/OMX_Core.h	/^  OMX_ErrorTunnelingUnsupported = (OMX_S32) 0x80001024,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorUndefined	omx/openmax/OMX_Core.h	/^  OMX_ErrorUndefined = (OMX_S32) 0x80001001,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorUnderflow	omx/openmax/OMX_Core.h	/^  OMX_ErrorUnderflow = (OMX_S32) 0x80001007,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorUnsupportedIndex	omx/openmax/OMX_Core.h	/^  OMX_ErrorUnsupportedIndex = (OMX_S32) 0x8000101A,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorUnsupportedSetting	omx/openmax/OMX_Core.h	/^  OMX_ErrorUnsupportedSetting = (OMX_S32) 0x80001019,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorVendorStartUnused	omx/openmax/OMX_Core.h	/^  OMX_ErrorVendorStartUnused = (OMX_S32)0x90000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorVersionMismatch	omx/openmax/OMX_Core.h	/^  OMX_ErrorVersionMismatch = (OMX_S32) 0x8000100F,$/;"	e	enum:OMX_ERRORTYPE
OMX_EventBufferFlag	omx/openmax/OMX_Core.h	/^    OMX_EventBufferFlag,          \/**< component has detected an EOS *\/ $/;"	e	enum:OMX_EVENTTYPE
OMX_EventCmdComplete	omx/openmax/OMX_Core.h	/^    OMX_EventCmdComplete,         \/**< component has sucessfully completed a command *\/$/;"	e	enum:OMX_EVENTTYPE
OMX_EventComponentResumed	omx/openmax/OMX_Core.h	/^   OMX_EventComponentResumed,     \/**< Component resumed due to reacquisition of resources *\/$/;"	e	enum:OMX_EVENTTYPE
OMX_EventDynamicResourcesAvailable	omx/openmax/OMX_Core.h	/^   OMX_EventDynamicResourcesAvailable, \/**< Component has acquired previously unavailable dynamic resources *\/$/;"	e	enum:OMX_EVENTTYPE
OMX_EventError	omx/openmax/OMX_Core.h	/^    OMX_EventError,               \/**< component has detected an error condition *\/$/;"	e	enum:OMX_EVENTTYPE
OMX_EventExtMax	omx/openmax/OMX_CoreExt.h	/^    OMX_EventExtMax = 0x7FFFFFFF$/;"	e	enum:OMX_EVENTEXTTYPE
OMX_EventIndexSettingChanged	omx/openmax/OMX_CoreExt.h	/^    OMX_EventIndexSettingChanged = OMX_EventKhronosExtensions, \/**< component signals the IL client of a change$/;"	e	enum:OMX_EVENTEXTTYPE
OMX_EventKhronosExtensions	omx/openmax/OMX_Core.h	/^   OMX_EventKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_EVENTTYPE
OMX_EventMark	omx/openmax/OMX_Core.h	/^    OMX_EventMark,                \/**< component has detected a buffer mark *\/$/;"	e	enum:OMX_EVENTTYPE
OMX_EventMax	omx/openmax/OMX_Core.h	/^   OMX_EventMax = 0x7FFFFFFF$/;"	e	enum:OMX_EVENTTYPE
OMX_EventPortFormatDetected	omx/openmax/OMX_Core.h	/^   OMX_EventPortFormatDetected,      \/**< Component has detected a supported format. *\/$/;"	e	enum:OMX_EVENTTYPE
OMX_EventPortSettingsChanged	omx/openmax/OMX_Core.h	/^    OMX_EventPortSettingsChanged, \/**< component is reported a port settings change *\/$/;"	e	enum:OMX_EVENTTYPE
OMX_EventResourcesAcquired	omx/openmax/OMX_Core.h	/^    OMX_EventResourcesAcquired,   \/**< component has been granted resources and is$/;"	e	enum:OMX_EVENTTYPE
OMX_EventVendorStartUnused	omx/openmax/OMX_Core.h	/^   OMX_EventVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_EVENTTYPE
OMX_ExposureControlAuto	omx/openmax/OMX_IVCommon.h	/^    OMX_ExposureControlAuto,$/;"	e	enum:OMX_EXPOSURECONTROLTYPE
OMX_ExposureControlBackLight	omx/openmax/OMX_IVCommon.h	/^    OMX_ExposureControlBackLight,$/;"	e	enum:OMX_EXPOSURECONTROLTYPE
OMX_ExposureControlBeach	omx/openmax/OMX_IVCommon.h	/^    OMX_ExposureControlBeach,$/;"	e	enum:OMX_EXPOSURECONTROLTYPE
OMX_ExposureControlKhronosExtensions	omx/openmax/OMX_IVCommon.h	/^    OMX_ExposureControlKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_EXPOSURECONTROLTYPE
OMX_ExposureControlLargeAperture	omx/openmax/OMX_IVCommon.h	/^    OMX_ExposureControlLargeAperture,$/;"	e	enum:OMX_EXPOSURECONTROLTYPE
OMX_ExposureControlMax	omx/openmax/OMX_IVCommon.h	/^    OMX_ExposureControlMax = 0x7FFFFFFF$/;"	e	enum:OMX_EXPOSURECONTROLTYPE
OMX_ExposureControlNight	omx/openmax/OMX_IVCommon.h	/^    OMX_ExposureControlNight,$/;"	e	enum:OMX_EXPOSURECONTROLTYPE
OMX_ExposureControlOff	omx/openmax/OMX_IVCommon.h	/^    OMX_ExposureControlOff = 0,$/;"	e	enum:OMX_EXPOSURECONTROLTYPE
OMX_ExposureControlSmallApperture	omx/openmax/OMX_IVCommon.h	/^    OMX_ExposureControlSmallApperture,$/;"	e	enum:OMX_EXPOSURECONTROLTYPE
OMX_ExposureControlSnow	omx/openmax/OMX_IVCommon.h	/^    OMX_ExposureControlSnow,$/;"	e	enum:OMX_EXPOSURECONTROLTYPE
OMX_ExposureControlSports	omx/openmax/OMX_IVCommon.h	/^    OMX_ExposureControlSports,$/;"	e	enum:OMX_EXPOSURECONTROLTYPE
OMX_ExposureControlSpotLight	omx/openmax/OMX_IVCommon.h	/^    OMX_ExposureControlSpotLight,$/;"	e	enum:OMX_EXPOSURECONTROLTYPE
OMX_ExposureControlVendorStartUnused	omx/openmax/OMX_IVCommon.h	/^    OMX_ExposureControlVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_EXPOSURECONTROLTYPE
OMX_ExtraDataKhronosExtensions	omx/openmax/OMX_Core.h	/^   OMX_ExtraDataKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_EXTRADATATYPE
OMX_ExtraDataMax	omx/openmax/OMX_Core.h	/^   OMX_ExtraDataMax = 0x7FFFFFFF$/;"	e	enum:OMX_EXTRADATATYPE
OMX_ExtraDataNone	omx/openmax/OMX_Core.h	/^   OMX_ExtraDataNone = 0,                       \/**< Indicates that no more extra data sections follow *\/        $/;"	e	enum:OMX_EXTRADATATYPE
OMX_ExtraDataQuantization	omx/openmax/OMX_Core.h	/^   OMX_ExtraDataQuantization,                   \/**< The data payload contains quantization data *\/$/;"	e	enum:OMX_EXTRADATATYPE
OMX_ExtraDataVendorStartUnused	omx/openmax/OMX_Core.h	/^   OMX_ExtraDataVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_EXTRADATATYPE
OMX_FALSE	omx/openmax/OMX_Types.h	/^    OMX_FALSE = 0,$/;"	e	enum:OMX_BOOL
OMX_FOCUSSTATUSTYPE	omx/openmax/OMX_IVCommon.h	/^typedef enum OMX_FOCUSSTATUSTYPE {$/;"	g
OMX_FOCUSSTATUSTYPE	omx/openmax/OMX_IVCommon.h	/^} OMX_FOCUSSTATUSTYPE;$/;"	t	typeref:enum:OMX_FOCUSSTATUSTYPE
OMX_FRAMESIZETYPE	omx/openmax/OMX_IVCommon.h	/^typedef struct OMX_FRAMESIZETYPE {$/;"	s
OMX_FRAMESIZETYPE	omx/openmax/OMX_IVCommon.h	/^} OMX_FRAMESIZETYPE;$/;"	t	typeref:struct:OMX_FRAMESIZETYPE
OMX_FRAMESIZETYPE::nHeight	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nHeight;$/;"	m	struct:OMX_FRAMESIZETYPE	access:public
OMX_FRAMESIZETYPE::nPortIndex	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_FRAMESIZETYPE	access:public
OMX_FRAMESIZETYPE::nSize	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_FRAMESIZETYPE	access:public
OMX_FRAMESIZETYPE::nVersion	omx/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_FRAMESIZETYPE	access:public
OMX_FRAMESIZETYPE::nWidth	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nWidth;$/;"	m	struct:OMX_FRAMESIZETYPE	access:public
OMX_FillThisBuffer	omx/openmax/OMX_Core.h	1126;"	d
OMX_FocusStatusKhronosExtensions	omx/openmax/OMX_IVCommon.h	/^    OMX_FocusStatusKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_FOCUSSTATUSTYPE
OMX_FocusStatusLost	omx/openmax/OMX_IVCommon.h	/^    OMX_FocusStatusLost,$/;"	e	enum:OMX_FOCUSSTATUSTYPE
OMX_FocusStatusMax	omx/openmax/OMX_IVCommon.h	/^    OMX_FocusStatusMax = 0x7FFFFFFF$/;"	e	enum:OMX_FOCUSSTATUSTYPE
OMX_FocusStatusOff	omx/openmax/OMX_IVCommon.h	/^    OMX_FocusStatusOff = 0,$/;"	e	enum:OMX_FOCUSSTATUSTYPE
OMX_FocusStatusReached	omx/openmax/OMX_IVCommon.h	/^    OMX_FocusStatusReached,$/;"	e	enum:OMX_FOCUSSTATUSTYPE
OMX_FocusStatusRequest	omx/openmax/OMX_IVCommon.h	/^    OMX_FocusStatusRequest,$/;"	e	enum:OMX_FOCUSSTATUSTYPE
OMX_FocusStatusUnableToReach	omx/openmax/OMX_IVCommon.h	/^    OMX_FocusStatusUnableToReach,$/;"	e	enum:OMX_FOCUSSTATUSTYPE
OMX_FocusStatusVendorStartUnused	omx/openmax/OMX_IVCommon.h	/^    OMX_FocusStatusVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_FOCUSSTATUSTYPE
OMX_FreeBuffer	omx/openmax/OMX_Core.h	1064;"	d
OMX_FreeHandle	omx/openmax/OMX_Core.h	/^OMX_API OMX_ERRORTYPE OMX_APIENTRY OMX_FreeHandle($/;"	p	signature:( OMX_IN OMX_HANDLETYPE hComponent)
OMX_GetComponentVersion	omx/openmax/OMX_Core.h	684;"	d
OMX_GetComponentsOfRole	omx/openmax/OMX_Core.h	/^OMX_API OMX_ERRORTYPE OMX_GetComponentsOfRole ( $/;"	p	signature:( OMX_IN OMX_STRING role, OMX_INOUT OMX_U32 *pNumComps, OMX_INOUT OMX_U8 **compNames)
OMX_GetConfig	omx/openmax/OMX_Core.h	861;"	d
OMX_GetContentPipe	omx/openmax/OMX_Core.h	/^OMX_API OMX_ERRORTYPE   OMX_GetContentPipe($/;"	p	signature:( OMX_OUT OMX_HANDLETYPE *hPipe, OMX_IN OMX_STRING szURI)
OMX_GetExtensionIndex	omx/openmax/OMX_Core.h	931;"	d
OMX_GetHandle	omx/openmax/OMX_Core.h	/^OMX_API OMX_ERRORTYPE OMX_APIENTRY OMX_GetHandle($/;"	p	signature:( OMX_OUT OMX_HANDLETYPE* pHandle, OMX_IN OMX_STRING cComponentName, OMX_IN OMX_PTR pAppData, OMX_IN OMX_CALLBACKTYPE* pCallBacks)
OMX_GetParameter	omx/openmax/OMX_Core.h	786;"	d
OMX_GetRolesOfComponent	omx/openmax/OMX_Core.h	/^OMX_API OMX_ERRORTYPE OMX_GetRolesOfComponent ( $/;"	p	signature:( OMX_IN OMX_STRING compName, OMX_INOUT OMX_U32 *pNumRoles, OMX_OUT OMX_U8 **roles)
OMX_GetState	omx/openmax/OMX_Core.h	958;"	d
OMX_HANDLETYPE	omx/openmax/OMX_Types.h	/^typedef void* OMX_HANDLETYPE;$/;"	t
OMX_IMAGEFILTERTYPE	omx/openmax/OMX_IVCommon.h	/^typedef enum OMX_IMAGEFILTERTYPE {$/;"	g
OMX_IMAGEFILTERTYPE	omx/openmax/OMX_IVCommon.h	/^} OMX_IMAGEFILTERTYPE;$/;"	t	typeref:enum:OMX_IMAGEFILTERTYPE
OMX_IMAGE_CODINGTYPE	omx/openmax/OMX_Image.h	/^typedef enum OMX_IMAGE_CODINGTYPE {$/;"	g
OMX_IMAGE_CODINGTYPE	omx/openmax/OMX_Image.h	/^} OMX_IMAGE_CODINGTYPE;$/;"	t	typeref:enum:OMX_IMAGE_CODINGTYPE
OMX_IMAGE_CONFIG_FOCUSCONTROLTYPE	omx/openmax/OMX_Image.h	/^typedef struct OMX_IMAGE_CONFIG_FOCUSCONTROLTYPE {$/;"	s
OMX_IMAGE_CONFIG_FOCUSCONTROLTYPE	omx/openmax/OMX_Image.h	/^} OMX_IMAGE_CONFIG_FOCUSCONTROLTYPE;$/;"	t	typeref:struct:OMX_IMAGE_CONFIG_FOCUSCONTROLTYPE
OMX_IMAGE_CONFIG_FOCUSCONTROLTYPE::eFocusControl	omx/openmax/OMX_Image.h	/^    OMX_IMAGE_FOCUSCONTROLTYPE eFocusControl;$/;"	m	struct:OMX_IMAGE_CONFIG_FOCUSCONTROLTYPE	access:public
OMX_IMAGE_CONFIG_FOCUSCONTROLTYPE::nFocusStepIndex	omx/openmax/OMX_Image.h	/^    OMX_U32 nFocusStepIndex;$/;"	m	struct:OMX_IMAGE_CONFIG_FOCUSCONTROLTYPE	access:public
OMX_IMAGE_CONFIG_FOCUSCONTROLTYPE::nFocusSteps	omx/openmax/OMX_Image.h	/^    OMX_U32 nFocusSteps;$/;"	m	struct:OMX_IMAGE_CONFIG_FOCUSCONTROLTYPE	access:public
OMX_IMAGE_CONFIG_FOCUSCONTROLTYPE::nPortIndex	omx/openmax/OMX_Image.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_IMAGE_CONFIG_FOCUSCONTROLTYPE	access:public
OMX_IMAGE_CONFIG_FOCUSCONTROLTYPE::nSize	omx/openmax/OMX_Image.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_IMAGE_CONFIG_FOCUSCONTROLTYPE	access:public
OMX_IMAGE_CONFIG_FOCUSCONTROLTYPE::nVersion	omx/openmax/OMX_Image.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_IMAGE_CONFIG_FOCUSCONTROLTYPE	access:public
OMX_IMAGE_CodingAutoDetect	omx/openmax/OMX_Image.h	/^    OMX_IMAGE_CodingAutoDetect,  \/**< Auto detection of image format *\/$/;"	e	enum:OMX_IMAGE_CODINGTYPE
OMX_IMAGE_CodingBMP	omx/openmax/OMX_Image.h	/^    OMX_IMAGE_CodingBMP,         \/**< Windows Bitmap format *\/$/;"	e	enum:OMX_IMAGE_CODINGTYPE
OMX_IMAGE_CodingEXIF	omx/openmax/OMX_Image.h	/^    OMX_IMAGE_CodingEXIF,        \/**< EXIF image format *\/$/;"	e	enum:OMX_IMAGE_CODINGTYPE
OMX_IMAGE_CodingGIF	omx/openmax/OMX_Image.h	/^    OMX_IMAGE_CodingGIF,         \/**< Graphics image format *\/$/;"	e	enum:OMX_IMAGE_CODINGTYPE
OMX_IMAGE_CodingJPEG	omx/openmax/OMX_Image.h	/^    OMX_IMAGE_CodingJPEG,        \/**< JPEG\/JFIF image format *\/$/;"	e	enum:OMX_IMAGE_CODINGTYPE
OMX_IMAGE_CodingJPEG2K	omx/openmax/OMX_Image.h	/^    OMX_IMAGE_CodingJPEG2K,      \/**< JPEG 2000 image format *\/$/;"	e	enum:OMX_IMAGE_CODINGTYPE
OMX_IMAGE_CodingKhronosExtensions	omx/openmax/OMX_Image.h	/^    OMX_IMAGE_CodingKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_IMAGE_CODINGTYPE
OMX_IMAGE_CodingLZW	omx/openmax/OMX_Image.h	/^    OMX_IMAGE_CodingLZW,         \/**< LZW image format *\/$/;"	e	enum:OMX_IMAGE_CODINGTYPE
OMX_IMAGE_CodingMax	omx/openmax/OMX_Image.h	/^    OMX_IMAGE_CodingMax = 0x7FFFFFFF$/;"	e	enum:OMX_IMAGE_CODINGTYPE
OMX_IMAGE_CodingPNG	omx/openmax/OMX_Image.h	/^    OMX_IMAGE_CodingPNG,         \/**< PNG image format *\/$/;"	e	enum:OMX_IMAGE_CODINGTYPE
OMX_IMAGE_CodingTIFF	omx/openmax/OMX_Image.h	/^    OMX_IMAGE_CodingTIFF,        \/**< TIFF image format *\/$/;"	e	enum:OMX_IMAGE_CODINGTYPE
OMX_IMAGE_CodingUnused	omx/openmax/OMX_Image.h	/^    OMX_IMAGE_CodingUnused,      \/**< Value when format is N\/A *\/$/;"	e	enum:OMX_IMAGE_CODINGTYPE
OMX_IMAGE_CodingVendorStartUnused	omx/openmax/OMX_Image.h	/^    OMX_IMAGE_CodingVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_IMAGE_CODINGTYPE
OMX_IMAGE_FLASHCONTROLTYPE	omx/openmax/OMX_Image.h	/^typedef enum OMX_IMAGE_FLASHCONTROLTYPE {$/;"	g
OMX_IMAGE_FLASHCONTROLTYPE	omx/openmax/OMX_Image.h	/^} OMX_IMAGE_FLASHCONTROLTYPE;$/;"	t	typeref:enum:OMX_IMAGE_FLASHCONTROLTYPE
OMX_IMAGE_FOCUSCONTROLTYPE	omx/openmax/OMX_Image.h	/^typedef enum OMX_IMAGE_FOCUSCONTROLTYPE {$/;"	g
OMX_IMAGE_FOCUSCONTROLTYPE	omx/openmax/OMX_Image.h	/^} OMX_IMAGE_FOCUSCONTROLTYPE;$/;"	t	typeref:enum:OMX_IMAGE_FOCUSCONTROLTYPE
OMX_IMAGE_FlashControlAuto	omx/openmax/OMX_Image.h	/^    OMX_IMAGE_FlashControlAuto,$/;"	e	enum:OMX_IMAGE_FLASHCONTROLTYPE
OMX_IMAGE_FlashControlFillin	omx/openmax/OMX_Image.h	/^    OMX_IMAGE_FlashControlFillin,$/;"	e	enum:OMX_IMAGE_FLASHCONTROLTYPE
OMX_IMAGE_FlashControlKhronosExtensions	omx/openmax/OMX_Image.h	/^    OMX_IMAGE_FlashControlKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_IMAGE_FLASHCONTROLTYPE
OMX_IMAGE_FlashControlMax	omx/openmax/OMX_Image.h	/^    OMX_IMAGE_FlashControlMax = 0x7FFFFFFF$/;"	e	enum:OMX_IMAGE_FLASHCONTROLTYPE
OMX_IMAGE_FlashControlOff	omx/openmax/OMX_Image.h	/^    OMX_IMAGE_FlashControlOff,$/;"	e	enum:OMX_IMAGE_FLASHCONTROLTYPE
OMX_IMAGE_FlashControlOn	omx/openmax/OMX_Image.h	/^    OMX_IMAGE_FlashControlOn = 0,$/;"	e	enum:OMX_IMAGE_FLASHCONTROLTYPE
OMX_IMAGE_FlashControlRedEyeReduction	omx/openmax/OMX_Image.h	/^    OMX_IMAGE_FlashControlRedEyeReduction,$/;"	e	enum:OMX_IMAGE_FLASHCONTROLTYPE
OMX_IMAGE_FlashControlTorch	omx/openmax/OMX_Image.h	/^    OMX_IMAGE_FlashControlTorch,$/;"	e	enum:OMX_IMAGE_FLASHCONTROLTYPE
OMX_IMAGE_FlashControlVendorStartUnused	omx/openmax/OMX_Image.h	/^    OMX_IMAGE_FlashControlVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_IMAGE_FLASHCONTROLTYPE
OMX_IMAGE_FocusControlAuto	omx/openmax/OMX_Image.h	/^    OMX_IMAGE_FocusControlAuto,$/;"	e	enum:OMX_IMAGE_FOCUSCONTROLTYPE
OMX_IMAGE_FocusControlAutoLock	omx/openmax/OMX_Image.h	/^    OMX_IMAGE_FocusControlAutoLock,$/;"	e	enum:OMX_IMAGE_FOCUSCONTROLTYPE
OMX_IMAGE_FocusControlKhronosExtensions	omx/openmax/OMX_Image.h	/^    OMX_IMAGE_FocusControlKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_IMAGE_FOCUSCONTROLTYPE
OMX_IMAGE_FocusControlMax	omx/openmax/OMX_Image.h	/^    OMX_IMAGE_FocusControlMax = 0x7FFFFFFF$/;"	e	enum:OMX_IMAGE_FOCUSCONTROLTYPE
OMX_IMAGE_FocusControlOff	omx/openmax/OMX_Image.h	/^    OMX_IMAGE_FocusControlOff,$/;"	e	enum:OMX_IMAGE_FOCUSCONTROLTYPE
OMX_IMAGE_FocusControlOn	omx/openmax/OMX_Image.h	/^    OMX_IMAGE_FocusControlOn = 0,$/;"	e	enum:OMX_IMAGE_FOCUSCONTROLTYPE
OMX_IMAGE_FocusControlVendorStartUnused	omx/openmax/OMX_Image.h	/^    OMX_IMAGE_FocusControlVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_IMAGE_FOCUSCONTROLTYPE
OMX_IMAGE_HUFFMANTABLETYPE	omx/openmax/OMX_Image.h	/^typedef enum OMX_IMAGE_HUFFMANTABLETYPE {$/;"	g
OMX_IMAGE_HUFFMANTABLETYPE	omx/openmax/OMX_Image.h	/^} OMX_IMAGE_HUFFMANTABLETYPE;$/;"	t	typeref:enum:OMX_IMAGE_HUFFMANTABLETYPE
OMX_IMAGE_HuffmanTableAC	omx/openmax/OMX_Image.h	/^    OMX_IMAGE_HuffmanTableAC = 0,$/;"	e	enum:OMX_IMAGE_HUFFMANTABLETYPE
OMX_IMAGE_HuffmanTableACChroma	omx/openmax/OMX_Image.h	/^    OMX_IMAGE_HuffmanTableACChroma,$/;"	e	enum:OMX_IMAGE_HUFFMANTABLETYPE
OMX_IMAGE_HuffmanTableACLuma	omx/openmax/OMX_Image.h	/^    OMX_IMAGE_HuffmanTableACLuma,$/;"	e	enum:OMX_IMAGE_HUFFMANTABLETYPE
OMX_IMAGE_HuffmanTableDC	omx/openmax/OMX_Image.h	/^    OMX_IMAGE_HuffmanTableDC,$/;"	e	enum:OMX_IMAGE_HUFFMANTABLETYPE
OMX_IMAGE_HuffmanTableDCChroma	omx/openmax/OMX_Image.h	/^    OMX_IMAGE_HuffmanTableDCChroma,$/;"	e	enum:OMX_IMAGE_HUFFMANTABLETYPE
OMX_IMAGE_HuffmanTableDCLuma	omx/openmax/OMX_Image.h	/^    OMX_IMAGE_HuffmanTableDCLuma,$/;"	e	enum:OMX_IMAGE_HUFFMANTABLETYPE
OMX_IMAGE_HuffmanTableKhronosExtensions	omx/openmax/OMX_Image.h	/^    OMX_IMAGE_HuffmanTableKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_IMAGE_HUFFMANTABLETYPE
OMX_IMAGE_HuffmanTableMax	omx/openmax/OMX_Image.h	/^    OMX_IMAGE_HuffmanTableMax = 0x7FFFFFFF$/;"	e	enum:OMX_IMAGE_HUFFMANTABLETYPE
OMX_IMAGE_HuffmanTableVendorStartUnused	omx/openmax/OMX_Image.h	/^    OMX_IMAGE_HuffmanTableVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_IMAGE_HUFFMANTABLETYPE
OMX_IMAGE_PARAM_FLASHCONTROLTYPE	omx/openmax/OMX_Image.h	/^typedef struct OMX_IMAGE_PARAM_FLASHCONTROLTYPE {$/;"	s
OMX_IMAGE_PARAM_FLASHCONTROLTYPE	omx/openmax/OMX_Image.h	/^} OMX_IMAGE_PARAM_FLASHCONTROLTYPE;$/;"	t	typeref:struct:OMX_IMAGE_PARAM_FLASHCONTROLTYPE
OMX_IMAGE_PARAM_FLASHCONTROLTYPE::eFlashControl	omx/openmax/OMX_Image.h	/^    OMX_IMAGE_FLASHCONTROLTYPE eFlashControl;$/;"	m	struct:OMX_IMAGE_PARAM_FLASHCONTROLTYPE	access:public
OMX_IMAGE_PARAM_FLASHCONTROLTYPE::nPortIndex	omx/openmax/OMX_Image.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_IMAGE_PARAM_FLASHCONTROLTYPE	access:public
OMX_IMAGE_PARAM_FLASHCONTROLTYPE::nSize	omx/openmax/OMX_Image.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_IMAGE_PARAM_FLASHCONTROLTYPE	access:public
OMX_IMAGE_PARAM_FLASHCONTROLTYPE::nVersion	omx/openmax/OMX_Image.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_IMAGE_PARAM_FLASHCONTROLTYPE	access:public
OMX_IMAGE_PARAM_HUFFMANTTABLETYPE	omx/openmax/OMX_Image.h	/^typedef struct OMX_IMAGE_PARAM_HUFFMANTTABLETYPE {$/;"	s
OMX_IMAGE_PARAM_HUFFMANTTABLETYPE	omx/openmax/OMX_Image.h	/^}OMX_IMAGE_PARAM_HUFFMANTTABLETYPE;$/;"	t	typeref:struct:OMX_IMAGE_PARAM_HUFFMANTTABLETYPE
OMX_IMAGE_PARAM_HUFFMANTTABLETYPE::eHuffmanTable	omx/openmax/OMX_Image.h	/^    OMX_IMAGE_HUFFMANTABLETYPE eHuffmanTable;$/;"	m	struct:OMX_IMAGE_PARAM_HUFFMANTTABLETYPE	access:public
OMX_IMAGE_PARAM_HUFFMANTTABLETYPE::nHuffmanTable	omx/openmax/OMX_Image.h	/^    OMX_U8 nHuffmanTable[256];$/;"	m	struct:OMX_IMAGE_PARAM_HUFFMANTTABLETYPE	access:public
OMX_IMAGE_PARAM_HUFFMANTTABLETYPE::nNumberOfHuffmanCodeOfLength	omx/openmax/OMX_Image.h	/^    OMX_U8 nNumberOfHuffmanCodeOfLength[16];$/;"	m	struct:OMX_IMAGE_PARAM_HUFFMANTTABLETYPE	access:public
OMX_IMAGE_PARAM_HUFFMANTTABLETYPE::nPortIndex	omx/openmax/OMX_Image.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_IMAGE_PARAM_HUFFMANTTABLETYPE	access:public
OMX_IMAGE_PARAM_HUFFMANTTABLETYPE::nSize	omx/openmax/OMX_Image.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_IMAGE_PARAM_HUFFMANTTABLETYPE	access:public
OMX_IMAGE_PARAM_HUFFMANTTABLETYPE::nVersion	omx/openmax/OMX_Image.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_IMAGE_PARAM_HUFFMANTTABLETYPE	access:public
OMX_IMAGE_PARAM_PORTFORMATTYPE	omx/openmax/OMX_Image.h	/^typedef struct OMX_IMAGE_PARAM_PORTFORMATTYPE {$/;"	s
OMX_IMAGE_PARAM_PORTFORMATTYPE	omx/openmax/OMX_Image.h	/^} OMX_IMAGE_PARAM_PORTFORMATTYPE;$/;"	t	typeref:struct:OMX_IMAGE_PARAM_PORTFORMATTYPE
OMX_IMAGE_PARAM_PORTFORMATTYPE::eColorFormat	omx/openmax/OMX_Image.h	/^    OMX_COLOR_FORMATTYPE eColorFormat;$/;"	m	struct:OMX_IMAGE_PARAM_PORTFORMATTYPE	access:public
OMX_IMAGE_PARAM_PORTFORMATTYPE::eCompressionFormat	omx/openmax/OMX_Image.h	/^    OMX_IMAGE_CODINGTYPE eCompressionFormat;$/;"	m	struct:OMX_IMAGE_PARAM_PORTFORMATTYPE	access:public
OMX_IMAGE_PARAM_PORTFORMATTYPE::nIndex	omx/openmax/OMX_Image.h	/^    OMX_U32 nIndex;$/;"	m	struct:OMX_IMAGE_PARAM_PORTFORMATTYPE	access:public
OMX_IMAGE_PARAM_PORTFORMATTYPE::nPortIndex	omx/openmax/OMX_Image.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_IMAGE_PARAM_PORTFORMATTYPE	access:public
OMX_IMAGE_PARAM_PORTFORMATTYPE::nSize	omx/openmax/OMX_Image.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_IMAGE_PARAM_PORTFORMATTYPE	access:public
OMX_IMAGE_PARAM_PORTFORMATTYPE::nVersion	omx/openmax/OMX_Image.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_IMAGE_PARAM_PORTFORMATTYPE	access:public
OMX_IMAGE_PARAM_QFACTORTYPE	omx/openmax/OMX_Image.h	/^typedef struct OMX_IMAGE_PARAM_QFACTORTYPE {$/;"	s
OMX_IMAGE_PARAM_QFACTORTYPE	omx/openmax/OMX_Image.h	/^} OMX_IMAGE_PARAM_QFACTORTYPE;$/;"	t	typeref:struct:OMX_IMAGE_PARAM_QFACTORTYPE
OMX_IMAGE_PARAM_QFACTORTYPE::nPortIndex	omx/openmax/OMX_Image.h	/^    OMX_U32 nPortIndex;       $/;"	m	struct:OMX_IMAGE_PARAM_QFACTORTYPE	access:public
OMX_IMAGE_PARAM_QFACTORTYPE::nQFactor	omx/openmax/OMX_Image.h	/^    OMX_U32 nQFactor;                                        $/;"	m	struct:OMX_IMAGE_PARAM_QFACTORTYPE	access:public
OMX_IMAGE_PARAM_QFACTORTYPE::nSize	omx/openmax/OMX_Image.h	/^    OMX_U32 nSize;            $/;"	m	struct:OMX_IMAGE_PARAM_QFACTORTYPE	access:public
OMX_IMAGE_PARAM_QFACTORTYPE::nVersion	omx/openmax/OMX_Image.h	/^    OMX_VERSIONTYPE nVersion; $/;"	m	struct:OMX_IMAGE_PARAM_QFACTORTYPE	access:public
OMX_IMAGE_PARAM_QUANTIZATIONTABLETYPE	omx/openmax/OMX_Image.h	/^typedef struct OMX_IMAGE_PARAM_QUANTIZATIONTABLETYPE {$/;"	s
OMX_IMAGE_PARAM_QUANTIZATIONTABLETYPE	omx/openmax/OMX_Image.h	/^} OMX_IMAGE_PARAM_QUANTIZATIONTABLETYPE;$/;"	t	typeref:struct:OMX_IMAGE_PARAM_QUANTIZATIONTABLETYPE
OMX_IMAGE_PARAM_QUANTIZATIONTABLETYPE::eQuantizationTable	omx/openmax/OMX_Image.h	/^    OMX_IMAGE_QUANTIZATIONTABLETYPE eQuantizationTable;$/;"	m	struct:OMX_IMAGE_PARAM_QUANTIZATIONTABLETYPE	access:public
OMX_IMAGE_PARAM_QUANTIZATIONTABLETYPE::nPortIndex	omx/openmax/OMX_Image.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_IMAGE_PARAM_QUANTIZATIONTABLETYPE	access:public
OMX_IMAGE_PARAM_QUANTIZATIONTABLETYPE::nQuantizationMatrix	omx/openmax/OMX_Image.h	/^    OMX_U8 nQuantizationMatrix[64];$/;"	m	struct:OMX_IMAGE_PARAM_QUANTIZATIONTABLETYPE	access:public
OMX_IMAGE_PARAM_QUANTIZATIONTABLETYPE::nSize	omx/openmax/OMX_Image.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_IMAGE_PARAM_QUANTIZATIONTABLETYPE	access:public
OMX_IMAGE_PARAM_QUANTIZATIONTABLETYPE::nVersion	omx/openmax/OMX_Image.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_IMAGE_PARAM_QUANTIZATIONTABLETYPE	access:public
OMX_IMAGE_PORTDEFINITIONTYPE	omx/openmax/OMX_Image.h	/^typedef struct OMX_IMAGE_PORTDEFINITIONTYPE {$/;"	s
OMX_IMAGE_PORTDEFINITIONTYPE	omx/openmax/OMX_Image.h	/^} OMX_IMAGE_PORTDEFINITIONTYPE;$/;"	t	typeref:struct:OMX_IMAGE_PORTDEFINITIONTYPE
OMX_IMAGE_PORTDEFINITIONTYPE::bFlagErrorConcealment	omx/openmax/OMX_Image.h	/^    OMX_BOOL bFlagErrorConcealment;$/;"	m	struct:OMX_IMAGE_PORTDEFINITIONTYPE	access:public
OMX_IMAGE_PORTDEFINITIONTYPE::cMIMEType	omx/openmax/OMX_Image.h	/^    OMX_STRING cMIMEType;$/;"	m	struct:OMX_IMAGE_PORTDEFINITIONTYPE	access:public
OMX_IMAGE_PORTDEFINITIONTYPE::eColorFormat	omx/openmax/OMX_Image.h	/^    OMX_COLOR_FORMATTYPE eColorFormat;$/;"	m	struct:OMX_IMAGE_PORTDEFINITIONTYPE	access:public
OMX_IMAGE_PORTDEFINITIONTYPE::eCompressionFormat	omx/openmax/OMX_Image.h	/^    OMX_IMAGE_CODINGTYPE eCompressionFormat;$/;"	m	struct:OMX_IMAGE_PORTDEFINITIONTYPE	access:public
OMX_IMAGE_PORTDEFINITIONTYPE::nFrameHeight	omx/openmax/OMX_Image.h	/^    OMX_U32 nFrameHeight;$/;"	m	struct:OMX_IMAGE_PORTDEFINITIONTYPE	access:public
OMX_IMAGE_PORTDEFINITIONTYPE::nFrameWidth	omx/openmax/OMX_Image.h	/^    OMX_U32 nFrameWidth; $/;"	m	struct:OMX_IMAGE_PORTDEFINITIONTYPE	access:public
OMX_IMAGE_PORTDEFINITIONTYPE::nSliceHeight	omx/openmax/OMX_Image.h	/^    OMX_U32 nSliceHeight;$/;"	m	struct:OMX_IMAGE_PORTDEFINITIONTYPE	access:public
OMX_IMAGE_PORTDEFINITIONTYPE::nStride	omx/openmax/OMX_Image.h	/^    OMX_S32 nStride;     $/;"	m	struct:OMX_IMAGE_PORTDEFINITIONTYPE	access:public
OMX_IMAGE_PORTDEFINITIONTYPE::pNativeRender	omx/openmax/OMX_Image.h	/^    OMX_NATIVE_DEVICETYPE pNativeRender;$/;"	m	struct:OMX_IMAGE_PORTDEFINITIONTYPE	access:public
OMX_IMAGE_PORTDEFINITIONTYPE::pNativeWindow	omx/openmax/OMX_Image.h	/^    OMX_NATIVE_WINDOWTYPE pNativeWindow;$/;"	m	struct:OMX_IMAGE_PORTDEFINITIONTYPE	access:public
OMX_IMAGE_QUANTIZATIONTABLETYPE	omx/openmax/OMX_Image.h	/^typedef enum OMX_IMAGE_QUANTIZATIONTABLETYPE {$/;"	g
OMX_IMAGE_QUANTIZATIONTABLETYPE	omx/openmax/OMX_Image.h	/^} OMX_IMAGE_QUANTIZATIONTABLETYPE;$/;"	t	typeref:enum:OMX_IMAGE_QUANTIZATIONTABLETYPE
OMX_IMAGE_QuantizationTableChroma	omx/openmax/OMX_Image.h	/^    OMX_IMAGE_QuantizationTableChroma,$/;"	e	enum:OMX_IMAGE_QUANTIZATIONTABLETYPE
OMX_IMAGE_QuantizationTableChromaCb	omx/openmax/OMX_Image.h	/^    OMX_IMAGE_QuantizationTableChromaCb,$/;"	e	enum:OMX_IMAGE_QUANTIZATIONTABLETYPE
OMX_IMAGE_QuantizationTableChromaCr	omx/openmax/OMX_Image.h	/^    OMX_IMAGE_QuantizationTableChromaCr,$/;"	e	enum:OMX_IMAGE_QUANTIZATIONTABLETYPE
OMX_IMAGE_QuantizationTableKhronosExtensions	omx/openmax/OMX_Image.h	/^    OMX_IMAGE_QuantizationTableKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_IMAGE_QUANTIZATIONTABLETYPE
OMX_IMAGE_QuantizationTableLuma	omx/openmax/OMX_Image.h	/^    OMX_IMAGE_QuantizationTableLuma = 0,$/;"	e	enum:OMX_IMAGE_QUANTIZATIONTABLETYPE
OMX_IMAGE_QuantizationTableMax	omx/openmax/OMX_Image.h	/^    OMX_IMAGE_QuantizationTableMax = 0x7FFFFFFF$/;"	e	enum:OMX_IMAGE_QUANTIZATIONTABLETYPE
OMX_IMAGE_QuantizationTableVendorStartUnused	omx/openmax/OMX_Image.h	/^    OMX_IMAGE_QuantizationTableVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_IMAGE_QUANTIZATIONTABLETYPE
OMX_IN	omx/openmax/OMX_Types.h	75;"	d
OMX_INDEXEXTTYPE	omx/openmax/OMX_IndexExt.h	/^typedef enum OMX_INDEXEXTTYPE {$/;"	g
OMX_INDEXEXTTYPE	omx/openmax/OMX_IndexExt.h	/^} OMX_INDEXEXTTYPE;$/;"	t	typeref:enum:OMX_INDEXEXTTYPE
OMX_INDEXTYPE	omx/openmax/OMX_Index.h	/^typedef enum OMX_INDEXTYPE {$/;"	g
OMX_INDEXTYPE	omx/openmax/OMX_Index.h	/^} OMX_INDEXTYPE;$/;"	t	typeref:enum:OMX_INDEXTYPE
OMX_INIT_STRUCTURE	omx/gstomxvideodec.h	41;"	d
OMX_INOUT	omx/openmax/OMX_Types.h	91;"	d
OMX_IVCommon_h	omx/openmax/OMX_IVCommon.h	30;"	d
OMX_ImageFilterAntialias	omx/openmax/OMX_IVCommon.h	/^    OMX_ImageFilterAntialias, $/;"	e	enum:OMX_IMAGEFILTERTYPE
OMX_ImageFilterDeRing	omx/openmax/OMX_IVCommon.h	/^    OMX_ImageFilterDeRing,       $/;"	e	enum:OMX_IMAGEFILTERTYPE
OMX_ImageFilterEmboss	omx/openmax/OMX_IVCommon.h	/^    OMX_ImageFilterEmboss,$/;"	e	enum:OMX_IMAGEFILTERTYPE
OMX_ImageFilterGpen	omx/openmax/OMX_IVCommon.h	/^    OMX_ImageFilterGpen,$/;"	e	enum:OMX_IMAGEFILTERTYPE
OMX_ImageFilterHatch	omx/openmax/OMX_IVCommon.h	/^    OMX_ImageFilterHatch,$/;"	e	enum:OMX_IMAGEFILTERTYPE
OMX_ImageFilterKhronosExtensions	omx/openmax/OMX_IVCommon.h	/^    OMX_ImageFilterKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_IMAGEFILTERTYPE
OMX_ImageFilterMax	omx/openmax/OMX_IVCommon.h	/^    OMX_ImageFilterMax = 0x7FFFFFFF$/;"	e	enum:OMX_IMAGEFILTERTYPE
OMX_ImageFilterNegative	omx/openmax/OMX_IVCommon.h	/^    OMX_ImageFilterNegative,$/;"	e	enum:OMX_IMAGEFILTERTYPE
OMX_ImageFilterNoise	omx/openmax/OMX_IVCommon.h	/^    OMX_ImageFilterNoise,$/;"	e	enum:OMX_IMAGEFILTERTYPE
OMX_ImageFilterNone	omx/openmax/OMX_IVCommon.h	/^    OMX_ImageFilterNone,$/;"	e	enum:OMX_IMAGEFILTERTYPE
OMX_ImageFilterOilPaint	omx/openmax/OMX_IVCommon.h	/^    OMX_ImageFilterOilPaint,$/;"	e	enum:OMX_IMAGEFILTERTYPE
OMX_ImageFilterSketch	omx/openmax/OMX_IVCommon.h	/^    OMX_ImageFilterSketch,$/;"	e	enum:OMX_IMAGEFILTERTYPE
OMX_ImageFilterSolarize	omx/openmax/OMX_IVCommon.h	/^    OMX_ImageFilterSolarize,$/;"	e	enum:OMX_IMAGEFILTERTYPE
OMX_ImageFilterVendorStartUnused	omx/openmax/OMX_IVCommon.h	/^    OMX_ImageFilterVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_IMAGEFILTERTYPE
OMX_Image_h	omx/openmax/OMX_Image.h	29;"	d
OMX_IndexAudioStartUnused	omx/openmax/OMX_Index.h	/^    OMX_IndexAudioStartUnused = 0x04000000,$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexAutoPauseAfterCapture	omx/openmax/OMX_Index.h	/^    OMX_IndexAutoPauseAfterCapture,         \/**< reference: OMX_CONFIG_BOOLEANTYPE *\/ $/;"	e	enum:OMX_INDEXTYPE
OMX_IndexCommonStartUnused	omx/openmax/OMX_Index.h	/^    OMX_IndexCommonStartUnused = 0x07000000,$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexComponentStartUnused	omx/openmax/OMX_Index.h	/^    OMX_IndexComponentStartUnused = 0x01000000,$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigAudioBalance	omx/openmax/OMX_Index.h	/^    OMX_IndexConfigAudioBalance,            \/**< reference: OMX_AUDIO_CONFIG_BALANCETYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigAudioBass	omx/openmax/OMX_Index.h	/^    OMX_IndexConfigAudioBass,               \/**< reference: OMX_AUDIO_CONFIG_BASSTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigAudioChannelMute	omx/openmax/OMX_Index.h	/^    OMX_IndexConfigAudioChannelMute,        \/**< reference: OMX_AUDIO_CONFIG_CHANNELMUTETYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigAudioChannelVolume	omx/openmax/OMX_Index.h	/^    OMX_IndexConfigAudioChannelVolume,      \/**< reference: OMX_AUDIO_CONFIG_CHANNELVOLUMETYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigAudioChorus	omx/openmax/OMX_Index.h	/^    OMX_IndexConfigAudioChorus,             \/**< reference: OMX_AUDIO_CONFIG_CHORUSTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigAudioEchoCancelation	omx/openmax/OMX_Index.h	/^    OMX_IndexConfigAudioEchoCancelation,    \/**< reference: OMX_AUDIO_CONFIG_ECHOCANCELATIONTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigAudioEqualizer	omx/openmax/OMX_Index.h	/^    OMX_IndexConfigAudioEqualizer,          \/**< reference: OMX_AUDIO_CONFIG_EQUALIZERTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigAudioLoudness	omx/openmax/OMX_Index.h	/^    OMX_IndexConfigAudioLoudness,           \/**< reference: OMX_AUDIO_CONFIG_LOUDNESSTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigAudioMidiControl	omx/openmax/OMX_Index.h	/^    OMX_IndexConfigAudioMidiControl,        \/**< reference: OMX_AUDIO_CONFIG_MIDICONTROLTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigAudioMidiImmediateEvent	omx/openmax/OMX_Index.h	/^    OMX_IndexConfigAudioMidiImmediateEvent, \/**< reference: OMX_AUDIO_CONFIG_MIDIIMMEDIATEEVENTTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigAudioMidiMetaEvent	omx/openmax/OMX_Index.h	/^    OMX_IndexConfigAudioMidiMetaEvent,      \/**< reference: OMX_AUDIO_CONFIG_MIDIMETAEVENTTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigAudioMidiMetaEventData	omx/openmax/OMX_Index.h	/^    OMX_IndexConfigAudioMidiMetaEventData,  \/**< reference: OMX_AUDIO_CONFIG_MIDIMETAEVENTDATATYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigAudioMidiSoundBankProgram	omx/openmax/OMX_Index.h	/^    OMX_IndexConfigAudioMidiSoundBankProgram, \/**< reference: OMX_AUDIO_CONFIG_MIDISOUNDBANKPROGRAMTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigAudioMidiStatus	omx/openmax/OMX_Index.h	/^    OMX_IndexConfigAudioMidiStatus,         \/**< reference: OMX_AUDIO_CONFIG_MIDISTATUSTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigAudioMute	omx/openmax/OMX_Index.h	/^    OMX_IndexConfigAudioMute,               \/**< reference: OMX_AUDIO_CONFIG_MUTETYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigAudioNoiseReduction	omx/openmax/OMX_Index.h	/^    OMX_IndexConfigAudioNoiseReduction,     \/**< reference: OMX_AUDIO_CONFIG_NOISEREDUCTIONTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigAudioReverberation	omx/openmax/OMX_Index.h	/^    OMX_IndexConfigAudioReverberation,      \/**< reference: OMX_AUDIO_CONFIG_REVERBERATIONTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigAudioStereoWidening	omx/openmax/OMX_Index.h	/^    OMX_IndexConfigAudioStereoWidening,     \/**< reference: OMX_AUDIO_CONFIG_STEREOWIDENINGTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigAudioTreble	omx/openmax/OMX_Index.h	/^    OMX_IndexConfigAudioTreble,             \/**< reference: OMX_AUDIO_CONFIG_TREBLETYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigAudioVolume	omx/openmax/OMX_Index.h	/^    OMX_IndexConfigAudioVolume,             \/**< reference: OMX_AUDIO_CONFIG_VOLUMETYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCallbackRequest	omx/openmax/OMX_IndexExt.h	/^    OMX_IndexConfigCallbackRequest,                 \/**< reference: OMX_CONFIG_CALLBACKREQUESTTYPE *\/$/;"	e	enum:OMX_INDEXEXTTYPE
OMX_IndexConfigCaptureMode	omx/openmax/OMX_Index.h	/^    OMX_IndexConfigCaptureMode,             \/**< reference: OMX_CONFIG_CAPTUREMODETYPE *\/ $/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCapturing	omx/openmax/OMX_Index.h	/^    OMX_IndexConfigCapturing,               \/**< reference: OMX_CONFIG_BOOLEANTYPE *\/ $/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommit	omx/openmax/OMX_IndexExt.h	/^    OMX_IndexConfigCommit,                          \/**< reference: OMX_CONFIG_COMMITTYPE *\/$/;"	e	enum:OMX_INDEXEXTTYPE
OMX_IndexConfigCommitMode	omx/openmax/OMX_IndexExt.h	/^    OMX_IndexConfigCommitMode,                      \/**< reference: OMX_CONFIG_COMMITMODETYPE *\/$/;"	e	enum:OMX_INDEXEXTTYPE
OMX_IndexConfigCommonBacklight	omx/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonBacklight,         \/**< reference: OMX_CONFIG_BACKLIGHTTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonBrightness	omx/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonBrightness,        \/**< reference: OMX_CONFIG_BRIGHTNESSTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonColorBlend	omx/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonColorBlend,        \/**< reference: OMX_CONFIG_COLORBLENDTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonColorEnhancement	omx/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonColorEnhancement,  \/**< reference: OMX_CONFIG_COLORENHANCEMENTTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonColorFormatConversion	omx/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonColorFormatConversion, \/**< reference: OMX_CONFIG_COLORCONVERSIONTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonColorKey	omx/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonColorKey,          \/**< reference: OMX_CONFIG_COLORKEYTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonContrast	omx/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonContrast,          \/**< reference: OMX_CONFIG_CONTRASTTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonDigitalZoom	omx/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonDigitalZoom,       \/**< reference: OMX_CONFIG_SCALEFACTORTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonDithering	omx/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonDithering,         \/**< reference: OMX_CONFIG_DITHERTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonExclusionRect	omx/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonExclusionRect,     \/**< reference: OMX_CONFIG_RECTTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonExposure	omx/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonExposure,          \/**< reference: OMX_CONFIG_EXPOSURECONTROLTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonExposureValue	omx/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonExposureValue,     \/**< reference: OMX_CONFIG_EXPOSUREVALUETYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonFocusRegion	omx/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonFocusRegion,       \/**< reference: OMX_CONFIG_FOCUSREGIONTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonFocusStatus	omx/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonFocusStatus,       \/**< reference: OMX_PARAM_FOCUSSTATUSTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonFrameStabilisation	omx/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonFrameStabilisation,\/**< reference: OMX_CONFIG_FRAMESTABTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonGamma	omx/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonGamma,             \/**< reference: OMX_CONFIG_GAMMATYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonImageFilter	omx/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonImageFilter,       \/**< reference: OMX_CONFIG_IMAGEFILTERTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonInputCrop	omx/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonInputCrop,         \/**< reference: OMX_CONFIG_RECTTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonLightness	omx/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonLightness,         \/**< reference: OMX_CONFIG_LIGHTNESSTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonMirror	omx/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonMirror,            \/**< reference: OMX_CONFIG_MIRRORTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonOpticalZoom	omx/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonOpticalZoom,       \/**< reference: OMX_CONFIG_SCALEFACTORTYPE*\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonOutputCrop	omx/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonOutputCrop,        \/**< reference: OMX_CONFIG_RECTTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonOutputPosition	omx/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonOutputPosition,    \/**< reference: OMX_CONFIG_POINTTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonOutputSize	omx/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonOutputSize,        \/**< reference: OMX_FRAMESIZETYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonPlaneBlend	omx/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonPlaneBlend,        \/**< reference: OMX_CONFIG_PLANEBLENDTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonRotate	omx/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonRotate,            \/**< reference: OMX_CONFIG_ROTATIONTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonSaturation	omx/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonSaturation,        \/**< reference: OMX_CONFIG_SATURATIONTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonScale	omx/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonScale,             \/**< reference: OMX_CONFIG_SCALEFACTORTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonTransitionEffect	omx/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonTransitionEffect,  \/**< reference: OMX_CONFIG_TRANSITIONEFFECTTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonWhiteBalance	omx/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonWhiteBalance,      \/**< reference: OMX_CONFIG_WHITEBALCONTROLTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigContainerNodeCount	omx/openmax/OMX_Index.h	/^    OMX_IndexConfigContainerNodeCount,      \/**< reference: OMX_CONFIG_CONTAINERNODECOUNTTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCounterNodeID	omx/openmax/OMX_Index.h	/^    OMX_IndexConfigCounterNodeID,           \/**< reference: OMX_CONFIG_CONTAINERNODEIDTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigFlashControl	omx/openmax/OMX_Index.h	/^    OMX_IndexConfigFlashControl,            \/**< reference: OMX_IMAGE_PARAM_FLASHCONTROLTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigFocusControl	omx/openmax/OMX_Index.h	/^    OMX_IndexConfigFocusControl,            \/**< reference: OMX_IMAGE_CONFIG_FOCUSCONTROLTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigMetadataItem	omx/openmax/OMX_Index.h	/^    OMX_IndexConfigMetadataItem,            \/**< reference: OMX_CONFIG_METADATAITEMTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigMetadataItemCount	omx/openmax/OMX_Index.h	/^    OMX_IndexConfigMetadataItemCount,       \/**< reference: OMX_CONFIG_METADATAITEMCOUNTTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigOtherPower	omx/openmax/OMX_Index.h	/^    OMX_IndexConfigOtherPower,              \/**< reference: OMX_OTHER_CONFIG_POWERTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigOtherStats	omx/openmax/OMX_Index.h	/^    OMX_IndexConfigOtherStats,              \/**< reference: OMX_OTHER_CONFIG_STATSTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigPriorityMgmt	omx/openmax/OMX_Index.h	/^    OMX_IndexConfigPriorityMgmt,            \/**< reference: OMX_PRIORITYMGMTTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigTimeActiveRefClock	omx/openmax/OMX_Index.h	/^    OMX_IndexConfigTimeActiveRefClock,      \/**< reference: OMX_TIME_CONFIG_ACTIVEREFCLOCKTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigTimeClientStartTime	omx/openmax/OMX_Index.h	/^    OMX_IndexConfigTimeClientStartTime,     \/**<reference:  OMX_TIME_CONFIG_TIMESTAMPTYPE (write only) *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigTimeClockState	omx/openmax/OMX_Index.h	/^    OMX_IndexConfigTimeClockState,          \/**< reference: OMX_TIME_CONFIG_CLOCKSTATETYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigTimeCurrentAudioReference	omx/openmax/OMX_Index.h	/^    OMX_IndexConfigTimeCurrentAudioReference, \/**< reference: OMX_TIME_CONFIG_TIMESTAMPTYPE (write only) *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigTimeCurrentMediaTime	omx/openmax/OMX_Index.h	/^    OMX_IndexConfigTimeCurrentMediaTime,    \/**< reference: OMX_TIME_CONFIG_TIMESTAMPTYPE (read only) *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigTimeCurrentVideoReference	omx/openmax/OMX_Index.h	/^    OMX_IndexConfigTimeCurrentVideoReference, \/**< reference: OMX_TIME_CONFIG_TIMESTAMPTYPE (write only) *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigTimeCurrentWallTime	omx/openmax/OMX_Index.h	/^    OMX_IndexConfigTimeCurrentWallTime,     \/**< reference: OMX_TIME_CONFIG_TIMESTAMPTYPE (read only) *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigTimeMediaTimeRequest	omx/openmax/OMX_Index.h	/^    OMX_IndexConfigTimeMediaTimeRequest,    \/**< reference: OMX_TIME_CONFIG_MEDIATIMEREQUESTTYPE (write only) *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigTimePosition	omx/openmax/OMX_Index.h	/^    OMX_IndexConfigTimePosition,            \/**< reference: OMX_TIME_CONFIG_TIMESTAMPTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigTimeScale	omx/openmax/OMX_Index.h	/^    OMX_IndexConfigTimeScale,               \/**< reference: OMX_TIME_CONFIG_SCALETYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigTimeSeekMode	omx/openmax/OMX_Index.h	/^    OMX_IndexConfigTimeSeekMode,            \/**< reference: OMX_TIME_CONFIG_SEEKMODETYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigVideoAVCIntraPeriod	omx/openmax/OMX_Index.h	/^    OMX_IndexConfigVideoAVCIntraPeriod,     \/**< reference: OMX_VIDEO_CONFIG_AVCINTRAPERIOD *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigVideoBitrate	omx/openmax/OMX_Index.h	/^    OMX_IndexConfigVideoBitrate,            \/**< reference: OMX_VIDEO_CONFIG_BITRATETYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigVideoFramerate	omx/openmax/OMX_Index.h	/^    OMX_IndexConfigVideoFramerate,          \/**< reference: OMX_CONFIG_FRAMERATETYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigVideoIntraMBRefresh	omx/openmax/OMX_Index.h	/^    OMX_IndexConfigVideoIntraMBRefresh,     \/**< reference: OMX_CONFIG_MACROBLOCKERRORMAPTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigVideoIntraVOPRefresh	omx/openmax/OMX_Index.h	/^    OMX_IndexConfigVideoIntraVOPRefresh,    \/**< reference: OMX_CONFIG_INTRAREFRESHVOPTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigVideoMBErrorReporting	omx/openmax/OMX_Index.h	/^    OMX_IndexConfigVideoMBErrorReporting,   \/**< reference: OMX_CONFIG_MBERRORREPORTINGTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigVideoMacroBlockErrorMap	omx/openmax/OMX_Index.h	/^    OMX_IndexConfigVideoMacroBlockErrorMap, \/**< reference: OMX_CONFIG_MACROBLOCKERRORMAPTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigVideoNalSize	omx/openmax/OMX_Index.h	/^    OMX_IndexConfigVideoNalSize,            \/**< reference: OMX_VIDEO_CONFIG_NALSIZE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexExtAudioStartUnused	omx/openmax/OMX_IndexExt.h	/^    OMX_IndexExtAudioStartUnused = OMX_IndexKhronosExtensions + 0x00400000,$/;"	e	enum:OMX_INDEXEXTTYPE
OMX_IndexExtCommonStartUnused	omx/openmax/OMX_IndexExt.h	/^    OMX_IndexExtCommonStartUnused = OMX_IndexKhronosExtensions + 0x00700000,$/;"	e	enum:OMX_INDEXEXTTYPE
OMX_IndexExtComponentStartUnused	omx/openmax/OMX_IndexExt.h	/^    OMX_IndexExtComponentStartUnused = OMX_IndexKhronosExtensions + 0x00100000,$/;"	e	enum:OMX_INDEXEXTTYPE
OMX_IndexExtImageStartUnused	omx/openmax/OMX_IndexExt.h	/^    OMX_IndexExtImageStartUnused = OMX_IndexKhronosExtensions + 0x00500000,$/;"	e	enum:OMX_INDEXEXTTYPE
OMX_IndexExtMax	omx/openmax/OMX_IndexExt.h	/^    OMX_IndexExtMax = 0x7FFFFFFF$/;"	e	enum:OMX_INDEXEXTTYPE
OMX_IndexExtOtherStartUnused	omx/openmax/OMX_IndexExt.h	/^    OMX_IndexExtOtherStartUnused = OMX_IndexKhronosExtensions + 0x00800000,$/;"	e	enum:OMX_INDEXEXTTYPE
OMX_IndexExtPortStartUnused	omx/openmax/OMX_IndexExt.h	/^    OMX_IndexExtPortStartUnused = OMX_IndexKhronosExtensions + 0x00200000,$/;"	e	enum:OMX_INDEXEXTTYPE
OMX_IndexExtTimeStartUnused	omx/openmax/OMX_IndexExt.h	/^    OMX_IndexExtTimeStartUnused = OMX_IndexKhronosExtensions + 0x00900000,$/;"	e	enum:OMX_INDEXEXTTYPE
OMX_IndexExtVideoStartUnused	omx/openmax/OMX_IndexExt.h	/^    OMX_IndexExtVideoStartUnused = OMX_IndexKhronosExtensions + 0x00600000,$/;"	e	enum:OMX_INDEXEXTTYPE
OMX_IndexExt_h	omx/openmax/OMX_IndexExt.h	30;"	d
OMX_IndexImageStartUnused	omx/openmax/OMX_Index.h	/^    OMX_IndexImageStartUnused = 0x05000000,$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexKhronosExtensions	omx/openmax/OMX_Index.h	/^    OMX_IndexKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_INDEXTYPE
OMX_IndexMax	omx/openmax/OMX_Index.h	/^    OMX_IndexMax = 0x7FFFFFFF$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexOtherStartUnused	omx/openmax/OMX_Index.h	/^    OMX_IndexOtherStartUnused = 0x08000000,$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamActiveStream	omx/openmax/OMX_Index.h	/^    OMX_IndexParamActiveStream,             \/**< reference: OMX_PARAM_U32TYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioAac	omx/openmax/OMX_Index.h	/^    OMX_IndexParamAudioAac,                 \/**< reference: OMX_AUDIO_PARAM_AACPROFILETYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioAdpcm	omx/openmax/OMX_Index.h	/^    OMX_IndexParamAudioAdpcm,               \/**< reference: OMX_AUDIO_PARAM_ADPCMTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioAmr	omx/openmax/OMX_Index.h	/^    OMX_IndexParamAudioAmr,                 \/**< reference: OMX_AUDIO_PARAM_AMRTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioEvrc	omx/openmax/OMX_Index.h	/^    OMX_IndexParamAudioEvrc,                \/**< reference: OMX_AUDIO_PARAM_EVRCTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioG723	omx/openmax/OMX_Index.h	/^    OMX_IndexParamAudioG723,                \/**< reference: OMX_AUDIO_PARAM_G723TYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioG726	omx/openmax/OMX_Index.h	/^    OMX_IndexParamAudioG726,                \/**< reference: OMX_AUDIO_PARAM_G726TYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioG729	omx/openmax/OMX_Index.h	/^    OMX_IndexParamAudioG729,                \/**< reference: OMX_AUDIO_PARAM_G729TYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioGsm_EFR	omx/openmax/OMX_Index.h	/^    OMX_IndexParamAudioGsm_EFR,             \/**< reference: OMX_AUDIO_PARAM_GSMEFRTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioGsm_FR	omx/openmax/OMX_Index.h	/^    OMX_IndexParamAudioGsm_FR,              \/**< reference: OMX_AUDIO_PARAM_GSMFRTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioGsm_HR	omx/openmax/OMX_Index.h	/^    OMX_IndexParamAudioGsm_HR,              \/**< reference: OMX_AUDIO_PARAM_GSMHRTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioInit	omx/openmax/OMX_Index.h	/^    OMX_IndexParamAudioInit,                \/**< reference: OMX_PORT_PARAM_TYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioMidi	omx/openmax/OMX_Index.h	/^    OMX_IndexParamAudioMidi,                \/**< reference: OMX_AUDIO_PARAM_MIDITYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioMidiLoadUserSound	omx/openmax/OMX_Index.h	/^    OMX_IndexParamAudioMidiLoadUserSound,   \/**< reference: OMX_AUDIO_PARAM_MIDILOADUSERSOUNDTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioMp3	omx/openmax/OMX_Index.h	/^    OMX_IndexParamAudioMp3,                 \/**< reference: OMX_AUDIO_PARAM_MP3TYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioPcm	omx/openmax/OMX_Index.h	/^    OMX_IndexParamAudioPcm,                 \/**< reference: OMX_AUDIO_PARAM_PCMMODETYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioPdc_EFR	omx/openmax/OMX_Index.h	/^    OMX_IndexParamAudioPdc_EFR,             \/**< reference: OMX_AUDIO_PARAM_PDCEFRTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioPdc_FR	omx/openmax/OMX_Index.h	/^    OMX_IndexParamAudioPdc_FR,              \/**< reference: OMX_AUDIO_PARAM_PDCFRTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioPdc_HR	omx/openmax/OMX_Index.h	/^    OMX_IndexParamAudioPdc_HR,              \/**< reference: OMX_AUDIO_PARAM_PDCHRTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioPortFormat	omx/openmax/OMX_Index.h	/^    OMX_IndexParamAudioPortFormat,          \/**< reference: OMX_AUDIO_PARAM_PORTFORMATTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioQcelp13	omx/openmax/OMX_Index.h	/^    OMX_IndexParamAudioQcelp13,             \/**< reference: OMX_AUDIO_PARAM_QCELP13TYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioQcelp8	omx/openmax/OMX_Index.h	/^    OMX_IndexParamAudioQcelp8,              \/**< reference: OMX_AUDIO_PARAM_QCELP8TYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioRa	omx/openmax/OMX_Index.h	/^    OMX_IndexParamAudioRa,                  \/**< reference: OMX_AUDIO_PARAM_RATYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioSbc	omx/openmax/OMX_Index.h	/^    OMX_IndexParamAudioSbc,                 \/**< reference: OMX_AUDIO_PARAM_SBCTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioSmv	omx/openmax/OMX_Index.h	/^    OMX_IndexParamAudioSmv,                 \/**< reference: OMX_AUDIO_PARAM_SMVTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioTdma_EFR	omx/openmax/OMX_Index.h	/^    OMX_IndexParamAudioTdma_EFR,            \/**< reference: OMX_AUDIO_PARAM_TDMAEFRTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioTdma_FR	omx/openmax/OMX_Index.h	/^    OMX_IndexParamAudioTdma_FR,             \/**< reference: OMX_AUDIO_PARAM_TDMAFRTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioVorbis	omx/openmax/OMX_Index.h	/^    OMX_IndexParamAudioVorbis,              \/**< reference: OMX_AUDIO_PARAM_VORBISTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioWma	omx/openmax/OMX_Index.h	/^    OMX_IndexParamAudioWma,                 \/**< reference: OMX_AUDIO_PARAM_WMATYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamBrcmVideoEGLRenderDiscardMode	omx/gstomxvideodec.c	1089;"	d	file:
OMX_IndexParamBrcmVideoEGLRenderDiscardMode	omx/gstomxvideodec.c	1100;"	d	file:
OMX_IndexParamCommonDeblocking	omx/openmax/OMX_Index.h	/^    OMX_IndexParamCommonDeblocking,         \/**< reference: OMX_PARAM_DEBLOCKINGTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamCommonExtraQuantData	omx/openmax/OMX_Index.h	/^    OMX_IndexParamCommonExtraQuantData,     \/**< reference: OMX_OTHER_EXTRADATATYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamCommonInterleave	omx/openmax/OMX_Index.h	/^    OMX_IndexParamCommonInterleave,         \/**< reference: OMX_PARAM_INTERLEAVETYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamCommonSensorMode	omx/openmax/OMX_Index.h	/^    OMX_IndexParamCommonSensorMode,         \/**< reference: OMX_PARAM_SENSORMODETYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamCompBufferSupplier	omx/openmax/OMX_Index.h	/^    OMX_IndexParamCompBufferSupplier,       \/**< reference: OMX_PARAM_BUFFERSUPPLIERTYPE *\/ $/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamComponentSuspended	omx/openmax/OMX_Index.h	/^    OMX_IndexParamComponentSuspended,       \/**< reference: OMX_PARAM_SUSPENSIONTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamContentURI	omx/openmax/OMX_Index.h	/^    OMX_IndexParamContentURI,               \/**< reference: OMX_PARAM_CONTENTURITYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamCustomContentPipe	omx/openmax/OMX_Index.h	/^    OMX_IndexParamCustomContentPipe,        \/**< reference: OMX_PARAM_CONTENTPIPETYPE *\/ $/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamDisableResourceConcealment	omx/openmax/OMX_Index.h	/^    OMX_IndexParamDisableResourceConcealment, \/**< reference: OMX_RESOURCECONCEALMENTTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamEnablePlatformSpecificBuffers	omx/gstomx.h	/^    OMX_IndexParamEnablePlatformSpecificBuffers = 0x7F000011$/;"	e	enum:__anon5
OMX_IndexParamFlashControl	omx/openmax/OMX_Index.h	/^    OMX_IndexParamFlashControl,             \/**< reference: OMX_IMAGE_PARAM_FLASHCONTROLTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamHuffmanTable	omx/openmax/OMX_Index.h	/^    OMX_IndexParamHuffmanTable,             \/**< reference: OMX_IMAGE_PARAM_HUFFMANTTABLETYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamImageInit	omx/openmax/OMX_Index.h	/^    OMX_IndexParamImageInit,                \/**< reference: OMX_PORT_PARAM_TYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamImagePortFormat	omx/openmax/OMX_Index.h	/^    OMX_IndexParamImagePortFormat,          \/**< reference: OMX_IMAGE_PARAM_PORTFORMATTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamMetadataFilterType	omx/openmax/OMX_Index.h	/^    OMX_IndexParamMetadataFilterType,       \/**< reference: OMX_PARAM_METADATAFILTERTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamMetadataKeyFilter	omx/openmax/OMX_Index.h	/^    OMX_IndexParamMetadataKeyFilter,        \/**< reference: OMX_PARAM_METADATAFILTERTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamNalStreamFormat	omx/openmax/OMX_IndexExt.h	/^    OMX_IndexParamNalStreamFormat,                  \/**< reference: OMX_NALSTREAMFORMATTYPE *\/$/;"	e	enum:OMX_INDEXEXTTYPE
OMX_IndexParamNalStreamFormatSelect	omx/openmax/OMX_IndexExt.h	/^    OMX_IndexParamNalStreamFormatSelect,            \/**< reference: OMX_NALSTREAMFORMATTYPE *\/$/;"	e	enum:OMX_INDEXEXTTYPE
OMX_IndexParamNalStreamFormatSupported	omx/openmax/OMX_IndexExt.h	/^    OMX_IndexParamNalStreamFormatSupported,         \/**< reference: OMX_NALSTREAMFORMATTYPE *\/$/;"	e	enum:OMX_INDEXEXTTYPE
OMX_IndexParamNumAvailableStreams	omx/openmax/OMX_Index.h	/^    OMX_IndexParamNumAvailableStreams,      \/**< reference: OMX_PARAM_U32TYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamOtherInit	omx/openmax/OMX_Index.h	/^    OMX_IndexParamOtherInit,                \/**< reference: OMX_PORT_PARAM_TYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamOtherPortFormat	omx/openmax/OMX_Index.h	/^    OMX_IndexParamOtherPortFormat,          \/**< reference: OMX_OTHER_PARAM_PORTFORMATTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamPortDefinition	omx/openmax/OMX_Index.h	/^    OMX_IndexParamPortDefinition,           \/**< reference: OMX_PARAM_PORTDEFINITIONTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamPriorityMgmt	omx/openmax/OMX_Index.h	/^    OMX_IndexParamPriorityMgmt,             \/**< reference: OMX_PRIORITYMGMTTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamQFactor	omx/openmax/OMX_Index.h	/^    OMX_IndexParamQFactor,                  \/**< reference: OMX_IMAGE_PARAM_QFACTORTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamQuantizationTable	omx/openmax/OMX_Index.h	/^    OMX_IndexParamQuantizationTable,        \/**< reference: OMX_IMAGE_PARAM_QUANTIZATIONTABLETYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamStandardComponentRole	omx/openmax/OMX_Index.h	/^    OMX_IndexParamStandardComponentRole,    \/**< reference: OMX_PARAM_COMPONENTROLETYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamSuspensionPolicy	omx/openmax/OMX_Index.h	/^    OMX_IndexParamSuspensionPolicy,         \/**< reference: OMX_PARAM_SUSPENSIONPOLICYTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamVideoAvc	omx/openmax/OMX_Index.h	/^    OMX_IndexParamVideoAvc,                 \/**< reference: OMX_VIDEO_PARAM_AVCTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamVideoBitrate	omx/openmax/OMX_Index.h	/^    OMX_IndexParamVideoBitrate,             \/**< reference: OMX_VIDEO_PARAM_BITRATETYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamVideoErrorCorrection	omx/openmax/OMX_Index.h	/^    OMX_IndexParamVideoErrorCorrection,     \/**< reference: OMX_VIDEO_PARAM_ERRORCORRECTIONTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamVideoFastUpdate	omx/openmax/OMX_Index.h	/^    OMX_IndexParamVideoFastUpdate,          \/**< reference: OMX_VIDEO_PARAM_VIDEOFASTUPDATETYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamVideoH263	omx/openmax/OMX_Index.h	/^    OMX_IndexParamVideoH263,                \/**< reference: OMX_VIDEO_PARAM_H263TYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamVideoInit	omx/openmax/OMX_Index.h	/^    OMX_IndexParamVideoInit,                \/**< reference: OMX_PORT_PARAM_TYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamVideoIntraRefresh	omx/openmax/OMX_Index.h	/^    OMX_IndexParamVideoIntraRefresh,        \/**< reference: OMX_VIDEO_PARAM_INTRAREFRESHTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamVideoMacroblocksPerFrame	omx/openmax/OMX_Index.h	/^    OMX_IndexParamVideoMacroblocksPerFrame, \/**< reference: OMX_PARAM_MACROBLOCKSTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamVideoMotionVector	omx/openmax/OMX_Index.h	/^    OMX_IndexParamVideoMotionVector,        \/**< reference: OMX_VIDEO_PARAM_MOTIONVECTORTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamVideoMpeg2	omx/openmax/OMX_Index.h	/^    OMX_IndexParamVideoMpeg2,               \/**< reference: OMX_VIDEO_PARAM_MPEG2TYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamVideoMpeg4	omx/openmax/OMX_Index.h	/^    OMX_IndexParamVideoMpeg4,               \/**< reference: OMX_VIDEO_PARAM_MPEG4TYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamVideoPortFormat	omx/openmax/OMX_Index.h	/^    OMX_IndexParamVideoPortFormat,          \/**< reference: OMX_VIDEO_PARAM_PORTFORMATTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamVideoProfileLevelCurrent	omx/openmax/OMX_Index.h	/^    OMX_IndexParamVideoProfileLevelCurrent, \/**< reference: OMX_VIDEO_PARAM_PROFILELEVELTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamVideoProfileLevelQuerySupported	omx/openmax/OMX_Index.h	/^    OMX_IndexParamVideoProfileLevelQuerySupported, \/**< reference: OMX_VIDEO_PARAM_PROFILELEVELTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamVideoQuantization	omx/openmax/OMX_Index.h	/^    OMX_IndexParamVideoQuantization,        \/**< reference: OMX_VIDEO_PARAM_QUANTIZATIONTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamVideoRv	omx/openmax/OMX_Index.h	/^    OMX_IndexParamVideoRv,                  \/**< reference: OMX_VIDEO_PARAM_RVTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamVideoSliceFMO	omx/openmax/OMX_Index.h	/^    OMX_IndexParamVideoSliceFMO,            \/**< reference: OMX_VIDEO_PARAM_AVCSLICEFMO *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamVideoVBSMC	omx/openmax/OMX_Index.h	/^    OMX_IndexParamVideoVBSMC,               \/**< reference: OMX_VIDEO_PARAM_VBSMCTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamVideoWmv	omx/openmax/OMX_Index.h	/^    OMX_IndexParamVideoWmv,                 \/**< reference: OMX_VIDEO_PARAM_WMVTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexPortStartUnused	omx/openmax/OMX_Index.h	/^    OMX_IndexPortStartUnused = 0x02000000,$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexReservedStartUnused	omx/openmax/OMX_Index.h	/^    OMX_IndexReservedStartUnused = 0x03000000,$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexTimeStartUnused	omx/openmax/OMX_Index.h	/^    OMX_IndexTimeStartUnused = 0x09000000,$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexVendorStartUnused	omx/openmax/OMX_Index.h	/^    OMX_IndexVendorStartUnused = 0x7F000000,$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexVideoStartUnused	omx/openmax/OMX_Index.h	/^    OMX_IndexVideoStartUnused = 0x06000000,$/;"	e	enum:OMX_INDEXTYPE
OMX_Index_h	omx/openmax/OMX_Index.h	31;"	d
OMX_Init	omx/openmax/OMX_Core.h	/^OMX_API OMX_ERRORTYPE OMX_APIENTRY OMX_Init(void);$/;"	p	signature:(void)
OMX_MARKTYPE	omx/openmax/OMX_Types.h	/^typedef struct OMX_MARKTYPE$/;"	s
OMX_MARKTYPE	omx/openmax/OMX_Types.h	/^} OMX_MARKTYPE;$/;"	t	typeref:struct:OMX_MARKTYPE
OMX_MARKTYPE::hMarkTargetComponent	omx/openmax/OMX_Types.h	/^    OMX_HANDLETYPE hMarkTargetComponent;   \/**< The component that will $/;"	m	struct:OMX_MARKTYPE	access:public
OMX_MARKTYPE::pMarkData	omx/openmax/OMX_Types.h	/^    OMX_PTR pMarkData;   \/**< Application specific data associated with $/;"	m	struct:OMX_MARKTYPE	access:public
OMX_MAX_STRINGNAME_SIZE	omx/openmax/OMX_Core.h	281;"	d
OMX_METADATACHARSETTYPE	omx/openmax/OMX_Component.h	/^typedef enum OMX_METADATACHARSETTYPE {$/;"	g
OMX_METADATACHARSETTYPE	omx/openmax/OMX_Component.h	/^} OMX_METADATACHARSETTYPE;$/;"	t	typeref:enum:OMX_METADATACHARSETTYPE
OMX_METADATASCOPETYPE	omx/openmax/OMX_Component.h	/^typedef enum OMX_METADATASCOPETYPE$/;"	g
OMX_METADATASCOPETYPE	omx/openmax/OMX_Component.h	/^} OMX_METADATASCOPETYPE;$/;"	t	typeref:enum:OMX_METADATASCOPETYPE
OMX_METADATASEARCHMODETYPE	omx/openmax/OMX_Component.h	/^typedef enum OMX_METADATASEARCHMODETYPE$/;"	g
OMX_METADATASEARCHMODETYPE	omx/openmax/OMX_Component.h	/^} OMX_METADATASEARCHMODETYPE;$/;"	t	typeref:enum:OMX_METADATASEARCHMODETYPE
OMX_METERINGTYPE	omx/openmax/OMX_IVCommon.h	/^typedef enum OMX_METERINGTYPE {$/;"	g
OMX_METERINGTYPE	omx/openmax/OMX_IVCommon.h	/^} OMX_METERINGTYPE;$/;"	t	typeref:enum:OMX_METERINGTYPE
OMX_MIN_PCMPAYLOAD_MSEC	omx/openmax/OMX_Audio.h	156;"	d
OMX_MIRRORTYPE	omx/openmax/OMX_IVCommon.h	/^typedef enum OMX_MIRRORTYPE {$/;"	g
OMX_MIRRORTYPE	omx/openmax/OMX_IVCommon.h	/^} OMX_MIRRORTYPE;$/;"	t	typeref:enum:OMX_MIRRORTYPE
OMX_MetadataCharsetASCII	omx/openmax/OMX_Component.h	/^    OMX_MetadataCharsetASCII,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetBig5	omx/openmax/OMX_Component.h	/^    OMX_MetadataCharsetBig5,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetBinary	omx/openmax/OMX_Component.h	/^    OMX_MetadataCharsetBinary,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetCodePage1252	omx/openmax/OMX_Component.h	/^    OMX_MetadataCharsetCodePage1252,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetGB12345	omx/openmax/OMX_Component.h	/^    OMX_MetadataCharsetGB12345,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetGB18030	omx/openmax/OMX_Component.h	/^    OMX_MetadataCharsetGB18030,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetGB2312	omx/openmax/OMX_Component.h	/^    OMX_MetadataCharsetGB2312,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetGBK	omx/openmax/OMX_Component.h	/^    OMX_MetadataCharsetGBK,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetHZGB2312	omx/openmax/OMX_Component.h	/^    OMX_MetadataCharsetHZGB2312,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetISO2022JP	omx/openmax/OMX_Component.h	/^    OMX_MetadataCharsetISO2022JP,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetISO2022JP1	omx/openmax/OMX_Component.h	/^    OMX_MetadataCharsetISO2022JP1,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetISO88591	omx/openmax/OMX_Component.h	/^    OMX_MetadataCharsetISO88591,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetISO885910	omx/openmax/OMX_Component.h	/^    OMX_MetadataCharsetISO885910,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetISO885913	omx/openmax/OMX_Component.h	/^    OMX_MetadataCharsetISO885913,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetISO885914	omx/openmax/OMX_Component.h	/^    OMX_MetadataCharsetISO885914,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetISO885915	omx/openmax/OMX_Component.h	/^    OMX_MetadataCharsetISO885915,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetISO88592	omx/openmax/OMX_Component.h	/^    OMX_MetadataCharsetISO88592,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetISO88593	omx/openmax/OMX_Component.h	/^    OMX_MetadataCharsetISO88593,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetISO88594	omx/openmax/OMX_Component.h	/^    OMX_MetadataCharsetISO88594,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetISO88595	omx/openmax/OMX_Component.h	/^    OMX_MetadataCharsetISO88595,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetISO88596	omx/openmax/OMX_Component.h	/^    OMX_MetadataCharsetISO88596,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetISO88597	omx/openmax/OMX_Component.h	/^    OMX_MetadataCharsetISO88597,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetISO88598	omx/openmax/OMX_Component.h	/^    OMX_MetadataCharsetISO88598,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetISO88599	omx/openmax/OMX_Component.h	/^    OMX_MetadataCharsetISO88599,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetISOEUCJP	omx/openmax/OMX_Component.h	/^    OMX_MetadataCharsetISOEUCJP,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetImapUTF7	omx/openmax/OMX_Component.h	/^    OMX_MetadataCharsetImapUTF7,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetJavaConformantUTF8	omx/openmax/OMX_Component.h	/^    OMX_MetadataCharsetJavaConformantUTF8,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetKhronosExtensions	omx/openmax/OMX_Component.h	/^    OMX_MetadataCharsetKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetSMS7Bit	omx/openmax/OMX_Component.h	/^    OMX_MetadataCharsetSMS7Bit,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetShiftJIS	omx/openmax/OMX_Component.h	/^    OMX_MetadataCharsetShiftJIS,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetTypeMax	omx/openmax/OMX_Component.h	/^    OMX_MetadataCharsetTypeMax= 0x7FFFFFFF$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetUTF16BE	omx/openmax/OMX_Component.h	/^    OMX_MetadataCharsetUTF16BE,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetUTF16LE	omx/openmax/OMX_Component.h	/^    OMX_MetadataCharsetUTF16LE, $/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetUTF7	omx/openmax/OMX_Component.h	/^    OMX_MetadataCharsetUTF7,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetUTF8	omx/openmax/OMX_Component.h	/^    OMX_MetadataCharsetUTF8,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetUnknown	omx/openmax/OMX_Component.h	/^    OMX_MetadataCharsetUnknown = 0,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetVendorStartUnused	omx/openmax/OMX_Component.h	/^    OMX_MetadataCharsetVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataScopeAllLevels	omx/openmax/OMX_Component.h	/^    OMX_MetadataScopeAllLevels,$/;"	e	enum:OMX_METADATASCOPETYPE
OMX_MetadataScopeKhronosExtensions	omx/openmax/OMX_Component.h	/^    OMX_MetadataScopeKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_METADATASCOPETYPE
OMX_MetadataScopeNodeLevel	omx/openmax/OMX_Component.h	/^    OMX_MetadataScopeNodeLevel,$/;"	e	enum:OMX_METADATASCOPETYPE
OMX_MetadataScopePortLevel	omx/openmax/OMX_Component.h	/^    OMX_MetadataScopePortLevel,$/;"	e	enum:OMX_METADATASCOPETYPE
OMX_MetadataScopeTopLevel	omx/openmax/OMX_Component.h	/^    OMX_MetadataScopeTopLevel,$/;"	e	enum:OMX_METADATASCOPETYPE
OMX_MetadataScopeTypeMax	omx/openmax/OMX_Component.h	/^    OMX_MetadataScopeTypeMax = 0x7fffffff$/;"	e	enum:OMX_METADATASCOPETYPE
OMX_MetadataScopeVendorStartUnused	omx/openmax/OMX_Component.h	/^    OMX_MetadataScopeVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_METADATASCOPETYPE
OMX_MetadataSearchItemByIndex	omx/openmax/OMX_Component.h	/^    OMX_MetadataSearchItemByIndex,$/;"	e	enum:OMX_METADATASEARCHMODETYPE
OMX_MetadataSearchKhronosExtensions	omx/openmax/OMX_Component.h	/^    OMX_MetadataSearchKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_METADATASEARCHMODETYPE
OMX_MetadataSearchNextItemByKey	omx/openmax/OMX_Component.h	/^    OMX_MetadataSearchNextItemByKey,$/;"	e	enum:OMX_METADATASEARCHMODETYPE
OMX_MetadataSearchTypeMax	omx/openmax/OMX_Component.h	/^    OMX_MetadataSearchTypeMax = 0x7fffffff$/;"	e	enum:OMX_METADATASEARCHMODETYPE
OMX_MetadataSearchValueSizeByIndex	omx/openmax/OMX_Component.h	/^    OMX_MetadataSearchValueSizeByIndex,$/;"	e	enum:OMX_METADATASEARCHMODETYPE
OMX_MetadataSearchVendorStartUnused	omx/openmax/OMX_Component.h	/^    OMX_MetadataSearchVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_METADATASEARCHMODETYPE
OMX_MeteringKhronosExtensions	omx/openmax/OMX_IVCommon.h	/^    OMX_MeteringKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_METERINGTYPE
OMX_MeteringModeAverage	omx/openmax/OMX_IVCommon.h	/^    OMX_MeteringModeAverage,     \/**< Center-weighted average metering. *\/$/;"	e	enum:OMX_METERINGTYPE
OMX_MeteringModeMatrix	omx/openmax/OMX_IVCommon.h	/^    OMX_MeteringModeMatrix,      \/**< Matrix or evaluative metering. *\/$/;"	e	enum:OMX_METERINGTYPE
OMX_MeteringModeSpot	omx/openmax/OMX_IVCommon.h	/^    OMX_MeteringModeSpot,  	      \/**< Spot (partial) metering. *\/$/;"	e	enum:OMX_METERINGTYPE
OMX_MeteringVendorStartUnused	omx/openmax/OMX_IVCommon.h	/^    OMX_MeteringVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_METERINGTYPE
OMX_MirrorBoth	omx/openmax/OMX_IVCommon.h	/^    OMX_MirrorBoth, $/;"	e	enum:OMX_MIRRORTYPE
OMX_MirrorHorizontal	omx/openmax/OMX_IVCommon.h	/^    OMX_MirrorHorizontal,$/;"	e	enum:OMX_MIRRORTYPE
OMX_MirrorKhronosExtensions	omx/openmax/OMX_IVCommon.h	/^    OMX_MirrorKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_MIRRORTYPE
OMX_MirrorMax	omx/openmax/OMX_IVCommon.h	/^    OMX_MirrorMax = 0x7FFFFFFF   $/;"	e	enum:OMX_MIRRORTYPE
OMX_MirrorNone	omx/openmax/OMX_IVCommon.h	/^    OMX_MirrorNone = 0,$/;"	e	enum:OMX_MIRRORTYPE
OMX_MirrorVendorStartUnused	omx/openmax/OMX_IVCommon.h	/^    OMX_MirrorVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_MIRRORTYPE
OMX_MirrorVertical	omx/openmax/OMX_IVCommon.h	/^    OMX_MirrorVertical,$/;"	e	enum:OMX_MIRRORTYPE
OMX_NALSTREAMFORMATTYPE	omx/openmax/OMX_VideoExt.h	/^typedef struct OMX_NALSTREAMFORMATTYPE{$/;"	s
OMX_NALSTREAMFORMATTYPE	omx/openmax/OMX_VideoExt.h	/^} OMX_NALSTREAMFORMATTYPE;$/;"	t	typeref:struct:OMX_NALSTREAMFORMATTYPE
OMX_NALSTREAMFORMATTYPE::eNaluFormat	omx/openmax/OMX_VideoExt.h	/^    OMX_NALUFORMATSTYPE eNaluFormat;$/;"	m	struct:OMX_NALSTREAMFORMATTYPE	access:public
OMX_NALSTREAMFORMATTYPE::nPortIndex	omx/openmax/OMX_VideoExt.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_NALSTREAMFORMATTYPE	access:public
OMX_NALSTREAMFORMATTYPE::nSize	omx/openmax/OMX_VideoExt.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_NALSTREAMFORMATTYPE	access:public
OMX_NALSTREAMFORMATTYPE::nVersion	omx/openmax/OMX_VideoExt.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_NALSTREAMFORMATTYPE	access:public
OMX_NALUFORMATSTYPE	omx/openmax/OMX_VideoExt.h	/^typedef enum OMX_NALUFORMATSTYPE {$/;"	g
OMX_NALUFORMATSTYPE	omx/openmax/OMX_VideoExt.h	/^} OMX_NALUFORMATSTYPE;$/;"	t	typeref:enum:OMX_NALUFORMATSTYPE
OMX_NATIVE_DEVICETYPE	omx/openmax/OMX_Types.h	/^typedef void* OMX_NATIVE_DEVICETYPE;$/;"	t
OMX_NATIVE_WINDOWTYPE	omx/openmax/OMX_Types.h	/^typedef void* OMX_NATIVE_WINDOWTYPE;$/;"	t
OMX_NUMERICALDATATYPE	omx/openmax/OMX_Types.h	/^typedef enum OMX_NUMERICALDATATYPE$/;"	g
OMX_NUMERICALDATATYPE	omx/openmax/OMX_Types.h	/^} OMX_NUMERICALDATATYPE;$/;"	t	typeref:enum:OMX_NUMERICALDATATYPE
OMX_NaluFormatCodingMax	omx/openmax/OMX_VideoExt.h	/^    OMX_NaluFormatCodingMax = 0x7FFFFFFF$/;"	e	enum:OMX_NALUFORMATSTYPE
OMX_NaluFormatFourByteInterleaveLength	omx/openmax/OMX_VideoExt.h	/^    OMX_NaluFormatFourByteInterleaveLength = 16,$/;"	e	enum:OMX_NALUFORMATSTYPE
OMX_NaluFormatOneByteInterleaveLength	omx/openmax/OMX_VideoExt.h	/^    OMX_NaluFormatOneByteInterleaveLength = 4,$/;"	e	enum:OMX_NALUFORMATSTYPE
OMX_NaluFormatOneNaluPerBuffer	omx/openmax/OMX_VideoExt.h	/^    OMX_NaluFormatOneNaluPerBuffer = 2,$/;"	e	enum:OMX_NALUFORMATSTYPE
OMX_NaluFormatStartCodes	omx/openmax/OMX_VideoExt.h	/^    OMX_NaluFormatStartCodes = 1,$/;"	e	enum:OMX_NALUFORMATSTYPE
OMX_NaluFormatTwoByteInterleaveLength	omx/openmax/OMX_VideoExt.h	/^    OMX_NaluFormatTwoByteInterleaveLength = 8,$/;"	e	enum:OMX_NALUFORMATSTYPE
OMX_NotSuspended	omx/openmax/OMX_Component.h	/^    OMX_NotSuspended, \/**< component is not suspended *\/$/;"	e	enum:OMX_SUSPENSIONTYPE
OMX_NumercialDataMax	omx/openmax/OMX_Types.h	/^    OMX_NumercialDataMax = 0x7FFFFFFF$/;"	e	enum:OMX_NUMERICALDATATYPE
OMX_NumericalDataSigned	omx/openmax/OMX_Types.h	/^    OMX_NumericalDataSigned, \/**< signed data *\/$/;"	e	enum:OMX_NUMERICALDATATYPE
OMX_NumericalDataUnsigned	omx/openmax/OMX_Types.h	/^    OMX_NumericalDataUnsigned, \/**< unsigned data *\/$/;"	e	enum:OMX_NUMERICALDATATYPE
OMX_OTHER_CONFIG_POWERTYPE	omx/openmax/OMX_Other.h	/^typedef struct OMX_OTHER_CONFIG_POWERTYPE {$/;"	s
OMX_OTHER_CONFIG_POWERTYPE	omx/openmax/OMX_Other.h	/^} OMX_OTHER_CONFIG_POWERTYPE;$/;"	t	typeref:struct:OMX_OTHER_CONFIG_POWERTYPE
OMX_OTHER_CONFIG_POWERTYPE::bEnablePM	omx/openmax/OMX_Other.h	/^    OMX_BOOL bEnablePM;       \/**< Flag to enable Power Management *\/$/;"	m	struct:OMX_OTHER_CONFIG_POWERTYPE	access:public
OMX_OTHER_CONFIG_POWERTYPE::nSize	omx/openmax/OMX_Other.h	/^    OMX_U32 nSize;            \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_OTHER_CONFIG_POWERTYPE	access:public
OMX_OTHER_CONFIG_POWERTYPE::nVersion	omx/openmax/OMX_Other.h	/^    OMX_VERSIONTYPE nVersion; \/**< OMX specification version information *\/$/;"	m	struct:OMX_OTHER_CONFIG_POWERTYPE	access:public
OMX_OTHER_CONFIG_STATSTYPE	omx/openmax/OMX_Other.h	/^typedef struct OMX_OTHER_CONFIG_STATSTYPE {$/;"	s
OMX_OTHER_CONFIG_STATSTYPE	omx/openmax/OMX_Other.h	/^} OMX_OTHER_CONFIG_STATSTYPE;$/;"	t	typeref:struct:OMX_OTHER_CONFIG_STATSTYPE
OMX_OTHER_CONFIG_STATSTYPE::nSize	omx/openmax/OMX_Other.h	/^    OMX_U32 nSize;            \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_OTHER_CONFIG_STATSTYPE	access:public
OMX_OTHER_CONFIG_STATSTYPE::nVersion	omx/openmax/OMX_Other.h	/^    OMX_VERSIONTYPE nVersion; \/**< OMX specification version information *\/$/;"	m	struct:OMX_OTHER_CONFIG_STATSTYPE	access:public
OMX_OTHER_EXTRADATATYPE	omx/openmax/OMX_Core.h	/^typedef struct OMX_OTHER_EXTRADATATYPE  {$/;"	s
OMX_OTHER_EXTRADATATYPE	omx/openmax/OMX_Core.h	/^} OMX_OTHER_EXTRADATATYPE;$/;"	t	typeref:struct:OMX_OTHER_EXTRADATATYPE
OMX_OTHER_EXTRADATATYPE::data	omx/openmax/OMX_Core.h	/^    OMX_U8  data[1];     \/* Supporting data hint  *\/$/;"	m	struct:OMX_OTHER_EXTRADATATYPE	access:public
OMX_OTHER_EXTRADATATYPE::eType	omx/openmax/OMX_Core.h	/^    OMX_EXTRADATATYPE eType;       \/* Extra Data type *\/$/;"	m	struct:OMX_OTHER_EXTRADATATYPE	access:public
OMX_OTHER_EXTRADATATYPE::nDataSize	omx/openmax/OMX_Core.h	/^    OMX_U32 nDataSize;   \/* Size of the supporting data to follow *\/$/;"	m	struct:OMX_OTHER_EXTRADATATYPE	access:public
OMX_OTHER_EXTRADATATYPE::nPortIndex	omx/openmax/OMX_Core.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_OTHER_EXTRADATATYPE	access:public
OMX_OTHER_EXTRADATATYPE::nSize	omx/openmax/OMX_Core.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_OTHER_EXTRADATATYPE	access:public
OMX_OTHER_EXTRADATATYPE::nVersion	omx/openmax/OMX_Core.h	/^    OMX_VERSIONTYPE nVersion;               $/;"	m	struct:OMX_OTHER_EXTRADATATYPE	access:public
OMX_OTHER_FORMATTYPE	omx/openmax/OMX_Other.h	/^typedef enum OMX_OTHER_FORMATTYPE {$/;"	g
OMX_OTHER_FORMATTYPE	omx/openmax/OMX_Other.h	/^} OMX_OTHER_FORMATTYPE;$/;"	t	typeref:enum:OMX_OTHER_FORMATTYPE
OMX_OTHER_FormatBinary	omx/openmax/OMX_Other.h	/^    OMX_OTHER_FormatBinary,   \/**< Arbitrary binary data *\/$/;"	e	enum:OMX_OTHER_FORMATTYPE
OMX_OTHER_FormatKhronosExtensions	omx/openmax/OMX_Other.h	/^    OMX_OTHER_FormatKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_OTHER_FORMATTYPE
OMX_OTHER_FormatMax	omx/openmax/OMX_Other.h	/^    OMX_OTHER_FormatMax = 0x7FFFFFFF$/;"	e	enum:OMX_OTHER_FORMATTYPE
OMX_OTHER_FormatPower	omx/openmax/OMX_Other.h	/^    OMX_OTHER_FormatPower,    \/**< Perhaps used for enabling\/disabling power $/;"	e	enum:OMX_OTHER_FORMATTYPE
OMX_OTHER_FormatStats	omx/openmax/OMX_Other.h	/^    OMX_OTHER_FormatStats,    \/**< Could be things such as frame rate, frames $/;"	e	enum:OMX_OTHER_FORMATTYPE
OMX_OTHER_FormatTime	omx/openmax/OMX_Other.h	/^    OMX_OTHER_FormatTime = 0, \/**< Transmission of various timestamps, elapsed time, $/;"	e	enum:OMX_OTHER_FORMATTYPE
OMX_OTHER_FormatVendorReserved	omx/openmax/OMX_Other.h	/^    OMX_OTHER_FormatVendorReserved = 1000, \/**< Starting value for vendor specific $/;"	e	enum:OMX_OTHER_FORMATTYPE
OMX_OTHER_FormatVendorStartUnused	omx/openmax/OMX_Other.h	/^    OMX_OTHER_FormatVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_OTHER_FORMATTYPE
OMX_OTHER_PARAM_PORTFORMATTYPE	omx/openmax/OMX_Other.h	/^typedef struct OMX_OTHER_PARAM_PORTFORMATTYPE {$/;"	s
OMX_OTHER_PARAM_PORTFORMATTYPE	omx/openmax/OMX_Other.h	/^} OMX_OTHER_PARAM_PORTFORMATTYPE; $/;"	t	typeref:struct:OMX_OTHER_PARAM_PORTFORMATTYPE
OMX_OTHER_PARAM_PORTFORMATTYPE::eFormat	omx/openmax/OMX_Other.h	/^    OMX_OTHER_FORMATTYPE eFormat; \/**< Type of data expected for this channel *\/$/;"	m	struct:OMX_OTHER_PARAM_PORTFORMATTYPE	access:public
OMX_OTHER_PARAM_PORTFORMATTYPE::nIndex	omx/openmax/OMX_Other.h	/^    OMX_U32 nIndex; \/**< Indicates the enumeration index for the format from 0x0 to N-1 *\/$/;"	m	struct:OMX_OTHER_PARAM_PORTFORMATTYPE	access:public
OMX_OTHER_PARAM_PORTFORMATTYPE::nPortIndex	omx/openmax/OMX_Other.h	/^    OMX_U32 nPortIndex; \/**< Indicates which port to set *\/$/;"	m	struct:OMX_OTHER_PARAM_PORTFORMATTYPE	access:public
OMX_OTHER_PARAM_PORTFORMATTYPE::nSize	omx/openmax/OMX_Other.h	/^    OMX_U32 nSize; \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_OTHER_PARAM_PORTFORMATTYPE	access:public
OMX_OTHER_PARAM_PORTFORMATTYPE::nVersion	omx/openmax/OMX_Other.h	/^    OMX_VERSIONTYPE nVersion; \/**< OMX specification version information *\/$/;"	m	struct:OMX_OTHER_PARAM_PORTFORMATTYPE	access:public
OMX_OTHER_PORTDEFINITIONTYPE	omx/openmax/OMX_Other.h	/^typedef struct OMX_OTHER_PORTDEFINITIONTYPE {$/;"	s
OMX_OTHER_PORTDEFINITIONTYPE	omx/openmax/OMX_Other.h	/^} OMX_OTHER_PORTDEFINITIONTYPE;$/;"	t	typeref:struct:OMX_OTHER_PORTDEFINITIONTYPE
OMX_OTHER_PORTDEFINITIONTYPE::eFormat	omx/openmax/OMX_Other.h	/^    OMX_OTHER_FORMATTYPE eFormat;  \/**< Type of data expected for this channel *\/$/;"	m	struct:OMX_OTHER_PORTDEFINITIONTYPE	access:public
OMX_OUT	omx/openmax/OMX_Types.h	82;"	d
OMX_Other_h	omx/openmax/OMX_Other.h	30;"	d
OMX_PARAM_BUFFERSUPPLIERTYPE	omx/openmax/OMX_Core.h	/^typedef struct OMX_PARAM_BUFFERSUPPLIERTYPE {$/;"	s
OMX_PARAM_BUFFERSUPPLIERTYPE	omx/openmax/OMX_Core.h	/^} OMX_PARAM_BUFFERSUPPLIERTYPE;$/;"	t	typeref:struct:OMX_PARAM_BUFFERSUPPLIERTYPE
OMX_PARAM_BUFFERSUPPLIERTYPE::eBufferSupplier	omx/openmax/OMX_Core.h	/^    OMX_BUFFERSUPPLIERTYPE eBufferSupplier; \/**< buffer supplier *\/$/;"	m	struct:OMX_PARAM_BUFFERSUPPLIERTYPE	access:public
OMX_PARAM_BUFFERSUPPLIERTYPE::nPortIndex	omx/openmax/OMX_Core.h	/^    OMX_U32 nPortIndex; \/**< port that this structure applies to *\/$/;"	m	struct:OMX_PARAM_BUFFERSUPPLIERTYPE	access:public
OMX_PARAM_BUFFERSUPPLIERTYPE::nSize	omx/openmax/OMX_Core.h	/^    OMX_U32 nSize; \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_PARAM_BUFFERSUPPLIERTYPE	access:public
OMX_PARAM_BUFFERSUPPLIERTYPE::nVersion	omx/openmax/OMX_Core.h	/^    OMX_VERSIONTYPE nVersion; \/**< OMX specification version information *\/$/;"	m	struct:OMX_PARAM_BUFFERSUPPLIERTYPE	access:public
OMX_PARAM_COMPONENTROLETYPE	omx/openmax/OMX_Core.h	/^typedef struct OMX_PARAM_COMPONENTROLETYPE {$/;"	s
OMX_PARAM_COMPONENTROLETYPE	omx/openmax/OMX_Core.h	/^} OMX_PARAM_COMPONENTROLETYPE;$/;"	t	typeref:struct:OMX_PARAM_COMPONENTROLETYPE
OMX_PARAM_COMPONENTROLETYPE::cRole	omx/openmax/OMX_Core.h	/^    OMX_U8 cRole[OMX_MAX_STRINGNAME_SIZE];  \/**< name of standard component which defines component role *\/$/;"	m	struct:OMX_PARAM_COMPONENTROLETYPE	access:public
OMX_PARAM_COMPONENTROLETYPE::nSize	omx/openmax/OMX_Core.h	/^    OMX_U32 nSize;              \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_PARAM_COMPONENTROLETYPE	access:public
OMX_PARAM_COMPONENTROLETYPE::nVersion	omx/openmax/OMX_Core.h	/^    OMX_VERSIONTYPE nVersion;   \/**< OMX specification version information *\/$/;"	m	struct:OMX_PARAM_COMPONENTROLETYPE	access:public
OMX_PARAM_CONTENTPIPETYPE	omx/openmax/OMX_Component.h	/^typedef struct OMX_PARAM_CONTENTPIPETYPE$/;"	s
OMX_PARAM_CONTENTPIPETYPE	omx/openmax/OMX_Component.h	/^} OMX_PARAM_CONTENTPIPETYPE;$/;"	t	typeref:struct:OMX_PARAM_CONTENTPIPETYPE
OMX_PARAM_CONTENTPIPETYPE::hPipe	omx/openmax/OMX_Component.h	/^    OMX_HANDLETYPE hPipe;       \/**< The pipe handle*\/$/;"	m	struct:OMX_PARAM_CONTENTPIPETYPE	access:public
OMX_PARAM_CONTENTPIPETYPE::nSize	omx/openmax/OMX_Component.h	/^    OMX_U32 nSize;              \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_PARAM_CONTENTPIPETYPE	access:public
OMX_PARAM_CONTENTPIPETYPE::nVersion	omx/openmax/OMX_Component.h	/^    OMX_VERSIONTYPE nVersion;   \/**< OMX specification version information *\/$/;"	m	struct:OMX_PARAM_CONTENTPIPETYPE	access:public
OMX_PARAM_CONTENTURITYPE	omx/openmax/OMX_Component.h	/^typedef struct OMX_PARAM_CONTENTURITYPE$/;"	s
OMX_PARAM_CONTENTURITYPE	omx/openmax/OMX_Component.h	/^} OMX_PARAM_CONTENTURITYPE;$/;"	t	typeref:struct:OMX_PARAM_CONTENTURITYPE
OMX_PARAM_CONTENTURITYPE::contentURI	omx/openmax/OMX_Component.h	/^    OMX_U8 contentURI[1];               \/**< The URI name *\/$/;"	m	struct:OMX_PARAM_CONTENTURITYPE	access:public
OMX_PARAM_CONTENTURITYPE::nSize	omx/openmax/OMX_Component.h	/^    OMX_U32 nSize;                      \/**< size of the structure in bytes, including$/;"	m	struct:OMX_PARAM_CONTENTURITYPE	access:public
OMX_PARAM_CONTENTURITYPE::nVersion	omx/openmax/OMX_Component.h	/^    OMX_VERSIONTYPE nVersion;           \/**< OMX specification version information *\/$/;"	m	struct:OMX_PARAM_CONTENTURITYPE	access:public
OMX_PARAM_DATAUNITTYPE	omx/openmax/OMX_IVCommon.h	/^typedef struct OMX_PARAM_DATAUNITTYPE {$/;"	s
OMX_PARAM_DATAUNITTYPE	omx/openmax/OMX_IVCommon.h	/^} OMX_PARAM_DATAUNITTYPE;$/;"	t	typeref:struct:OMX_PARAM_DATAUNITTYPE
OMX_PARAM_DATAUNITTYPE::eEncapsulationType	omx/openmax/OMX_IVCommon.h	/^    OMX_DATAUNITENCAPSULATIONTYPE eEncapsulationType;$/;"	m	struct:OMX_PARAM_DATAUNITTYPE	access:public
OMX_PARAM_DATAUNITTYPE::eUnitType	omx/openmax/OMX_IVCommon.h	/^    OMX_DATAUNITTYPE eUnitType;$/;"	m	struct:OMX_PARAM_DATAUNITTYPE	access:public
OMX_PARAM_DATAUNITTYPE::nPortIndex	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;       \/**< Port that this structure applies to *\/$/;"	m	struct:OMX_PARAM_DATAUNITTYPE	access:public
OMX_PARAM_DATAUNITTYPE::nSize	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;            \/**< Size of the structure in bytes *\/$/;"	m	struct:OMX_PARAM_DATAUNITTYPE	access:public
OMX_PARAM_DATAUNITTYPE::nVersion	omx/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion; \/**< OMX specification version information *\/ $/;"	m	struct:OMX_PARAM_DATAUNITTYPE	access:public
OMX_PARAM_DEBLOCKINGTYPE	omx/openmax/OMX_IVCommon.h	/^typedef struct OMX_PARAM_DEBLOCKINGTYPE {$/;"	s
OMX_PARAM_DEBLOCKINGTYPE	omx/openmax/OMX_IVCommon.h	/^} OMX_PARAM_DEBLOCKINGTYPE;$/;"	t	typeref:struct:OMX_PARAM_DEBLOCKINGTYPE
OMX_PARAM_DEBLOCKINGTYPE::bDeblocking	omx/openmax/OMX_IVCommon.h	/^    OMX_BOOL bDeblocking;$/;"	m	struct:OMX_PARAM_DEBLOCKINGTYPE	access:public
OMX_PARAM_DEBLOCKINGTYPE::nPortIndex	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_PARAM_DEBLOCKINGTYPE	access:public
OMX_PARAM_DEBLOCKINGTYPE::nSize	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_PARAM_DEBLOCKINGTYPE	access:public
OMX_PARAM_DEBLOCKINGTYPE::nVersion	omx/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_PARAM_DEBLOCKINGTYPE	access:public
OMX_PARAM_FOCUSSTATUSTYPE	omx/openmax/OMX_IVCommon.h	/^typedef struct OMX_PARAM_FOCUSSTATUSTYPE {$/;"	s
OMX_PARAM_FOCUSSTATUSTYPE	omx/openmax/OMX_IVCommon.h	/^} OMX_PARAM_FOCUSSTATUSTYPE;$/;"	t	typeref:struct:OMX_PARAM_FOCUSSTATUSTYPE
OMX_PARAM_FOCUSSTATUSTYPE::bBottomLeftStatus	omx/openmax/OMX_IVCommon.h	/^    OMX_BOOL bBottomLeftStatus;$/;"	m	struct:OMX_PARAM_FOCUSSTATUSTYPE	access:public
OMX_PARAM_FOCUSSTATUSTYPE::bBottomRightStatus	omx/openmax/OMX_IVCommon.h	/^    OMX_BOOL bBottomRightStatus;$/;"	m	struct:OMX_PARAM_FOCUSSTATUSTYPE	access:public
OMX_PARAM_FOCUSSTATUSTYPE::bBottomStatus	omx/openmax/OMX_IVCommon.h	/^    OMX_BOOL bBottomStatus;$/;"	m	struct:OMX_PARAM_FOCUSSTATUSTYPE	access:public
OMX_PARAM_FOCUSSTATUSTYPE::bCenterStatus	omx/openmax/OMX_IVCommon.h	/^    OMX_BOOL bCenterStatus;$/;"	m	struct:OMX_PARAM_FOCUSSTATUSTYPE	access:public
OMX_PARAM_FOCUSSTATUSTYPE::bLeftStatus	omx/openmax/OMX_IVCommon.h	/^    OMX_BOOL bLeftStatus;$/;"	m	struct:OMX_PARAM_FOCUSSTATUSTYPE	access:public
OMX_PARAM_FOCUSSTATUSTYPE::bRightStatus	omx/openmax/OMX_IVCommon.h	/^    OMX_BOOL bRightStatus;$/;"	m	struct:OMX_PARAM_FOCUSSTATUSTYPE	access:public
OMX_PARAM_FOCUSSTATUSTYPE::bTopLeftStatus	omx/openmax/OMX_IVCommon.h	/^    OMX_BOOL bTopLeftStatus;$/;"	m	struct:OMX_PARAM_FOCUSSTATUSTYPE	access:public
OMX_PARAM_FOCUSSTATUSTYPE::bTopRightStatus	omx/openmax/OMX_IVCommon.h	/^    OMX_BOOL bTopRightStatus;$/;"	m	struct:OMX_PARAM_FOCUSSTATUSTYPE	access:public
OMX_PARAM_FOCUSSTATUSTYPE::bTopStatus	omx/openmax/OMX_IVCommon.h	/^    OMX_BOOL bTopStatus;$/;"	m	struct:OMX_PARAM_FOCUSSTATUSTYPE	access:public
OMX_PARAM_FOCUSSTATUSTYPE::eFocusStatus	omx/openmax/OMX_IVCommon.h	/^    OMX_FOCUSSTATUSTYPE eFocusStatus;$/;"	m	struct:OMX_PARAM_FOCUSSTATUSTYPE	access:public
OMX_PARAM_FOCUSSTATUSTYPE::nPortIndex	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_PARAM_FOCUSSTATUSTYPE	access:public
OMX_PARAM_FOCUSSTATUSTYPE::nSize	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_PARAM_FOCUSSTATUSTYPE	access:public
OMX_PARAM_FOCUSSTATUSTYPE::nVersion	omx/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_PARAM_FOCUSSTATUSTYPE	access:public
OMX_PARAM_INTERLEAVETYPE	omx/openmax/OMX_IVCommon.h	/^typedef struct OMX_PARAM_INTERLEAVETYPE {$/;"	s
OMX_PARAM_INTERLEAVETYPE	omx/openmax/OMX_IVCommon.h	/^} OMX_PARAM_INTERLEAVETYPE;$/;"	t	typeref:struct:OMX_PARAM_INTERLEAVETYPE
OMX_PARAM_INTERLEAVETYPE::bEnable	omx/openmax/OMX_IVCommon.h	/^    OMX_BOOL bEnable;$/;"	m	struct:OMX_PARAM_INTERLEAVETYPE	access:public
OMX_PARAM_INTERLEAVETYPE::nInterleavePortIndex	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nInterleavePortIndex;$/;"	m	struct:OMX_PARAM_INTERLEAVETYPE	access:public
OMX_PARAM_INTERLEAVETYPE::nPortIndex	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_PARAM_INTERLEAVETYPE	access:public
OMX_PARAM_INTERLEAVETYPE::nSize	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_PARAM_INTERLEAVETYPE	access:public
OMX_PARAM_INTERLEAVETYPE::nVersion	omx/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_PARAM_INTERLEAVETYPE	access:public
OMX_PARAM_MACROBLOCKSTYPE	omx/openmax/OMX_Video.h	/^typedef struct OMX_PARAM_MACROBLOCKSTYPE {$/;"	s
OMX_PARAM_MACROBLOCKSTYPE	omx/openmax/OMX_Video.h	/^} OMX_PARAM_MACROBLOCKSTYPE;$/;"	t	typeref:struct:OMX_PARAM_MACROBLOCKSTYPE
OMX_PARAM_MACROBLOCKSTYPE::nMacroblocks	omx/openmax/OMX_Video.h	/^    OMX_U32 nMacroblocks;$/;"	m	struct:OMX_PARAM_MACROBLOCKSTYPE	access:public
OMX_PARAM_MACROBLOCKSTYPE::nPortIndex	omx/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_PARAM_MACROBLOCKSTYPE	access:public
OMX_PARAM_MACROBLOCKSTYPE::nSize	omx/openmax/OMX_Video.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_PARAM_MACROBLOCKSTYPE	access:public
OMX_PARAM_MACROBLOCKSTYPE::nVersion	omx/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_PARAM_MACROBLOCKSTYPE	access:public
OMX_PARAM_METADATAFILTERTYPE	omx/openmax/OMX_Component.h	/^typedef struct OMX_PARAM_METADATAFILTERTYPE $/;"	s
OMX_PARAM_METADATAFILTERTYPE	omx/openmax/OMX_Component.h	/^} OMX_PARAM_METADATAFILTERTYPE; $/;"	t	typeref:struct:OMX_PARAM_METADATAFILTERTYPE
OMX_PARAM_METADATAFILTERTYPE::bAllKeys	omx/openmax/OMX_Component.h	/^    OMX_BOOL bAllKeys;	\/* if true then this structure refers to all keys and $/;"	m	struct:OMX_PARAM_METADATAFILTERTYPE	access:public
OMX_PARAM_METADATAFILTERTYPE::bEnabled	omx/openmax/OMX_Component.h	/^    OMX_BOOL bEnabled;	\/* if true then key is part of filter (e.g. $/;"	m	struct:OMX_PARAM_METADATAFILTERTYPE	access:public
OMX_PARAM_METADATAFILTERTYPE::eKeyCharset	omx/openmax/OMX_Component.h	/^    OMX_METADATACHARSETTYPE eKeyCharset;$/;"	m	struct:OMX_PARAM_METADATAFILTERTYPE	access:public
OMX_PARAM_METADATAFILTERTYPE::nKey	omx/openmax/OMX_Component.h	/^    OMX_U8   nKey [128]; $/;"	m	struct:OMX_PARAM_METADATAFILTERTYPE	access:public
OMX_PARAM_METADATAFILTERTYPE::nKeySizeUsed	omx/openmax/OMX_Component.h	/^    OMX_U32 nKeySizeUsed; $/;"	m	struct:OMX_PARAM_METADATAFILTERTYPE	access:public
OMX_PARAM_METADATAFILTERTYPE::nLanguageCountry	omx/openmax/OMX_Component.h	/^    OMX_U8 nLanguageCountry[128];$/;"	m	struct:OMX_PARAM_METADATAFILTERTYPE	access:public
OMX_PARAM_METADATAFILTERTYPE::nLanguageCountrySizeUsed	omx/openmax/OMX_Component.h	/^    OMX_U32 nLanguageCountrySizeUsed;$/;"	m	struct:OMX_PARAM_METADATAFILTERTYPE	access:public
OMX_PARAM_METADATAFILTERTYPE::nSize	omx/openmax/OMX_Component.h	/^    OMX_U32 nSize; $/;"	m	struct:OMX_PARAM_METADATAFILTERTYPE	access:public
OMX_PARAM_METADATAFILTERTYPE::nVersion	omx/openmax/OMX_Component.h	/^    OMX_VERSIONTYPE nVersion; $/;"	m	struct:OMX_PARAM_METADATAFILTERTYPE	access:public
OMX_PARAM_PORTDEFINITIONTYPE	omx/openmax/OMX_Component.h	/^typedef struct OMX_PARAM_PORTDEFINITIONTYPE {$/;"	s
OMX_PARAM_PORTDEFINITIONTYPE	omx/openmax/OMX_Component.h	/^} OMX_PARAM_PORTDEFINITIONTYPE;$/;"	t	typeref:struct:OMX_PARAM_PORTDEFINITIONTYPE
OMX_PARAM_PORTDEFINITIONTYPE::__anon33::audio	omx/openmax/OMX_Component.h	/^        OMX_AUDIO_PORTDEFINITIONTYPE audio;$/;"	m	union:OMX_PARAM_PORTDEFINITIONTYPE::__anon33	access:public
OMX_PARAM_PORTDEFINITIONTYPE::__anon33::image	omx/openmax/OMX_Component.h	/^        OMX_IMAGE_PORTDEFINITIONTYPE image;$/;"	m	union:OMX_PARAM_PORTDEFINITIONTYPE::__anon33	access:public
OMX_PARAM_PORTDEFINITIONTYPE::__anon33::other	omx/openmax/OMX_Component.h	/^        OMX_OTHER_PORTDEFINITIONTYPE other;$/;"	m	union:OMX_PARAM_PORTDEFINITIONTYPE::__anon33	access:public
OMX_PARAM_PORTDEFINITIONTYPE::__anon33::video	omx/openmax/OMX_Component.h	/^        OMX_VIDEO_PORTDEFINITIONTYPE video;$/;"	m	union:OMX_PARAM_PORTDEFINITIONTYPE::__anon33	access:public
OMX_PARAM_PORTDEFINITIONTYPE::bBuffersContiguous	omx/openmax/OMX_Component.h	/^    OMX_BOOL bBuffersContiguous;$/;"	m	struct:OMX_PARAM_PORTDEFINITIONTYPE	access:public
OMX_PARAM_PORTDEFINITIONTYPE::bEnabled	omx/openmax/OMX_Component.h	/^    OMX_BOOL bEnabled;             \/**< Ports default to enabled and are enabled\/disabled by$/;"	m	struct:OMX_PARAM_PORTDEFINITIONTYPE	access:public
OMX_PARAM_PORTDEFINITIONTYPE::bPopulated	omx/openmax/OMX_Component.h	/^    OMX_BOOL bPopulated;           \/**< Port is populated with all of its buffers as indicated by$/;"	m	struct:OMX_PARAM_PORTDEFINITIONTYPE	access:public
OMX_PARAM_PORTDEFINITIONTYPE::eDir	omx/openmax/OMX_Component.h	/^    OMX_DIRTYPE eDir;              \/**< Direction (input or output) of this port *\/$/;"	m	struct:OMX_PARAM_PORTDEFINITIONTYPE	access:public
OMX_PARAM_PORTDEFINITIONTYPE::eDomain	omx/openmax/OMX_Component.h	/^    OMX_PORTDOMAINTYPE eDomain;    \/**< Domain of the port. Determines the contents of metadata below. *\/$/;"	m	struct:OMX_PARAM_PORTDEFINITIONTYPE	access:public
OMX_PARAM_PORTDEFINITIONTYPE::format	omx/openmax/OMX_Component.h	/^    } format;$/;"	m	struct:OMX_PARAM_PORTDEFINITIONTYPE	typeref:union:OMX_PARAM_PORTDEFINITIONTYPE::__anon33	access:public
OMX_PARAM_PORTDEFINITIONTYPE::nBufferAlignment	omx/openmax/OMX_Component.h	/^    OMX_U32 nBufferAlignment;$/;"	m	struct:OMX_PARAM_PORTDEFINITIONTYPE	access:public
OMX_PARAM_PORTDEFINITIONTYPE::nBufferCountActual	omx/openmax/OMX_Component.h	/^    OMX_U32 nBufferCountActual;    \/**< The actual number of buffers allocated on this port *\/$/;"	m	struct:OMX_PARAM_PORTDEFINITIONTYPE	access:public
OMX_PARAM_PORTDEFINITIONTYPE::nBufferCountMin	omx/openmax/OMX_Component.h	/^    OMX_U32 nBufferCountMin;       \/**< The minimum number of buffers this port requires *\/$/;"	m	struct:OMX_PARAM_PORTDEFINITIONTYPE	access:public
OMX_PARAM_PORTDEFINITIONTYPE::nBufferSize	omx/openmax/OMX_Component.h	/^    OMX_U32 nBufferSize;           \/**< Size, in bytes, for buffers to be used for this channel *\/$/;"	m	struct:OMX_PARAM_PORTDEFINITIONTYPE	access:public
OMX_PARAM_PORTDEFINITIONTYPE::nPortIndex	omx/openmax/OMX_Component.h	/^    OMX_U32 nPortIndex;            \/**< Port number the structure applies to *\/$/;"	m	struct:OMX_PARAM_PORTDEFINITIONTYPE	access:public
OMX_PARAM_PORTDEFINITIONTYPE::nSize	omx/openmax/OMX_Component.h	/^    OMX_U32 nSize;                 \/**< Size of the structure in bytes *\/$/;"	m	struct:OMX_PARAM_PORTDEFINITIONTYPE	access:public
OMX_PARAM_PORTDEFINITIONTYPE::nVersion	omx/openmax/OMX_Component.h	/^    OMX_VERSIONTYPE nVersion;      \/**< OMX specification version information *\/$/;"	m	struct:OMX_PARAM_PORTDEFINITIONTYPE	access:public
OMX_PARAM_SENSORMODETYPE	omx/openmax/OMX_IVCommon.h	/^typedef struct OMX_PARAM_SENSORMODETYPE {$/;"	s
OMX_PARAM_SENSORMODETYPE	omx/openmax/OMX_IVCommon.h	/^} OMX_PARAM_SENSORMODETYPE;$/;"	t	typeref:struct:OMX_PARAM_SENSORMODETYPE
OMX_PARAM_SENSORMODETYPE::bOneShot	omx/openmax/OMX_IVCommon.h	/^    OMX_BOOL bOneShot;$/;"	m	struct:OMX_PARAM_SENSORMODETYPE	access:public
OMX_PARAM_SENSORMODETYPE::nFrameRate	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nFrameRate;$/;"	m	struct:OMX_PARAM_SENSORMODETYPE	access:public
OMX_PARAM_SENSORMODETYPE::nPortIndex	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_PARAM_SENSORMODETYPE	access:public
OMX_PARAM_SENSORMODETYPE::nSize	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_PARAM_SENSORMODETYPE	access:public
OMX_PARAM_SENSORMODETYPE::nVersion	omx/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_PARAM_SENSORMODETYPE	access:public
OMX_PARAM_SENSORMODETYPE::sFrameSize	omx/openmax/OMX_IVCommon.h	/^    OMX_FRAMESIZETYPE sFrameSize;$/;"	m	struct:OMX_PARAM_SENSORMODETYPE	access:public
OMX_PARAM_SUSPENSIONPOLICYTYPE	omx/openmax/OMX_Component.h	/^typedef struct OMX_PARAM_SUSPENSIONPOLICYTYPE {$/;"	s
OMX_PARAM_SUSPENSIONPOLICYTYPE	omx/openmax/OMX_Component.h	/^} OMX_PARAM_SUSPENSIONPOLICYTYPE;$/;"	t	typeref:struct:OMX_PARAM_SUSPENSIONPOLICYTYPE
OMX_PARAM_SUSPENSIONPOLICYTYPE::ePolicy	omx/openmax/OMX_Component.h	/^    OMX_SUSPENSIONPOLICYTYPE ePolicy;$/;"	m	struct:OMX_PARAM_SUSPENSIONPOLICYTYPE	access:public
OMX_PARAM_SUSPENSIONPOLICYTYPE::nSize	omx/openmax/OMX_Component.h	/^    OMX_U32 nSize;                  $/;"	m	struct:OMX_PARAM_SUSPENSIONPOLICYTYPE	access:public
OMX_PARAM_SUSPENSIONPOLICYTYPE::nVersion	omx/openmax/OMX_Component.h	/^    OMX_VERSIONTYPE nVersion;        $/;"	m	struct:OMX_PARAM_SUSPENSIONPOLICYTYPE	access:public
OMX_PARAM_SUSPENSIONTYPE	omx/openmax/OMX_Component.h	/^typedef struct OMX_PARAM_SUSPENSIONTYPE {$/;"	s
OMX_PARAM_SUSPENSIONTYPE	omx/openmax/OMX_Component.h	/^} OMX_PARAM_SUSPENSIONTYPE ;$/;"	t	typeref:struct:OMX_PARAM_SUSPENSIONTYPE
OMX_PARAM_SUSPENSIONTYPE::eType	omx/openmax/OMX_Component.h	/^    OMX_SUSPENSIONTYPE eType;             $/;"	m	struct:OMX_PARAM_SUSPENSIONTYPE	access:public
OMX_PARAM_SUSPENSIONTYPE::nSize	omx/openmax/OMX_Component.h	/^    OMX_U32 nSize;                  $/;"	m	struct:OMX_PARAM_SUSPENSIONTYPE	access:public
OMX_PARAM_SUSPENSIONTYPE::nVersion	omx/openmax/OMX_Component.h	/^    OMX_VERSIONTYPE nVersion;       $/;"	m	struct:OMX_PARAM_SUSPENSIONTYPE	access:public
OMX_PARAM_U32TYPE	omx/openmax/OMX_Component.h	/^typedef struct OMX_PARAM_U32TYPE { $/;"	s
OMX_PARAM_U32TYPE	omx/openmax/OMX_Component.h	/^} OMX_PARAM_U32TYPE;$/;"	t	typeref:struct:OMX_PARAM_U32TYPE
OMX_PARAM_U32TYPE::nPortIndex	omx/openmax/OMX_Component.h	/^    OMX_U32 nPortIndex;               \/**< port that this structure applies to *\/ $/;"	m	struct:OMX_PARAM_U32TYPE	access:public
OMX_PARAM_U32TYPE::nSize	omx/openmax/OMX_Component.h	/^    OMX_U32 nSize;                    \/**< Size of this structure, in Bytes *\/ $/;"	m	struct:OMX_PARAM_U32TYPE	access:public
OMX_PARAM_U32TYPE::nU32	omx/openmax/OMX_Component.h	/^    OMX_U32 nU32;                     \/**< U32 value *\/$/;"	m	struct:OMX_PARAM_U32TYPE	access:public
OMX_PARAM_U32TYPE::nVersion	omx/openmax/OMX_Component.h	/^    OMX_VERSIONTYPE nVersion;         \/**< OMX specification version information *\/ $/;"	m	struct:OMX_PARAM_U32TYPE	access:public
OMX_PORTDOMAINTYPE	omx/openmax/OMX_Component.h	/^typedef enum OMX_PORTDOMAINTYPE { $/;"	g
OMX_PORTDOMAINTYPE	omx/openmax/OMX_Component.h	/^} OMX_PORTDOMAINTYPE;$/;"	t	typeref:enum:OMX_PORTDOMAINTYPE
OMX_PORTTUNNELFLAG_READONLY	omx/openmax/OMX_Core.h	627;"	d
OMX_PORT_PARAM_TYPE	omx/openmax/OMX_Core.h	/^typedef struct OMX_PORT_PARAM_TYPE {$/;"	s
OMX_PORT_PARAM_TYPE	omx/openmax/OMX_Core.h	/^} OMX_PORT_PARAM_TYPE; $/;"	t	typeref:struct:OMX_PORT_PARAM_TYPE
OMX_PORT_PARAM_TYPE::nPorts	omx/openmax/OMX_Core.h	/^    OMX_U32 nPorts;             \/**< The number of ports for this component *\/$/;"	m	struct:OMX_PORT_PARAM_TYPE	access:public
OMX_PORT_PARAM_TYPE::nSize	omx/openmax/OMX_Core.h	/^    OMX_U32 nSize;              \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_PORT_PARAM_TYPE	access:public
OMX_PORT_PARAM_TYPE::nStartPortNumber	omx/openmax/OMX_Core.h	/^    OMX_U32 nStartPortNumber;   \/** first port number for this type of port *\/$/;"	m	struct:OMX_PORT_PARAM_TYPE	access:public
OMX_PORT_PARAM_TYPE::nVersion	omx/openmax/OMX_Core.h	/^    OMX_VERSIONTYPE nVersion;   \/**< OMX specification version information *\/$/;"	m	struct:OMX_PORT_PARAM_TYPE	access:public
OMX_PRIORITYMGMTTYPE	omx/openmax/OMX_Core.h	/^typedef struct OMX_PRIORITYMGMTTYPE {$/;"	s
OMX_PRIORITYMGMTTYPE	omx/openmax/OMX_Core.h	/^} OMX_PRIORITYMGMTTYPE;$/;"	t	typeref:struct:OMX_PRIORITYMGMTTYPE
OMX_PRIORITYMGMTTYPE::nGroupID	omx/openmax/OMX_Core.h	/^ OMX_U32 nGroupID;                  \/**< ID of the component group *\/$/;"	m	struct:OMX_PRIORITYMGMTTYPE	access:public
OMX_PRIORITYMGMTTYPE::nGroupPriority	omx/openmax/OMX_Core.h	/^ OMX_U32 nGroupPriority;            \/**< Priority of the component group *\/$/;"	m	struct:OMX_PRIORITYMGMTTYPE	access:public
OMX_PRIORITYMGMTTYPE::nSize	omx/openmax/OMX_Core.h	/^ OMX_U32 nSize;             \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_PRIORITYMGMTTYPE	access:public
OMX_PRIORITYMGMTTYPE::nVersion	omx/openmax/OMX_Core.h	/^ OMX_VERSIONTYPE nVersion;  \/**< OMX specification version information *\/$/;"	m	struct:OMX_PRIORITYMGMTTYPE	access:public
OMX_PTR	omx/openmax/OMX_Types.h	/^typedef void* OMX_PTR;$/;"	t
OMX_PortDomainAudio	omx/openmax/OMX_Component.h	/^    OMX_PortDomainAudio, $/;"	e	enum:OMX_PORTDOMAINTYPE
OMX_PortDomainImage	omx/openmax/OMX_Component.h	/^    OMX_PortDomainImage, $/;"	e	enum:OMX_PORTDOMAINTYPE
OMX_PortDomainKhronosExtensions	omx/openmax/OMX_Component.h	/^    OMX_PortDomainKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_PORTDOMAINTYPE
OMX_PortDomainMax	omx/openmax/OMX_Component.h	/^    OMX_PortDomainMax = 0x7ffffff$/;"	e	enum:OMX_PORTDOMAINTYPE
OMX_PortDomainOther	omx/openmax/OMX_Component.h	/^    OMX_PortDomainOther,$/;"	e	enum:OMX_PORTDOMAINTYPE
OMX_PortDomainVendorStartUnused	omx/openmax/OMX_Component.h	/^    OMX_PortDomainVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_PORTDOMAINTYPE
OMX_PortDomainVideo	omx/openmax/OMX_Component.h	/^    OMX_PortDomainVideo, $/;"	e	enum:OMX_PORTDOMAINTYPE
OMX_RESOURCECONCEALMENTTYPE	omx/openmax/OMX_Component.h	/^typedef struct OMX_RESOURCECONCEALMENTTYPE {$/;"	s
OMX_RESOURCECONCEALMENTTYPE	omx/openmax/OMX_Component.h	/^} OMX_RESOURCECONCEALMENTTYPE;$/;"	t	typeref:struct:OMX_RESOURCECONCEALMENTTYPE
OMX_RESOURCECONCEALMENTTYPE::bResourceConcealmentForbidden	omx/openmax/OMX_Component.h	/^    OMX_BOOL bResourceConcealmentForbidden; \/**< disallow the use of resource concealment $/;"	m	struct:OMX_RESOURCECONCEALMENTTYPE	access:public
OMX_RESOURCECONCEALMENTTYPE::nSize	omx/openmax/OMX_Component.h	/^    OMX_U32 nSize;             \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_RESOURCECONCEALMENTTYPE	access:public
OMX_RESOURCECONCEALMENTTYPE::nVersion	omx/openmax/OMX_Component.h	/^    OMX_VERSIONTYPE nVersion;  \/**< OMX specification version information *\/$/;"	m	struct:OMX_RESOURCECONCEALMENTTYPE	access:public
OMX_S16	omx/openmax/OMX_Types.h	/^typedef signed short OMX_S16;$/;"	t
OMX_S32	omx/openmax/OMX_Types.h	/^typedef signed long OMX_S32;$/;"	t
OMX_S64	omx/openmax/OMX_Types.h	/^typedef signed   __int64  OMX_S64;$/;"	t
OMX_S64	omx/openmax/OMX_Types.h	/^typedef signed long long OMX_S64;$/;"	t
OMX_S8	omx/openmax/OMX_Types.h	/^typedef signed char OMX_S8;$/;"	t
OMX_STATETYPE	omx/openmax/OMX_Core.h	/^typedef enum OMX_STATETYPE$/;"	g
OMX_STATETYPE	omx/openmax/OMX_Core.h	/^} OMX_STATETYPE;$/;"	t	typeref:enum:OMX_STATETYPE
OMX_STRING	omx/openmax/OMX_Types.h	/^typedef char* OMX_STRING;$/;"	t
OMX_SUSPENSIONPOLICYTYPE	omx/openmax/OMX_Component.h	/^typedef enum OMX_SUSPENSIONPOLICYTYPE {$/;"	g
OMX_SUSPENSIONPOLICYTYPE	omx/openmax/OMX_Component.h	/^} OMX_SUSPENSIONPOLICYTYPE;$/;"	t	typeref:enum:OMX_SUSPENSIONPOLICYTYPE
OMX_SUSPENSIONTYPE	omx/openmax/OMX_Component.h	/^typedef enum OMX_SUSPENSIONTYPE {$/;"	g
OMX_SUSPENSIONTYPE	omx/openmax/OMX_Component.h	/^} OMX_SUSPENSIONTYPE;$/;"	t	typeref:enum:OMX_SUSPENSIONTYPE
OMX_SendCommand	omx/openmax/OMX_Core.h	745;"	d
OMX_SetConfig	omx/openmax/OMX_Core.h	897;"	d
OMX_SetParameter	omx/openmax/OMX_Core.h	825;"	d
OMX_SetupTunnel	omx/openmax/OMX_Core.h	/^OMX_API OMX_ERRORTYPE OMX_APIENTRY OMX_SetupTunnel($/;"	p	signature:( OMX_IN OMX_HANDLETYPE hOutput, OMX_IN OMX_U32 nPortOutput, OMX_IN OMX_HANDLETYPE hInput, OMX_IN OMX_U32 nPortInput)
OMX_StateExecuting	omx/openmax/OMX_Core.h	/^    OMX_StateExecuting,   \/**< component has accepted the start command and$/;"	e	enum:OMX_STATETYPE
OMX_StateIdle	omx/openmax/OMX_Core.h	/^    OMX_StateIdle,        \/**< component initialization has been completed$/;"	e	enum:OMX_STATETYPE
OMX_StateInvalid	omx/openmax/OMX_Core.h	/^    OMX_StateInvalid,      \/**< component has detected that it's internal data $/;"	e	enum:OMX_STATETYPE
OMX_StateKhronosExtensions	omx/openmax/OMX_Core.h	/^    OMX_StateKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_STATETYPE
OMX_StateLoaded	omx/openmax/OMX_Core.h	/^    OMX_StateLoaded,      \/**< component has been loaded but has not completed$/;"	e	enum:OMX_STATETYPE
OMX_StateMax	omx/openmax/OMX_Core.h	/^    OMX_StateMax = 0X7FFFFFFF$/;"	e	enum:OMX_STATETYPE
OMX_StatePause	omx/openmax/OMX_Core.h	/^    OMX_StatePause,       \/**< component has received pause command *\/$/;"	e	enum:OMX_STATETYPE
OMX_StateVendorStartUnused	omx/openmax/OMX_Core.h	/^    OMX_StateVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_STATETYPE
OMX_StateWaitForResources	omx/openmax/OMX_Core.h	/^    OMX_StateWaitForResources, \/**< component is waiting for resources, either after $/;"	e	enum:OMX_STATETYPE
OMX_SuspendMax	omx/openmax/OMX_Component.h	/^    OMX_SuspendMax = 0x7FFFFFFF$/;"	e	enum:OMX_SUSPENSIONTYPE
OMX_Suspended	omx/openmax/OMX_Component.h	/^    OMX_Suspended,    \/**< component is suspended *\/$/;"	e	enum:OMX_SUSPENSIONTYPE
OMX_SuspensionDisabled	omx/openmax/OMX_Component.h	/^    OMX_SuspensionDisabled, \/**< No suspension; v1.0 behavior *\/$/;"	e	enum:OMX_SUSPENSIONPOLICYTYPE
OMX_SuspensionEnabled	omx/openmax/OMX_Component.h	/^    OMX_SuspensionEnabled,  \/**< Suspension allowed *\/   $/;"	e	enum:OMX_SUSPENSIONPOLICYTYPE
OMX_SuspensionKhronosExtensions	omx/openmax/OMX_Component.h	/^    OMX_SuspensionKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_SUSPENSIONTYPE
OMX_SuspensionPolicyKhronosExtensions	omx/openmax/OMX_Component.h	/^    OMX_SuspensionPolicyKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_SUSPENSIONPOLICYTYPE
OMX_SuspensionPolicyMax	omx/openmax/OMX_Component.h	/^    OMX_SuspensionPolicyMax = 0x7fffffff$/;"	e	enum:OMX_SUSPENSIONPOLICYTYPE
OMX_SuspensionPolicyStartUnused	omx/openmax/OMX_Component.h	/^    OMX_SuspensionPolicyStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_SUSPENSIONPOLICYTYPE
OMX_SuspensionVendorStartUnused	omx/openmax/OMX_Component.h	/^    OMX_SuspensionVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_SUSPENSIONTYPE
OMX_TICKS	omx/openmax/OMX_Types.h	/^typedef OMX_S64 OMX_TICKS;$/;"	t
OMX_TICKS	omx/openmax/OMX_Types.h	/^typedef struct OMX_TICKS$/;"	s
OMX_TICKS	omx/openmax/OMX_Types.h	/^} OMX_TICKS;$/;"	t	typeref:struct:OMX_TICKS
OMX_TICKS::nHighPart	omx/openmax/OMX_Types.h	/^    OMX_U32 nHighPart;   \/** high bits of the signed 64 bit tick value *\/$/;"	m	struct:OMX_TICKS	access:public
OMX_TICKS::nLowPart	omx/openmax/OMX_Types.h	/^    OMX_U32 nLowPart;    \/** low bits of the signed 64 bit tick value *\/$/;"	m	struct:OMX_TICKS	access:public
OMX_TICKS_PER_SECOND	omx/openmax/OMX_Types.h	290;"	d
OMX_TIME_CLOCKSTATE	omx/openmax/OMX_Other.h	/^typedef enum OMX_TIME_CLOCKSTATE {$/;"	g
OMX_TIME_CLOCKSTATE	omx/openmax/OMX_Other.h	/^} OMX_TIME_CLOCKSTATE;$/;"	t	typeref:enum:OMX_TIME_CLOCKSTATE
OMX_TIME_CONFIG_ACTIVEREFCLOCKTYPE	omx/openmax/OMX_Other.h	/^typedef struct OMX_TIME_CONFIG_ACTIVEREFCLOCKTYPE {$/;"	s
OMX_TIME_CONFIG_ACTIVEREFCLOCKTYPE	omx/openmax/OMX_Other.h	/^} OMX_TIME_CONFIG_ACTIVEREFCLOCKTYPE;$/;"	t	typeref:struct:OMX_TIME_CONFIG_ACTIVEREFCLOCKTYPE
OMX_TIME_CONFIG_ACTIVEREFCLOCKTYPE::eClock	omx/openmax/OMX_Other.h	/^    OMX_TIME_REFCLOCKTYPE eClock;   \/**< Reference clock used to compute media time *\/                        $/;"	m	struct:OMX_TIME_CONFIG_ACTIVEREFCLOCKTYPE	access:public
OMX_TIME_CONFIG_ACTIVEREFCLOCKTYPE::nSize	omx/openmax/OMX_Other.h	/^    OMX_U32 nSize;                  \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_TIME_CONFIG_ACTIVEREFCLOCKTYPE	access:public
OMX_TIME_CONFIG_ACTIVEREFCLOCKTYPE::nVersion	omx/openmax/OMX_Other.h	/^    OMX_VERSIONTYPE nVersion;       \/**< OMX specification version information *\/$/;"	m	struct:OMX_TIME_CONFIG_ACTIVEREFCLOCKTYPE	access:public
OMX_TIME_CONFIG_CLOCKSTATETYPE	omx/openmax/OMX_Other.h	/^typedef struct OMX_TIME_CONFIG_CLOCKSTATETYPE {$/;"	s
OMX_TIME_CONFIG_CLOCKSTATETYPE	omx/openmax/OMX_Other.h	/^} OMX_TIME_CONFIG_CLOCKSTATETYPE;$/;"	t	typeref:struct:OMX_TIME_CONFIG_CLOCKSTATETYPE
OMX_TIME_CONFIG_CLOCKSTATETYPE::eState	omx/openmax/OMX_Other.h	/^    OMX_TIME_CLOCKSTATE eState; \/**< State of the media time. *\/$/;"	m	struct:OMX_TIME_CONFIG_CLOCKSTATETYPE	access:public
OMX_TIME_CONFIG_CLOCKSTATETYPE::nOffset	omx/openmax/OMX_Other.h	/^    OMX_TICKS nOffset;          \/**< Time to offset the media time by $/;"	m	struct:OMX_TIME_CONFIG_CLOCKSTATETYPE	access:public
OMX_TIME_CONFIG_CLOCKSTATETYPE::nSize	omx/openmax/OMX_Other.h	/^    OMX_U32 nSize;              \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_TIME_CONFIG_CLOCKSTATETYPE	access:public
OMX_TIME_CONFIG_CLOCKSTATETYPE::nStartTime	omx/openmax/OMX_Other.h	/^    OMX_TICKS nStartTime;       \/**< Start time of the media time. *\/$/;"	m	struct:OMX_TIME_CONFIG_CLOCKSTATETYPE	access:public
OMX_TIME_CONFIG_CLOCKSTATETYPE::nVersion	omx/openmax/OMX_Other.h	/^    OMX_VERSIONTYPE nVersion;   \/**< OMX specification version $/;"	m	struct:OMX_TIME_CONFIG_CLOCKSTATETYPE	access:public
OMX_TIME_CONFIG_CLOCKSTATETYPE::nWaitMask	omx/openmax/OMX_Other.h	/^    OMX_U32 nWaitMask;          \/**< Mask of OMX_CLOCKPORT values. *\/$/;"	m	struct:OMX_TIME_CONFIG_CLOCKSTATETYPE	access:public
OMX_TIME_CONFIG_MEDIATIMEREQUESTTYPE	omx/openmax/OMX_Other.h	/^typedef struct OMX_TIME_CONFIG_MEDIATIMEREQUESTTYPE {$/;"	s
OMX_TIME_CONFIG_MEDIATIMEREQUESTTYPE	omx/openmax/OMX_Other.h	/^} OMX_TIME_CONFIG_MEDIATIMEREQUESTTYPE;$/;"	t	typeref:struct:OMX_TIME_CONFIG_MEDIATIMEREQUESTTYPE
OMX_TIME_CONFIG_MEDIATIMEREQUESTTYPE::nMediaTimestamp	omx/openmax/OMX_Other.h	/^    OMX_TICKS nMediaTimestamp;  \/**< Media timestamp requested.*\/ $/;"	m	struct:OMX_TIME_CONFIG_MEDIATIMEREQUESTTYPE	access:public
OMX_TIME_CONFIG_MEDIATIMEREQUESTTYPE::nOffset	omx/openmax/OMX_Other.h	/^    OMX_TICKS nOffset;          \/**< Amount of wall clock time by which this$/;"	m	struct:OMX_TIME_CONFIG_MEDIATIMEREQUESTTYPE	access:public
OMX_TIME_CONFIG_MEDIATIMEREQUESTTYPE::nPortIndex	omx/openmax/OMX_Other.h	/^    OMX_U32 nPortIndex;         \/**< port that this structure applies to *\/$/;"	m	struct:OMX_TIME_CONFIG_MEDIATIMEREQUESTTYPE	access:public
OMX_TIME_CONFIG_MEDIATIMEREQUESTTYPE::nSize	omx/openmax/OMX_Other.h	/^    OMX_U32 nSize;              \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_TIME_CONFIG_MEDIATIMEREQUESTTYPE	access:public
OMX_TIME_CONFIG_MEDIATIMEREQUESTTYPE::nVersion	omx/openmax/OMX_Other.h	/^    OMX_VERSIONTYPE nVersion;   \/**< OMX specification version information *\/$/;"	m	struct:OMX_TIME_CONFIG_MEDIATIMEREQUESTTYPE	access:public
OMX_TIME_CONFIG_MEDIATIMEREQUESTTYPE::pClientPrivate	omx/openmax/OMX_Other.h	/^    OMX_PTR pClientPrivate;     \/**< Client private data to disabiguate this media time $/;"	m	struct:OMX_TIME_CONFIG_MEDIATIMEREQUESTTYPE	access:public
OMX_TIME_CONFIG_SCALETYPE	omx/openmax/OMX_Other.h	/^typedef struct OMX_TIME_CONFIG_SCALETYPE {$/;"	s
OMX_TIME_CONFIG_SCALETYPE	omx/openmax/OMX_Other.h	/^} OMX_TIME_CONFIG_SCALETYPE;$/;"	t	typeref:struct:OMX_TIME_CONFIG_SCALETYPE
OMX_TIME_CONFIG_SCALETYPE::nSize	omx/openmax/OMX_Other.h	/^    OMX_U32 nSize;                  \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_TIME_CONFIG_SCALETYPE	access:public
OMX_TIME_CONFIG_SCALETYPE::nVersion	omx/openmax/OMX_Other.h	/^    OMX_VERSIONTYPE nVersion;       \/**< OMX specification version information *\/$/;"	m	struct:OMX_TIME_CONFIG_SCALETYPE	access:public
OMX_TIME_CONFIG_SCALETYPE::xScale	omx/openmax/OMX_Other.h	/^    OMX_S32 xScale;                 \/**< This is a value in Q16 format which is used for$/;"	m	struct:OMX_TIME_CONFIG_SCALETYPE	access:public
OMX_TIME_CONFIG_SEEKMODETYPE	omx/openmax/OMX_Other.h	/^typedef struct OMX_TIME_CONFIG_SEEKMODETYPE {$/;"	s
OMX_TIME_CONFIG_SEEKMODETYPE	omx/openmax/OMX_Other.h	/^} OMX_TIME_CONFIG_SEEKMODETYPE;$/;"	t	typeref:struct:OMX_TIME_CONFIG_SEEKMODETYPE
OMX_TIME_CONFIG_SEEKMODETYPE::eType	omx/openmax/OMX_Other.h	/^    OMX_TIME_SEEKMODETYPE eType;    \/**< The seek mode *\/$/;"	m	struct:OMX_TIME_CONFIG_SEEKMODETYPE	access:public
OMX_TIME_CONFIG_SEEKMODETYPE::nSize	omx/openmax/OMX_Other.h	/^    OMX_U32 nSize;                  \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_TIME_CONFIG_SEEKMODETYPE	access:public
OMX_TIME_CONFIG_SEEKMODETYPE::nVersion	omx/openmax/OMX_Other.h	/^    OMX_VERSIONTYPE nVersion;       \/**< OMX specification version information *\/$/;"	m	struct:OMX_TIME_CONFIG_SEEKMODETYPE	access:public
OMX_TIME_CONFIG_TIMESTAMPTYPE	omx/openmax/OMX_Other.h	/^typedef struct OMX_TIME_CONFIG_TIMESTAMPTYPE {$/;"	s
OMX_TIME_CONFIG_TIMESTAMPTYPE	omx/openmax/OMX_Other.h	/^} OMX_TIME_CONFIG_TIMESTAMPTYPE;  $/;"	t	typeref:struct:OMX_TIME_CONFIG_TIMESTAMPTYPE
OMX_TIME_CONFIG_TIMESTAMPTYPE::nPortIndex	omx/openmax/OMX_Other.h	/^    OMX_U32 nPortIndex;     \/**< port that this structure applies to *\/$/;"	m	struct:OMX_TIME_CONFIG_TIMESTAMPTYPE	access:public
OMX_TIME_CONFIG_TIMESTAMPTYPE::nSize	omx/openmax/OMX_Other.h	/^    OMX_U32 nSize;               \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_TIME_CONFIG_TIMESTAMPTYPE	access:public
OMX_TIME_CONFIG_TIMESTAMPTYPE::nTimestamp	omx/openmax/OMX_Other.h	/^    OMX_TICKS nTimestamp;  	     \/**< timestamp .*\/ $/;"	m	struct:OMX_TIME_CONFIG_TIMESTAMPTYPE	access:public
OMX_TIME_CONFIG_TIMESTAMPTYPE::nVersion	omx/openmax/OMX_Other.h	/^    OMX_VERSIONTYPE nVersion;    \/**< OMX specification version$/;"	m	struct:OMX_TIME_CONFIG_TIMESTAMPTYPE	access:public
OMX_TIME_ClockStateKhronosExtensions	omx/openmax/OMX_Other.h	/^      OMX_TIME_ClockStateKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_TIME_CLOCKSTATE
OMX_TIME_ClockStateMax	omx/openmax/OMX_Other.h	/^      OMX_TIME_ClockStateMax = 0x7FFFFFFF$/;"	e	enum:OMX_TIME_CLOCKSTATE
OMX_TIME_ClockStateRunning	omx/openmax/OMX_Other.h	/^      OMX_TIME_ClockStateRunning,             \/**< Clock running. *\/$/;"	e	enum:OMX_TIME_CLOCKSTATE
OMX_TIME_ClockStateStopped	omx/openmax/OMX_Other.h	/^      OMX_TIME_ClockStateStopped,             \/**< Clock stopped. *\/$/;"	e	enum:OMX_TIME_CLOCKSTATE
OMX_TIME_ClockStateVendorStartUnused	omx/openmax/OMX_Other.h	/^      OMX_TIME_ClockStateVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_TIME_CLOCKSTATE
OMX_TIME_ClockStateWaitingForStartTime	omx/openmax/OMX_Other.h	/^      OMX_TIME_ClockStateWaitingForStartTime, \/**< Clock waiting until the $/;"	e	enum:OMX_TIME_CLOCKSTATE
OMX_TIME_MEDIATIMETYPE	omx/openmax/OMX_Other.h	/^typedef struct OMX_TIME_MEDIATIMETYPE {$/;"	s
OMX_TIME_MEDIATIMETYPE	omx/openmax/OMX_Other.h	/^} OMX_TIME_MEDIATIMETYPE;  $/;"	t	typeref:struct:OMX_TIME_MEDIATIMETYPE
OMX_TIME_MEDIATIMETYPE::eState	omx/openmax/OMX_Other.h	/^    OMX_TIME_CLOCKSTATE eState;     \/* Seeking Change. Added 7\/12.*\/$/;"	m	struct:OMX_TIME_MEDIATIMETYPE	access:public
OMX_TIME_MEDIATIMETYPE::eUpdateType	omx/openmax/OMX_Other.h	/^    OMX_TIME_UPDATETYPE eUpdateType; \/**< Reason for the update *\/$/;"	m	struct:OMX_TIME_MEDIATIMETYPE	access:public
OMX_TIME_MEDIATIMETYPE::nClientPrivate	omx/openmax/OMX_Other.h	/^    OMX_U32 nClientPrivate;         \/**< Client private data to disabiguate this media time $/;"	m	struct:OMX_TIME_MEDIATIMETYPE	access:public
OMX_TIME_MEDIATIMETYPE::nMediaTimestamp	omx/openmax/OMX_Other.h	/^    OMX_TICKS nMediaTimestamp;      \/**< Media time requested. If no media time was $/;"	m	struct:OMX_TIME_MEDIATIMETYPE	access:public
OMX_TIME_MEDIATIMETYPE::nOffset	omx/openmax/OMX_Other.h	/^    OMX_TICKS nOffset;              \/**< Amount of wall clock time by which this$/;"	m	struct:OMX_TIME_MEDIATIMETYPE	access:public
OMX_TIME_MEDIATIMETYPE::nSize	omx/openmax/OMX_Other.h	/^    OMX_U32 nSize;                  \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_TIME_MEDIATIMETYPE	access:public
OMX_TIME_MEDIATIMETYPE::nVersion	omx/openmax/OMX_Other.h	/^    OMX_VERSIONTYPE nVersion;       \/**< OMX specification version information *\/$/;"	m	struct:OMX_TIME_MEDIATIMETYPE	access:public
OMX_TIME_MEDIATIMETYPE::nWallTimeAtMediaTime	omx/openmax/OMX_Other.h	/^    OMX_TICKS nWallTimeAtMediaTime; \/**< Wall time corresponding to nMediaTimeStamp.$/;"	m	struct:OMX_TIME_MEDIATIMETYPE	access:public
OMX_TIME_MEDIATIMETYPE::xScale	omx/openmax/OMX_Other.h	/^    OMX_S32 xScale;                 \/**< Current media time scale in Q16 format. *\/$/;"	m	struct:OMX_TIME_MEDIATIMETYPE	access:public
OMX_TIME_REFCLOCKTYPE	omx/openmax/OMX_Other.h	/^typedef enum OMX_TIME_REFCLOCKTYPE {$/;"	g
OMX_TIME_REFCLOCKTYPE	omx/openmax/OMX_Other.h	/^} OMX_TIME_REFCLOCKTYPE;$/;"	t	typeref:enum:OMX_TIME_REFCLOCKTYPE
OMX_TIME_RefClockAudio	omx/openmax/OMX_Other.h	/^      OMX_TIME_RefClockAudio,	\/**< Use references sent through OMX_IndexConfigTimeCurrentAudioReference *\/$/;"	e	enum:OMX_TIME_REFCLOCKTYPE
OMX_TIME_RefClockKhronosExtensions	omx/openmax/OMX_Other.h	/^      OMX_TIME_RefClockKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_TIME_REFCLOCKTYPE
OMX_TIME_RefClockMax	omx/openmax/OMX_Other.h	/^      OMX_TIME_RefClockMax = 0x7FFFFFFF$/;"	e	enum:OMX_TIME_REFCLOCKTYPE
OMX_TIME_RefClockNone	omx/openmax/OMX_Other.h	/^      OMX_TIME_RefClockNone,    \/**< Use no references. *\/$/;"	e	enum:OMX_TIME_REFCLOCKTYPE
OMX_TIME_RefClockVendorStartUnused	omx/openmax/OMX_Other.h	/^      OMX_TIME_RefClockVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_TIME_REFCLOCKTYPE
OMX_TIME_RefClockVideo	omx/openmax/OMX_Other.h	/^      OMX_TIME_RefClockVideo,   \/**< Use references sent through OMX_IndexConfigTimeCurrentVideoReference *\/$/;"	e	enum:OMX_TIME_REFCLOCKTYPE
OMX_TIME_SEEKMODETYPE	omx/openmax/OMX_Other.h	/^typedef enum OMX_TIME_SEEKMODETYPE {$/;"	g
OMX_TIME_SEEKMODETYPE	omx/openmax/OMX_Other.h	/^} OMX_TIME_SEEKMODETYPE;$/;"	t	typeref:enum:OMX_TIME_SEEKMODETYPE
OMX_TIME_SeekModeAccurate	omx/openmax/OMX_Other.h	/^    OMX_TIME_SeekModeAccurate, \/**< Prefer seeking to the actual seek $/;"	e	enum:OMX_TIME_SEEKMODETYPE
OMX_TIME_SeekModeFast	omx/openmax/OMX_Other.h	/^    OMX_TIME_SeekModeFast = 0, \/**< Prefer seeking to an approximation$/;"	e	enum:OMX_TIME_SEEKMODETYPE
OMX_TIME_SeekModeKhronosExtensions	omx/openmax/OMX_Other.h	/^    OMX_TIME_SeekModeKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_TIME_SEEKMODETYPE
OMX_TIME_SeekModeMax	omx/openmax/OMX_Other.h	/^    OMX_TIME_SeekModeMax = 0x7FFFFFFF$/;"	e	enum:OMX_TIME_SEEKMODETYPE
OMX_TIME_SeekModeVendorStartUnused	omx/openmax/OMX_Other.h	/^    OMX_TIME_SeekModeVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_TIME_SEEKMODETYPE
OMX_TIME_UPDATETYPE	omx/openmax/OMX_Other.h	/^typedef enum OMX_TIME_UPDATETYPE {$/;"	g
OMX_TIME_UPDATETYPE	omx/openmax/OMX_Other.h	/^} OMX_TIME_UPDATETYPE;$/;"	t	typeref:enum:OMX_TIME_UPDATETYPE
OMX_TIME_UpdateClockStateChanged	omx/openmax/OMX_Other.h	/^      OMX_TIME_UpdateClockStateChanged,     \/**< Update was generated because the clock state changed. *\/$/;"	e	enum:OMX_TIME_UPDATETYPE
OMX_TIME_UpdateKhronosExtensions	omx/openmax/OMX_Other.h	/^      OMX_TIME_UpdateKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_TIME_UPDATETYPE
OMX_TIME_UpdateMax	omx/openmax/OMX_Other.h	/^      OMX_TIME_UpdateMax = 0x7FFFFFFF$/;"	e	enum:OMX_TIME_UPDATETYPE
OMX_TIME_UpdateRequestFulfillment	omx/openmax/OMX_Other.h	/^      OMX_TIME_UpdateRequestFulfillment,    \/**< Update is the fulfillment of a media time request. *\/$/;"	e	enum:OMX_TIME_UPDATETYPE
OMX_TIME_UpdateScaleChanged	omx/openmax/OMX_Other.h	/^      OMX_TIME_UpdateScaleChanged,	        \/**< Update was generated because the scale chagned. *\/$/;"	e	enum:OMX_TIME_UPDATETYPE
OMX_TIME_UpdateVendorStartUnused	omx/openmax/OMX_Other.h	/^      OMX_TIME_UpdateVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_TIME_UPDATETYPE
OMX_TRANSITIONEFFECTTYPE	omx/openmax/OMX_IVCommon.h	/^typedef enum OMX_TRANSITIONEFFECTTYPE {$/;"	g
OMX_TRANSITIONEFFECTTYPE	omx/openmax/OMX_IVCommon.h	/^} OMX_TRANSITIONEFFECTTYPE;$/;"	t	typeref:enum:OMX_TRANSITIONEFFECTTYPE
OMX_TRUE	omx/openmax/OMX_Types.h	/^    OMX_TRUE = !OMX_FALSE,$/;"	e	enum:OMX_BOOL
OMX_TUNNELSETUPTYPE	omx/openmax/OMX_Core.h	/^typedef struct OMX_TUNNELSETUPTYPE$/;"	s
OMX_TUNNELSETUPTYPE	omx/openmax/OMX_Core.h	/^} OMX_TUNNELSETUPTYPE; $/;"	t	typeref:struct:OMX_TUNNELSETUPTYPE
OMX_TUNNELSETUPTYPE::eSupplier	omx/openmax/OMX_Core.h	/^    OMX_BUFFERSUPPLIERTYPE eSupplier; \/**< supplier preference *\/$/;"	m	struct:OMX_TUNNELSETUPTYPE	access:public
OMX_TUNNELSETUPTYPE::nTunnelFlags	omx/openmax/OMX_Core.h	/^    OMX_U32 nTunnelFlags;             \/**< bit flags for tunneling *\/$/;"	m	struct:OMX_TUNNELSETUPTYPE	access:public
OMX_Types_h	omx/openmax/OMX_Types.h	32;"	d
OMX_U16	omx/openmax/OMX_Types.h	/^typedef unsigned short OMX_U16;$/;"	t
OMX_U32	omx/openmax/OMX_Types.h	/^typedef unsigned long OMX_U32;$/;"	t
OMX_U64	omx/openmax/OMX_Types.h	/^typedef unsigned __int64  OMX_U64;$/;"	t
OMX_U64	omx/openmax/OMX_Types.h	/^typedef unsigned long long OMX_U64;$/;"	t
OMX_U8	omx/openmax/OMX_Types.h	/^typedef unsigned char OMX_U8;$/;"	t
OMX_UUIDTYPE	omx/openmax/OMX_Types.h	/^typedef unsigned char OMX_UUIDTYPE[128];$/;"	t
OMX_UseBuffer	omx/openmax/OMX_Core.h	985;"	d
OMX_UseEGLImage	omx/openmax/OMX_Core.h	1165;"	d
OMX_VERSION	omx/gstomxvideodec.h	39;"	d
OMX_VERSION	omx/openmax/OMX_Types.h	326;"	d
OMX_VERSIONTYPE	omx/openmax/OMX_Types.h	/^typedef union OMX_VERSIONTYPE$/;"	u
OMX_VERSIONTYPE	omx/openmax/OMX_Types.h	/^} OMX_VERSIONTYPE;$/;"	t	typeref:union:OMX_VERSIONTYPE
OMX_VERSIONTYPE::__anon34::nRevision	omx/openmax/OMX_Types.h	/^        OMX_U8 nRevision;       \/**< Revision version accessor element *\/$/;"	m	struct:OMX_VERSIONTYPE::__anon34	access:public
OMX_VERSIONTYPE::__anon34::nStep	omx/openmax/OMX_Types.h	/^        OMX_U8 nStep;           \/**< Step version accessor element *\/$/;"	m	struct:OMX_VERSIONTYPE::__anon34	access:public
OMX_VERSIONTYPE::__anon34::nVersionMajor	omx/openmax/OMX_Types.h	/^        OMX_U8 nVersionMajor;   \/**< Major version accessor element *\/$/;"	m	struct:OMX_VERSIONTYPE::__anon34	access:public
OMX_VERSIONTYPE::__anon34::nVersionMinor	omx/openmax/OMX_Types.h	/^        OMX_U8 nVersionMinor;   \/**< Minor version accessor element *\/$/;"	m	struct:OMX_VERSIONTYPE::__anon34	access:public
OMX_VERSIONTYPE::nVersion	omx/openmax/OMX_Types.h	/^    OMX_U32 nVersion;           \/**< 32 bit value to make accessing the$/;"	m	union:OMX_VERSIONTYPE	access:public
OMX_VERSIONTYPE::s	omx/openmax/OMX_Types.h	/^    } s;$/;"	m	union:OMX_VERSIONTYPE	typeref:struct:OMX_VERSIONTYPE::__anon34	access:public
OMX_VERSION_MAJOR	omx/gstomxvideodec.h	34;"	d
OMX_VERSION_MAJOR	omx/openmax/OMX_Types.h	321;"	d
OMX_VERSION_MINOR	omx/gstomxvideodec.h	35;"	d
OMX_VERSION_MINOR	omx/openmax/OMX_Types.h	322;"	d
OMX_VERSION_REVISION	omx/gstomxvideodec.h	36;"	d
OMX_VERSION_REVISION	omx/openmax/OMX_Types.h	323;"	d
OMX_VERSION_STEP	omx/gstomxvideodec.h	37;"	d
OMX_VERSION_STEP	omx/openmax/OMX_Types.h	324;"	d
OMX_VIDEO_AVCLEVELTYPE	omx/openmax/OMX_Video.h	/^typedef enum OMX_VIDEO_AVCLEVELTYPE {$/;"	g
OMX_VIDEO_AVCLEVELTYPE	omx/openmax/OMX_Video.h	/^} OMX_VIDEO_AVCLEVELTYPE;$/;"	t	typeref:enum:OMX_VIDEO_AVCLEVELTYPE
OMX_VIDEO_AVCLOOPFILTERTYPE	omx/openmax/OMX_Video.h	/^typedef enum OMX_VIDEO_AVCLOOPFILTERTYPE {$/;"	g
OMX_VIDEO_AVCLOOPFILTERTYPE	omx/openmax/OMX_Video.h	/^} OMX_VIDEO_AVCLOOPFILTERTYPE;$/;"	t	typeref:enum:OMX_VIDEO_AVCLOOPFILTERTYPE
OMX_VIDEO_AVCLevel1	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCLevel1   = 0x01,     \/**< Level 1 *\/$/;"	e	enum:OMX_VIDEO_AVCLEVELTYPE
OMX_VIDEO_AVCLevel11	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCLevel11  = 0x04,     \/**< Level 1.1 *\/$/;"	e	enum:OMX_VIDEO_AVCLEVELTYPE
OMX_VIDEO_AVCLevel12	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCLevel12  = 0x08,     \/**< Level 1.2 *\/$/;"	e	enum:OMX_VIDEO_AVCLEVELTYPE
OMX_VIDEO_AVCLevel13	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCLevel13  = 0x10,     \/**< Level 1.3 *\/$/;"	e	enum:OMX_VIDEO_AVCLEVELTYPE
OMX_VIDEO_AVCLevel1b	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCLevel1b  = 0x02,     \/**< Level 1b *\/$/;"	e	enum:OMX_VIDEO_AVCLEVELTYPE
OMX_VIDEO_AVCLevel2	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCLevel2   = 0x20,     \/**< Level 2 *\/$/;"	e	enum:OMX_VIDEO_AVCLEVELTYPE
OMX_VIDEO_AVCLevel21	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCLevel21  = 0x40,     \/**< Level 2.1 *\/$/;"	e	enum:OMX_VIDEO_AVCLEVELTYPE
OMX_VIDEO_AVCLevel22	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCLevel22  = 0x80,     \/**< Level 2.2 *\/$/;"	e	enum:OMX_VIDEO_AVCLEVELTYPE
OMX_VIDEO_AVCLevel3	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCLevel3   = 0x100,    \/**< Level 3 *\/$/;"	e	enum:OMX_VIDEO_AVCLEVELTYPE
OMX_VIDEO_AVCLevel31	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCLevel31  = 0x200,    \/**< Level 3.1 *\/$/;"	e	enum:OMX_VIDEO_AVCLEVELTYPE
OMX_VIDEO_AVCLevel32	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCLevel32  = 0x400,    \/**< Level 3.2 *\/$/;"	e	enum:OMX_VIDEO_AVCLEVELTYPE
OMX_VIDEO_AVCLevel4	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCLevel4   = 0x800,    \/**< Level 4 *\/$/;"	e	enum:OMX_VIDEO_AVCLEVELTYPE
OMX_VIDEO_AVCLevel41	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCLevel41  = 0x1000,   \/**< Level 4.1 *\/$/;"	e	enum:OMX_VIDEO_AVCLEVELTYPE
OMX_VIDEO_AVCLevel42	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCLevel42  = 0x2000,   \/**< Level 4.2 *\/$/;"	e	enum:OMX_VIDEO_AVCLEVELTYPE
OMX_VIDEO_AVCLevel5	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCLevel5   = 0x4000,   \/**< Level 5 *\/$/;"	e	enum:OMX_VIDEO_AVCLEVELTYPE
OMX_VIDEO_AVCLevel51	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCLevel51  = 0x8000,   \/**< Level 5.1 *\/$/;"	e	enum:OMX_VIDEO_AVCLEVELTYPE
OMX_VIDEO_AVCLevelKhronosExtensions	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCLevelKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_VIDEO_AVCLEVELTYPE
OMX_VIDEO_AVCLevelMax	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCLevelMax = 0x7FFFFFFF  $/;"	e	enum:OMX_VIDEO_AVCLEVELTYPE
OMX_VIDEO_AVCLevelVendorStartUnused	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCLevelVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_VIDEO_AVCLEVELTYPE
OMX_VIDEO_AVCLoopFilterDisable	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCLoopFilterDisable,$/;"	e	enum:OMX_VIDEO_AVCLOOPFILTERTYPE
OMX_VIDEO_AVCLoopFilterDisableSliceBoundary	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCLoopFilterDisableSliceBoundary,$/;"	e	enum:OMX_VIDEO_AVCLOOPFILTERTYPE
OMX_VIDEO_AVCLoopFilterEnable	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCLoopFilterEnable = 0,$/;"	e	enum:OMX_VIDEO_AVCLOOPFILTERTYPE
OMX_VIDEO_AVCLoopFilterKhronosExtensions	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCLoopFilterKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_VIDEO_AVCLOOPFILTERTYPE
OMX_VIDEO_AVCLoopFilterMax	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCLoopFilterMax = 0x7FFFFFFF$/;"	e	enum:OMX_VIDEO_AVCLOOPFILTERTYPE
OMX_VIDEO_AVCLoopFilterVendorStartUnused	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCLoopFilterVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_VIDEO_AVCLOOPFILTERTYPE
OMX_VIDEO_AVCPROFILETYPE	omx/openmax/OMX_Video.h	/^typedef enum OMX_VIDEO_AVCPROFILETYPE {$/;"	g
OMX_VIDEO_AVCPROFILETYPE	omx/openmax/OMX_Video.h	/^} OMX_VIDEO_AVCPROFILETYPE;$/;"	t	typeref:enum:OMX_VIDEO_AVCPROFILETYPE
OMX_VIDEO_AVCProfileBaseline	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCProfileBaseline = 0x01,   \/**< Baseline profile *\/$/;"	e	enum:OMX_VIDEO_AVCPROFILETYPE
OMX_VIDEO_AVCProfileExtended	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCProfileExtended = 0x04,   \/**< Extended profile *\/$/;"	e	enum:OMX_VIDEO_AVCPROFILETYPE
OMX_VIDEO_AVCProfileHigh	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCProfileHigh     = 0x08,   \/**< High profile *\/$/;"	e	enum:OMX_VIDEO_AVCPROFILETYPE
OMX_VIDEO_AVCProfileHigh10	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCProfileHigh10   = 0x10,   \/**< High 10 profile *\/$/;"	e	enum:OMX_VIDEO_AVCPROFILETYPE
OMX_VIDEO_AVCProfileHigh422	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCProfileHigh422  = 0x20,   \/**< High 4:2:2 profile *\/$/;"	e	enum:OMX_VIDEO_AVCPROFILETYPE
OMX_VIDEO_AVCProfileHigh444	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCProfileHigh444  = 0x40,   \/**< High 4:4:4 profile *\/$/;"	e	enum:OMX_VIDEO_AVCPROFILETYPE
OMX_VIDEO_AVCProfileKhronosExtensions	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCProfileKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_VIDEO_AVCPROFILETYPE
OMX_VIDEO_AVCProfileMain	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCProfileMain     = 0x02,   \/**< Main profile *\/$/;"	e	enum:OMX_VIDEO_AVCPROFILETYPE
OMX_VIDEO_AVCProfileMax	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCProfileMax      = 0x7FFFFFFF  $/;"	e	enum:OMX_VIDEO_AVCPROFILETYPE
OMX_VIDEO_AVCProfileVendorStartUnused	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCProfileVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_VIDEO_AVCPROFILETYPE
OMX_VIDEO_AVCSLICEMODETYPE	omx/openmax/OMX_Video.h	/^typedef enum OMX_VIDEO_AVCSLICEMODETYPE {$/;"	g
OMX_VIDEO_AVCSLICEMODETYPE	omx/openmax/OMX_Video.h	/^} OMX_VIDEO_AVCSLICEMODETYPE;$/;"	t	typeref:enum:OMX_VIDEO_AVCSLICEMODETYPE
OMX_VIDEO_CODINGTYPE	omx/openmax/OMX_Video.h	/^typedef enum OMX_VIDEO_CODINGTYPE {$/;"	g
OMX_VIDEO_CODINGTYPE	omx/openmax/OMX_Video.h	/^} OMX_VIDEO_CODINGTYPE;$/;"	t	typeref:enum:OMX_VIDEO_CODINGTYPE
OMX_VIDEO_CONFIG_AVCINTRAPERIOD	omx/openmax/OMX_Video.h	/^typedef struct OMX_VIDEO_CONFIG_AVCINTRAPERIOD {$/;"	s
OMX_VIDEO_CONFIG_AVCINTRAPERIOD	omx/openmax/OMX_Video.h	/^} OMX_VIDEO_CONFIG_AVCINTRAPERIOD;$/;"	t	typeref:struct:OMX_VIDEO_CONFIG_AVCINTRAPERIOD
OMX_VIDEO_CONFIG_AVCINTRAPERIOD::nIDRPeriod	omx/openmax/OMX_Video.h	/^    OMX_U32 nIDRPeriod;$/;"	m	struct:OMX_VIDEO_CONFIG_AVCINTRAPERIOD	access:public
OMX_VIDEO_CONFIG_AVCINTRAPERIOD::nPFrames	omx/openmax/OMX_Video.h	/^    OMX_U32 nPFrames;$/;"	m	struct:OMX_VIDEO_CONFIG_AVCINTRAPERIOD	access:public
OMX_VIDEO_CONFIG_AVCINTRAPERIOD::nPortIndex	omx/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_VIDEO_CONFIG_AVCINTRAPERIOD	access:public
OMX_VIDEO_CONFIG_AVCINTRAPERIOD::nSize	omx/openmax/OMX_Video.h	/^    OMX_U32 nSize; $/;"	m	struct:OMX_VIDEO_CONFIG_AVCINTRAPERIOD	access:public
OMX_VIDEO_CONFIG_AVCINTRAPERIOD::nVersion	omx/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_VIDEO_CONFIG_AVCINTRAPERIOD	access:public
OMX_VIDEO_CONFIG_BITRATETYPE	omx/openmax/OMX_Video.h	/^typedef struct OMX_VIDEO_CONFIG_BITRATETYPE {$/;"	s
OMX_VIDEO_CONFIG_BITRATETYPE	omx/openmax/OMX_Video.h	/^} OMX_VIDEO_CONFIG_BITRATETYPE;$/;"	t	typeref:struct:OMX_VIDEO_CONFIG_BITRATETYPE
OMX_VIDEO_CONFIG_BITRATETYPE::nEncodeBitrate	omx/openmax/OMX_Video.h	/^    OMX_U32 nEncodeBitrate;                 $/;"	m	struct:OMX_VIDEO_CONFIG_BITRATETYPE	access:public
OMX_VIDEO_CONFIG_BITRATETYPE::nPortIndex	omx/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;                     $/;"	m	struct:OMX_VIDEO_CONFIG_BITRATETYPE	access:public
OMX_VIDEO_CONFIG_BITRATETYPE::nSize	omx/openmax/OMX_Video.h	/^    OMX_U32 nSize;                          $/;"	m	struct:OMX_VIDEO_CONFIG_BITRATETYPE	access:public
OMX_VIDEO_CONFIG_BITRATETYPE::nVersion	omx/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;               $/;"	m	struct:OMX_VIDEO_CONFIG_BITRATETYPE	access:public
OMX_VIDEO_CONFIG_NALSIZE	omx/openmax/OMX_Video.h	/^typedef struct OMX_VIDEO_CONFIG_NALSIZE {$/;"	s
OMX_VIDEO_CONFIG_NALSIZE	omx/openmax/OMX_Video.h	/^} OMX_VIDEO_CONFIG_NALSIZE;$/;"	t	typeref:struct:OMX_VIDEO_CONFIG_NALSIZE
OMX_VIDEO_CONFIG_NALSIZE::nNaluBytes	omx/openmax/OMX_Video.h	/^    OMX_U32 nNaluBytes;$/;"	m	struct:OMX_VIDEO_CONFIG_NALSIZE	access:public
OMX_VIDEO_CONFIG_NALSIZE::nPortIndex	omx/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_VIDEO_CONFIG_NALSIZE	access:public
OMX_VIDEO_CONFIG_NALSIZE::nSize	omx/openmax/OMX_Video.h	/^    OMX_U32 nSize; $/;"	m	struct:OMX_VIDEO_CONFIG_NALSIZE	access:public
OMX_VIDEO_CONFIG_NALSIZE::nVersion	omx/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_VIDEO_CONFIG_NALSIZE	access:public
OMX_VIDEO_CONTROLRATETYPE	omx/openmax/OMX_Video.h	/^typedef enum OMX_VIDEO_CONTROLRATETYPE {$/;"	g
OMX_VIDEO_CONTROLRATETYPE	omx/openmax/OMX_Video.h	/^} OMX_VIDEO_CONTROLRATETYPE;$/;"	t	typeref:enum:OMX_VIDEO_CONTROLRATETYPE
OMX_VIDEO_CodingAVC	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_CodingAVC,        \/**< H.264\/AVC *\/$/;"	e	enum:OMX_VIDEO_CODINGTYPE
OMX_VIDEO_CodingAutoDetect	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_CodingAutoDetect, \/**< Autodetection of coding type *\/$/;"	e	enum:OMX_VIDEO_CODINGTYPE
OMX_VIDEO_CodingH263	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_CodingH263,       \/**< H.263 *\/$/;"	e	enum:OMX_VIDEO_CODINGTYPE
OMX_VIDEO_CodingKhronosExtensions	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_CodingKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_VIDEO_CODINGTYPE
OMX_VIDEO_CodingMJPEG	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_CodingMJPEG,      \/**< Motion JPEG *\/$/;"	e	enum:OMX_VIDEO_CODINGTYPE
OMX_VIDEO_CodingMPEG2	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_CodingMPEG2,      \/**< AKA: H.262 *\/$/;"	e	enum:OMX_VIDEO_CODINGTYPE
OMX_VIDEO_CodingMPEG4	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_CodingMPEG4,      \/**< MPEG-4 *\/$/;"	e	enum:OMX_VIDEO_CODINGTYPE
OMX_VIDEO_CodingMax	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_CodingMax = 0x7FFFFFFF$/;"	e	enum:OMX_VIDEO_CODINGTYPE
OMX_VIDEO_CodingRV	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_CodingRV,         \/**< all versions of Real Video *\/$/;"	e	enum:OMX_VIDEO_CODINGTYPE
OMX_VIDEO_CodingUnused	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_CodingUnused,     \/**< Value when coding is N\/A *\/$/;"	e	enum:OMX_VIDEO_CODINGTYPE
OMX_VIDEO_CodingVendorStartUnused	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_CodingVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_VIDEO_CODINGTYPE
OMX_VIDEO_CodingWMV	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_CodingWMV,        \/**< all versions of Windows Media Video *\/$/;"	e	enum:OMX_VIDEO_CODINGTYPE
OMX_VIDEO_H263LEVELTYPE	omx/openmax/OMX_Video.h	/^typedef enum OMX_VIDEO_H263LEVELTYPE {$/;"	g
OMX_VIDEO_H263LEVELTYPE	omx/openmax/OMX_Video.h	/^} OMX_VIDEO_H263LEVELTYPE;$/;"	t	typeref:enum:OMX_VIDEO_H263LEVELTYPE
OMX_VIDEO_H263Level10	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_H263Level10  = 0x01,  $/;"	e	enum:OMX_VIDEO_H263LEVELTYPE
OMX_VIDEO_H263Level20	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_H263Level20  = 0x02,      $/;"	e	enum:OMX_VIDEO_H263LEVELTYPE
OMX_VIDEO_H263Level30	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_H263Level30  = 0x04,      $/;"	e	enum:OMX_VIDEO_H263LEVELTYPE
OMX_VIDEO_H263Level40	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_H263Level40  = 0x08,      $/;"	e	enum:OMX_VIDEO_H263LEVELTYPE
OMX_VIDEO_H263Level45	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_H263Level45  = 0x10,      $/;"	e	enum:OMX_VIDEO_H263LEVELTYPE
OMX_VIDEO_H263Level50	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_H263Level50  = 0x20,      $/;"	e	enum:OMX_VIDEO_H263LEVELTYPE
OMX_VIDEO_H263Level60	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_H263Level60  = 0x40,      $/;"	e	enum:OMX_VIDEO_H263LEVELTYPE
OMX_VIDEO_H263Level70	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_H263Level70  = 0x80, $/;"	e	enum:OMX_VIDEO_H263LEVELTYPE
OMX_VIDEO_H263LevelKhronosExtensions	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_H263LevelKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_VIDEO_H263LEVELTYPE
OMX_VIDEO_H263LevelMax	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_H263LevelMax = 0x7FFFFFFF  $/;"	e	enum:OMX_VIDEO_H263LEVELTYPE
OMX_VIDEO_H263LevelVendorStartUnused	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_H263LevelVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_VIDEO_H263LEVELTYPE
OMX_VIDEO_H263PROFILETYPE	omx/openmax/OMX_Video.h	/^typedef enum OMX_VIDEO_H263PROFILETYPE {$/;"	g
OMX_VIDEO_H263PROFILETYPE	omx/openmax/OMX_Video.h	/^} OMX_VIDEO_H263PROFILETYPE;$/;"	t	typeref:enum:OMX_VIDEO_H263PROFILETYPE
OMX_VIDEO_H263ProfileBackwardCompatible	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_H263ProfileBackwardCompatible  = 0x04,  $/;"	e	enum:OMX_VIDEO_H263PROFILETYPE
OMX_VIDEO_H263ProfileBaseline	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_H263ProfileBaseline            = 0x01,        $/;"	e	enum:OMX_VIDEO_H263PROFILETYPE
OMX_VIDEO_H263ProfileH320Coding	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_H263ProfileH320Coding          = 0x02,          $/;"	e	enum:OMX_VIDEO_H263PROFILETYPE
OMX_VIDEO_H263ProfileHighCompression	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_H263ProfileHighCompression     = 0x20,     $/;"	e	enum:OMX_VIDEO_H263PROFILETYPE
OMX_VIDEO_H263ProfileHighLatency	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_H263ProfileHighLatency         = 0x100,         $/;"	e	enum:OMX_VIDEO_H263PROFILETYPE
OMX_VIDEO_H263ProfileISWV2	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_H263ProfileISWV2               = 0x08,               $/;"	e	enum:OMX_VIDEO_H263PROFILETYPE
OMX_VIDEO_H263ProfileISWV3	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_H263ProfileISWV3               = 0x10,               $/;"	e	enum:OMX_VIDEO_H263PROFILETYPE
OMX_VIDEO_H263ProfileInterlace	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_H263ProfileInterlace           = 0x80,           $/;"	e	enum:OMX_VIDEO_H263PROFILETYPE
OMX_VIDEO_H263ProfileInternet	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_H263ProfileInternet            = 0x40,            $/;"	e	enum:OMX_VIDEO_H263PROFILETYPE
OMX_VIDEO_H263ProfileKhronosExtensions	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_H263ProfileKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_VIDEO_H263PROFILETYPE
OMX_VIDEO_H263ProfileMax	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_H263ProfileMax                 = 0x7FFFFFFF  $/;"	e	enum:OMX_VIDEO_H263PROFILETYPE
OMX_VIDEO_H263ProfileVendorStartUnused	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_H263ProfileVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_VIDEO_H263PROFILETYPE
OMX_VIDEO_INTRAREFRESHTYPE	omx/openmax/OMX_Video.h	/^typedef enum OMX_VIDEO_INTRAREFRESHTYPE {$/;"	g
OMX_VIDEO_INTRAREFRESHTYPE	omx/openmax/OMX_Video.h	/^} OMX_VIDEO_INTRAREFRESHTYPE;$/;"	t	typeref:enum:OMX_VIDEO_INTRAREFRESHTYPE
OMX_VIDEO_IntraRefreshAdaptive	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_IntraRefreshAdaptive,$/;"	e	enum:OMX_VIDEO_INTRAREFRESHTYPE
OMX_VIDEO_IntraRefreshBoth	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_IntraRefreshBoth,$/;"	e	enum:OMX_VIDEO_INTRAREFRESHTYPE
OMX_VIDEO_IntraRefreshCyclic	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_IntraRefreshCyclic,$/;"	e	enum:OMX_VIDEO_INTRAREFRESHTYPE
OMX_VIDEO_IntraRefreshKhronosExtensions	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_IntraRefreshKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_VIDEO_INTRAREFRESHTYPE
OMX_VIDEO_IntraRefreshMax	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_IntraRefreshMax = 0x7FFFFFFF$/;"	e	enum:OMX_VIDEO_INTRAREFRESHTYPE
OMX_VIDEO_IntraRefreshVendorStartUnused	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_IntraRefreshVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_VIDEO_INTRAREFRESHTYPE
OMX_VIDEO_MOTIONVECTORTYPE	omx/openmax/OMX_Video.h	/^typedef enum OMX_VIDEO_MOTIONVECTORTYPE {$/;"	g
OMX_VIDEO_MOTIONVECTORTYPE	omx/openmax/OMX_Video.h	/^} OMX_VIDEO_MOTIONVECTORTYPE;$/;"	t	typeref:enum:OMX_VIDEO_MOTIONVECTORTYPE
OMX_VIDEO_MPEG2LEVELTYPE	omx/openmax/OMX_Video.h	/^typedef enum OMX_VIDEO_MPEG2LEVELTYPE {$/;"	g
OMX_VIDEO_MPEG2LEVELTYPE	omx/openmax/OMX_Video.h	/^} OMX_VIDEO_MPEG2LEVELTYPE;$/;"	t	typeref:enum:OMX_VIDEO_MPEG2LEVELTYPE
OMX_VIDEO_MPEG2LevelH14	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG2LevelH14,     \/**< High 1440 *\/ $/;"	e	enum:OMX_VIDEO_MPEG2LEVELTYPE
OMX_VIDEO_MPEG2LevelHL	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG2LevelHL,      \/**< High Level *\/   $/;"	e	enum:OMX_VIDEO_MPEG2LEVELTYPE
OMX_VIDEO_MPEG2LevelKhronosExtensions	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG2LevelKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_VIDEO_MPEG2LEVELTYPE
OMX_VIDEO_MPEG2LevelLL	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG2LevelLL = 0,  \/**< Low Level *\/ $/;"	e	enum:OMX_VIDEO_MPEG2LEVELTYPE
OMX_VIDEO_MPEG2LevelML	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG2LevelML,      \/**< Main Level *\/ $/;"	e	enum:OMX_VIDEO_MPEG2LEVELTYPE
OMX_VIDEO_MPEG2LevelMax	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG2LevelMax = 0x7FFFFFFF  $/;"	e	enum:OMX_VIDEO_MPEG2LEVELTYPE
OMX_VIDEO_MPEG2LevelVendorStartUnused	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG2LevelVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_VIDEO_MPEG2LEVELTYPE
OMX_VIDEO_MPEG2PROFILETYPE	omx/openmax/OMX_Video.h	/^typedef enum OMX_VIDEO_MPEG2PROFILETYPE {$/;"	g
OMX_VIDEO_MPEG2PROFILETYPE	omx/openmax/OMX_Video.h	/^} OMX_VIDEO_MPEG2PROFILETYPE;$/;"	t	typeref:enum:OMX_VIDEO_MPEG2PROFILETYPE
OMX_VIDEO_MPEG2Profile422	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG2Profile422,         \/**< 4:2:2 Profile *\/$/;"	e	enum:OMX_VIDEO_MPEG2PROFILETYPE
OMX_VIDEO_MPEG2ProfileHigh	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG2ProfileHigh,        \/**< High Profile *\/$/;"	e	enum:OMX_VIDEO_MPEG2PROFILETYPE
OMX_VIDEO_MPEG2ProfileKhronosExtensions	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG2ProfileKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_VIDEO_MPEG2PROFILETYPE
OMX_VIDEO_MPEG2ProfileMain	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG2ProfileMain,        \/**< Main Profile *\/$/;"	e	enum:OMX_VIDEO_MPEG2PROFILETYPE
OMX_VIDEO_MPEG2ProfileMax	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG2ProfileMax = 0x7FFFFFFF  $/;"	e	enum:OMX_VIDEO_MPEG2PROFILETYPE
OMX_VIDEO_MPEG2ProfileSNR	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG2ProfileSNR,         \/**< SNR Profile *\/$/;"	e	enum:OMX_VIDEO_MPEG2PROFILETYPE
OMX_VIDEO_MPEG2ProfileSimple	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG2ProfileSimple = 0,  \/**< Simple Profile *\/$/;"	e	enum:OMX_VIDEO_MPEG2PROFILETYPE
OMX_VIDEO_MPEG2ProfileSpatial	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG2ProfileSpatial,     \/**< Spatial Profile *\/$/;"	e	enum:OMX_VIDEO_MPEG2PROFILETYPE
OMX_VIDEO_MPEG2ProfileVendorStartUnused	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG2ProfileVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_VIDEO_MPEG2PROFILETYPE
OMX_VIDEO_MPEG4LEVELTYPE	omx/openmax/OMX_Video.h	/^typedef enum OMX_VIDEO_MPEG4LEVELTYPE {$/;"	g
OMX_VIDEO_MPEG4LEVELTYPE	omx/openmax/OMX_Video.h	/^} OMX_VIDEO_MPEG4LEVELTYPE;$/;"	t	typeref:enum:OMX_VIDEO_MPEG4LEVELTYPE
OMX_VIDEO_MPEG4Level0	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4Level0  = 0x01,   \/**< Level 0 *\/   $/;"	e	enum:OMX_VIDEO_MPEG4LEVELTYPE
OMX_VIDEO_MPEG4Level0b	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4Level0b = 0x02,   \/**< Level 0b *\/   $/;"	e	enum:OMX_VIDEO_MPEG4LEVELTYPE
OMX_VIDEO_MPEG4Level1	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4Level1  = 0x04,   \/**< Level 1 *\/ $/;"	e	enum:OMX_VIDEO_MPEG4LEVELTYPE
OMX_VIDEO_MPEG4Level2	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4Level2  = 0x08,   \/**< Level 2 *\/ $/;"	e	enum:OMX_VIDEO_MPEG4LEVELTYPE
OMX_VIDEO_MPEG4Level3	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4Level3  = 0x10,   \/**< Level 3 *\/ $/;"	e	enum:OMX_VIDEO_MPEG4LEVELTYPE
OMX_VIDEO_MPEG4Level4	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4Level4  = 0x20,   \/**< Level 4 *\/  $/;"	e	enum:OMX_VIDEO_MPEG4LEVELTYPE
OMX_VIDEO_MPEG4Level4a	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4Level4a = 0x40,   \/**< Level 4a *\/  $/;"	e	enum:OMX_VIDEO_MPEG4LEVELTYPE
OMX_VIDEO_MPEG4Level5	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4Level5  = 0x80,   \/**< Level 5 *\/  $/;"	e	enum:OMX_VIDEO_MPEG4LEVELTYPE
OMX_VIDEO_MPEG4LevelKhronosExtensions	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4LevelKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_VIDEO_MPEG4LEVELTYPE
OMX_VIDEO_MPEG4LevelMax	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4LevelMax = 0x7FFFFFFF  $/;"	e	enum:OMX_VIDEO_MPEG4LEVELTYPE
OMX_VIDEO_MPEG4LevelVendorStartUnused	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4LevelVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_VIDEO_MPEG4LEVELTYPE
OMX_VIDEO_MPEG4PROFILETYPE	omx/openmax/OMX_Video.h	/^typedef enum OMX_VIDEO_MPEG4PROFILETYPE {$/;"	g
OMX_VIDEO_MPEG4PROFILETYPE	omx/openmax/OMX_Video.h	/^} OMX_VIDEO_MPEG4PROFILETYPE;$/;"	t	typeref:enum:OMX_VIDEO_MPEG4PROFILETYPE
OMX_VIDEO_MPEG4ProfileAdvancedCoding	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4ProfileAdvancedCoding   = 0x1000,    $/;"	e	enum:OMX_VIDEO_MPEG4PROFILETYPE
OMX_VIDEO_MPEG4ProfileAdvancedCore	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4ProfileAdvancedCore     = 0x2000,      $/;"	e	enum:OMX_VIDEO_MPEG4PROFILETYPE
OMX_VIDEO_MPEG4ProfileAdvancedRealTime	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4ProfileAdvancedRealTime = 0x400,  $/;"	e	enum:OMX_VIDEO_MPEG4PROFILETYPE
OMX_VIDEO_MPEG4ProfileAdvancedScalable	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4ProfileAdvancedScalable = 0x4000,$/;"	e	enum:OMX_VIDEO_MPEG4PROFILETYPE
OMX_VIDEO_MPEG4ProfileAdvancedSimple	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4ProfileAdvancedSimple   = 0x8000,$/;"	e	enum:OMX_VIDEO_MPEG4PROFILETYPE
OMX_VIDEO_MPEG4ProfileBasicAnimated	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4ProfileBasicAnimated    = 0x100,     $/;"	e	enum:OMX_VIDEO_MPEG4PROFILETYPE
OMX_VIDEO_MPEG4ProfileCore	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4ProfileCore             = 0x04,              $/;"	e	enum:OMX_VIDEO_MPEG4PROFILETYPE
OMX_VIDEO_MPEG4ProfileCoreScalable	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4ProfileCoreScalable     = 0x800,      $/;"	e	enum:OMX_VIDEO_MPEG4PROFILETYPE
OMX_VIDEO_MPEG4ProfileHybrid	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4ProfileHybrid           = 0x200,            $/;"	e	enum:OMX_VIDEO_MPEG4PROFILETYPE
OMX_VIDEO_MPEG4ProfileKhronosExtensions	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4ProfileKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_VIDEO_MPEG4PROFILETYPE
OMX_VIDEO_MPEG4ProfileMain	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4ProfileMain             = 0x08,             $/;"	e	enum:OMX_VIDEO_MPEG4PROFILETYPE
OMX_VIDEO_MPEG4ProfileMax	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4ProfileMax              = 0x7FFFFFFF  $/;"	e	enum:OMX_VIDEO_MPEG4PROFILETYPE
OMX_VIDEO_MPEG4ProfileNbit	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4ProfileNbit             = 0x10,              $/;"	e	enum:OMX_VIDEO_MPEG4PROFILETYPE
OMX_VIDEO_MPEG4ProfileScalableTexture	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4ProfileScalableTexture  = 0x20,   $/;"	e	enum:OMX_VIDEO_MPEG4PROFILETYPE
OMX_VIDEO_MPEG4ProfileSimple	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4ProfileSimple           = 0x01,        $/;"	e	enum:OMX_VIDEO_MPEG4PROFILETYPE
OMX_VIDEO_MPEG4ProfileSimpleFBA	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4ProfileSimpleFBA        = 0x80,         $/;"	e	enum:OMX_VIDEO_MPEG4PROFILETYPE
OMX_VIDEO_MPEG4ProfileSimpleFace	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4ProfileSimpleFace       = 0x40,        $/;"	e	enum:OMX_VIDEO_MPEG4PROFILETYPE
OMX_VIDEO_MPEG4ProfileSimpleScalable	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4ProfileSimpleScalable   = 0x02,    $/;"	e	enum:OMX_VIDEO_MPEG4PROFILETYPE
OMX_VIDEO_MPEG4ProfileVendorStartUnused	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4ProfileVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_VIDEO_MPEG4PROFILETYPE
OMX_VIDEO_PARAM_AVCSLICEFMO	omx/openmax/OMX_Video.h	/^typedef struct OMX_VIDEO_PARAM_AVCSLICEFMO {$/;"	s
OMX_VIDEO_PARAM_AVCSLICEFMO	omx/openmax/OMX_Video.h	/^} OMX_VIDEO_PARAM_AVCSLICEFMO;$/;"	t	typeref:struct:OMX_VIDEO_PARAM_AVCSLICEFMO
OMX_VIDEO_PARAM_AVCSLICEFMO::eSliceMode	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCSLICEMODETYPE eSliceMode;$/;"	m	struct:OMX_VIDEO_PARAM_AVCSLICEFMO	access:public
OMX_VIDEO_PARAM_AVCSLICEFMO::nNumSliceGroups	omx/openmax/OMX_Video.h	/^    OMX_U8 nNumSliceGroups;$/;"	m	struct:OMX_VIDEO_PARAM_AVCSLICEFMO	access:public
OMX_VIDEO_PARAM_AVCSLICEFMO::nPortIndex	omx/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_VIDEO_PARAM_AVCSLICEFMO	access:public
OMX_VIDEO_PARAM_AVCSLICEFMO::nSize	omx/openmax/OMX_Video.h	/^    OMX_U32 nSize; $/;"	m	struct:OMX_VIDEO_PARAM_AVCSLICEFMO	access:public
OMX_VIDEO_PARAM_AVCSLICEFMO::nSliceGroupMapType	omx/openmax/OMX_Video.h	/^    OMX_U8 nSliceGroupMapType;$/;"	m	struct:OMX_VIDEO_PARAM_AVCSLICEFMO	access:public
OMX_VIDEO_PARAM_AVCSLICEFMO::nVersion	omx/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_VIDEO_PARAM_AVCSLICEFMO	access:public
OMX_VIDEO_PARAM_AVCTYPE	omx/openmax/OMX_Video.h	/^typedef struct OMX_VIDEO_PARAM_AVCTYPE {$/;"	s
OMX_VIDEO_PARAM_AVCTYPE	omx/openmax/OMX_Video.h	/^} OMX_VIDEO_PARAM_AVCTYPE;$/;"	t	typeref:struct:OMX_VIDEO_PARAM_AVCTYPE
OMX_VIDEO_PARAM_AVCTYPE::bDirect8x8Inference	omx/openmax/OMX_Video.h	/^    OMX_BOOL bDirect8x8Inference;  $/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE	access:public
OMX_VIDEO_PARAM_AVCTYPE::bDirectSpatialTemporal	omx/openmax/OMX_Video.h	/^	OMX_BOOL bDirectSpatialTemporal;$/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE	access:public
OMX_VIDEO_PARAM_AVCTYPE::bEnableASO	omx/openmax/OMX_Video.h	/^    OMX_BOOL bEnableASO;  $/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE	access:public
OMX_VIDEO_PARAM_AVCTYPE::bEnableFMO	omx/openmax/OMX_Video.h	/^    OMX_BOOL bEnableFMO;  $/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE	access:public
OMX_VIDEO_PARAM_AVCTYPE::bEnableRS	omx/openmax/OMX_Video.h	/^    OMX_BOOL bEnableRS;   $/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE	access:public
OMX_VIDEO_PARAM_AVCTYPE::bEnableUEP	omx/openmax/OMX_Video.h	/^    OMX_BOOL bEnableUEP;  $/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE	access:public
OMX_VIDEO_PARAM_AVCTYPE::bEntropyCodingCABAC	omx/openmax/OMX_Video.h	/^    OMX_BOOL bEntropyCodingCABAC;  $/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE	access:public
OMX_VIDEO_PARAM_AVCTYPE::bFrameMBsOnly	omx/openmax/OMX_Video.h	/^	OMX_BOOL bFrameMBsOnly;        									$/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE	access:public
OMX_VIDEO_PARAM_AVCTYPE::bMBAFF	omx/openmax/OMX_Video.h	/^    OMX_BOOL bMBAFF;               $/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE	access:public
OMX_VIDEO_PARAM_AVCTYPE::bUseHadamard	omx/openmax/OMX_Video.h	/^    OMX_BOOL bUseHadamard;$/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE	access:public
OMX_VIDEO_PARAM_AVCTYPE::bWeightedPPrediction	omx/openmax/OMX_Video.h	/^    OMX_BOOL bWeightedPPrediction; $/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE	access:public
OMX_VIDEO_PARAM_AVCTYPE::bconstIpred	omx/openmax/OMX_Video.h	/^    OMX_BOOL bconstIpred ;$/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE	access:public
OMX_VIDEO_PARAM_AVCTYPE::eLevel	omx/openmax/OMX_Video.h	/^	OMX_VIDEO_AVCLEVELTYPE eLevel; $/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE	access:public
OMX_VIDEO_PARAM_AVCTYPE::eLoopFilterMode	omx/openmax/OMX_Video.h	/^	OMX_VIDEO_AVCLOOPFILTERTYPE eLoopFilterMode;$/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE	access:public
OMX_VIDEO_PARAM_AVCTYPE::eProfile	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCPROFILETYPE eProfile;$/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE	access:public
OMX_VIDEO_PARAM_AVCTYPE::nAllowedPictureTypes	omx/openmax/OMX_Video.h	/^    OMX_U32 nAllowedPictureTypes;  $/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE	access:public
OMX_VIDEO_PARAM_AVCTYPE::nBFrames	omx/openmax/OMX_Video.h	/^    OMX_U32 nBFrames;     $/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE	access:public
OMX_VIDEO_PARAM_AVCTYPE::nCabacInitIdc	omx/openmax/OMX_Video.h	/^	OMX_U32 nCabacInitIdc;$/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE	access:public
OMX_VIDEO_PARAM_AVCTYPE::nPFrames	omx/openmax/OMX_Video.h	/^    OMX_U32 nPFrames;     $/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE	access:public
OMX_VIDEO_PARAM_AVCTYPE::nPortIndex	omx/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;            $/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE	access:public
OMX_VIDEO_PARAM_AVCTYPE::nRefFrames	omx/openmax/OMX_Video.h	/^    OMX_U32 nRefFrames;  $/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE	access:public
OMX_VIDEO_PARAM_AVCTYPE::nRefIdx10ActiveMinus1	omx/openmax/OMX_Video.h	/^	OMX_U32 nRefIdx10ActiveMinus1;$/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE	access:public
OMX_VIDEO_PARAM_AVCTYPE::nRefIdx11ActiveMinus1	omx/openmax/OMX_Video.h	/^	OMX_U32 nRefIdx11ActiveMinus1;$/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE	access:public
OMX_VIDEO_PARAM_AVCTYPE::nSize	omx/openmax/OMX_Video.h	/^    OMX_U32 nSize;                 $/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE	access:public
OMX_VIDEO_PARAM_AVCTYPE::nSliceHeaderSpacing	omx/openmax/OMX_Video.h	/^    OMX_U32 nSliceHeaderSpacing;  $/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE	access:public
OMX_VIDEO_PARAM_AVCTYPE::nVersion	omx/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;      $/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE	access:public
OMX_VIDEO_PARAM_AVCTYPE::nWeightedBipredicitonMode	omx/openmax/OMX_Video.h	/^    OMX_U32 nWeightedBipredicitonMode; $/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE	access:public
OMX_VIDEO_PARAM_BITRATETYPE	omx/openmax/OMX_Video.h	/^typedef struct OMX_VIDEO_PARAM_BITRATETYPE {$/;"	s
OMX_VIDEO_PARAM_BITRATETYPE	omx/openmax/OMX_Video.h	/^} OMX_VIDEO_PARAM_BITRATETYPE;$/;"	t	typeref:struct:OMX_VIDEO_PARAM_BITRATETYPE
OMX_VIDEO_PARAM_BITRATETYPE::eControlRate	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_CONTROLRATETYPE eControlRate; $/;"	m	struct:OMX_VIDEO_PARAM_BITRATETYPE	access:public
OMX_VIDEO_PARAM_BITRATETYPE::nPortIndex	omx/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;                     $/;"	m	struct:OMX_VIDEO_PARAM_BITRATETYPE	access:public
OMX_VIDEO_PARAM_BITRATETYPE::nSize	omx/openmax/OMX_Video.h	/^    OMX_U32 nSize;                          $/;"	m	struct:OMX_VIDEO_PARAM_BITRATETYPE	access:public
OMX_VIDEO_PARAM_BITRATETYPE::nTargetBitrate	omx/openmax/OMX_Video.h	/^    OMX_U32 nTargetBitrate;                 $/;"	m	struct:OMX_VIDEO_PARAM_BITRATETYPE	access:public
OMX_VIDEO_PARAM_BITRATETYPE::nVersion	omx/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;               $/;"	m	struct:OMX_VIDEO_PARAM_BITRATETYPE	access:public
OMX_VIDEO_PARAM_ERRORCORRECTIONTYPE	omx/openmax/OMX_Video.h	/^typedef struct OMX_VIDEO_PARAM_ERRORCORRECTIONTYPE {$/;"	s
OMX_VIDEO_PARAM_ERRORCORRECTIONTYPE	omx/openmax/OMX_Video.h	/^} OMX_VIDEO_PARAM_ERRORCORRECTIONTYPE;$/;"	t	typeref:struct:OMX_VIDEO_PARAM_ERRORCORRECTIONTYPE
OMX_VIDEO_PARAM_ERRORCORRECTIONTYPE::bEnableDataPartitioning	omx/openmax/OMX_Video.h	/^    OMX_BOOL bEnableDataPartitioning;$/;"	m	struct:OMX_VIDEO_PARAM_ERRORCORRECTIONTYPE	access:public
OMX_VIDEO_PARAM_ERRORCORRECTIONTYPE::bEnableHEC	omx/openmax/OMX_Video.h	/^    OMX_BOOL bEnableHEC;$/;"	m	struct:OMX_VIDEO_PARAM_ERRORCORRECTIONTYPE	access:public
OMX_VIDEO_PARAM_ERRORCORRECTIONTYPE::bEnableRVLC	omx/openmax/OMX_Video.h	/^    OMX_BOOL bEnableRVLC;$/;"	m	struct:OMX_VIDEO_PARAM_ERRORCORRECTIONTYPE	access:public
OMX_VIDEO_PARAM_ERRORCORRECTIONTYPE::bEnableResync	omx/openmax/OMX_Video.h	/^    OMX_BOOL bEnableResync;$/;"	m	struct:OMX_VIDEO_PARAM_ERRORCORRECTIONTYPE	access:public
OMX_VIDEO_PARAM_ERRORCORRECTIONTYPE::nPortIndex	omx/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_VIDEO_PARAM_ERRORCORRECTIONTYPE	access:public
OMX_VIDEO_PARAM_ERRORCORRECTIONTYPE::nResynchMarkerSpacing	omx/openmax/OMX_Video.h	/^    OMX_U32  nResynchMarkerSpacing;$/;"	m	struct:OMX_VIDEO_PARAM_ERRORCORRECTIONTYPE	access:public
OMX_VIDEO_PARAM_ERRORCORRECTIONTYPE::nSize	omx/openmax/OMX_Video.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_VIDEO_PARAM_ERRORCORRECTIONTYPE	access:public
OMX_VIDEO_PARAM_ERRORCORRECTIONTYPE::nVersion	omx/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_VIDEO_PARAM_ERRORCORRECTIONTYPE	access:public
OMX_VIDEO_PARAM_H263TYPE	omx/openmax/OMX_Video.h	/^typedef struct OMX_VIDEO_PARAM_H263TYPE {$/;"	s
OMX_VIDEO_PARAM_H263TYPE	omx/openmax/OMX_Video.h	/^} OMX_VIDEO_PARAM_H263TYPE;$/;"	t	typeref:struct:OMX_VIDEO_PARAM_H263TYPE
OMX_VIDEO_PARAM_H263TYPE::bForceRoundingTypeToZero	omx/openmax/OMX_Video.h	/^    OMX_BOOL bForceRoundingTypeToZero;$/;"	m	struct:OMX_VIDEO_PARAM_H263TYPE	access:public
OMX_VIDEO_PARAM_H263TYPE::bPLUSPTYPEAllowed	omx/openmax/OMX_Video.h	/^    OMX_BOOL bPLUSPTYPEAllowed;$/;"	m	struct:OMX_VIDEO_PARAM_H263TYPE	access:public
OMX_VIDEO_PARAM_H263TYPE::eLevel	omx/openmax/OMX_Video.h	/^	OMX_VIDEO_H263LEVELTYPE eLevel;$/;"	m	struct:OMX_VIDEO_PARAM_H263TYPE	access:public
OMX_VIDEO_PARAM_H263TYPE::eProfile	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_H263PROFILETYPE eProfile;$/;"	m	struct:OMX_VIDEO_PARAM_H263TYPE	access:public
OMX_VIDEO_PARAM_H263TYPE::nAllowedPictureTypes	omx/openmax/OMX_Video.h	/^    OMX_U32 nAllowedPictureTypes;$/;"	m	struct:OMX_VIDEO_PARAM_H263TYPE	access:public
OMX_VIDEO_PARAM_H263TYPE::nBFrames	omx/openmax/OMX_Video.h	/^    OMX_U32 nBFrames;$/;"	m	struct:OMX_VIDEO_PARAM_H263TYPE	access:public
OMX_VIDEO_PARAM_H263TYPE::nGOBHeaderInterval	omx/openmax/OMX_Video.h	/^    OMX_U32 nGOBHeaderInterval;$/;"	m	struct:OMX_VIDEO_PARAM_H263TYPE	access:public
OMX_VIDEO_PARAM_H263TYPE::nPFrames	omx/openmax/OMX_Video.h	/^    OMX_U32 nPFrames;$/;"	m	struct:OMX_VIDEO_PARAM_H263TYPE	access:public
OMX_VIDEO_PARAM_H263TYPE::nPictureHeaderRepetition	omx/openmax/OMX_Video.h	/^    OMX_U32 nPictureHeaderRepetition;$/;"	m	struct:OMX_VIDEO_PARAM_H263TYPE	access:public
OMX_VIDEO_PARAM_H263TYPE::nPortIndex	omx/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_VIDEO_PARAM_H263TYPE	access:public
OMX_VIDEO_PARAM_H263TYPE::nSize	omx/openmax/OMX_Video.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_VIDEO_PARAM_H263TYPE	access:public
OMX_VIDEO_PARAM_H263TYPE::nVersion	omx/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_VIDEO_PARAM_H263TYPE	access:public
OMX_VIDEO_PARAM_INTRAREFRESHTYPE	omx/openmax/OMX_Video.h	/^typedef struct OMX_VIDEO_PARAM_INTRAREFRESHTYPE {$/;"	s
OMX_VIDEO_PARAM_INTRAREFRESHTYPE	omx/openmax/OMX_Video.h	/^} OMX_VIDEO_PARAM_INTRAREFRESHTYPE;$/;"	t	typeref:struct:OMX_VIDEO_PARAM_INTRAREFRESHTYPE
OMX_VIDEO_PARAM_INTRAREFRESHTYPE::eRefreshMode	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_INTRAREFRESHTYPE eRefreshMode;$/;"	m	struct:OMX_VIDEO_PARAM_INTRAREFRESHTYPE	access:public
OMX_VIDEO_PARAM_INTRAREFRESHTYPE::nAirMBs	omx/openmax/OMX_Video.h	/^    OMX_U32 nAirMBs;$/;"	m	struct:OMX_VIDEO_PARAM_INTRAREFRESHTYPE	access:public
OMX_VIDEO_PARAM_INTRAREFRESHTYPE::nAirRef	omx/openmax/OMX_Video.h	/^    OMX_U32 nAirRef;$/;"	m	struct:OMX_VIDEO_PARAM_INTRAREFRESHTYPE	access:public
OMX_VIDEO_PARAM_INTRAREFRESHTYPE::nCirMBs	omx/openmax/OMX_Video.h	/^    OMX_U32 nCirMBs;$/;"	m	struct:OMX_VIDEO_PARAM_INTRAREFRESHTYPE	access:public
OMX_VIDEO_PARAM_INTRAREFRESHTYPE::nPortIndex	omx/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_VIDEO_PARAM_INTRAREFRESHTYPE	access:public
OMX_VIDEO_PARAM_INTRAREFRESHTYPE::nSize	omx/openmax/OMX_Video.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_VIDEO_PARAM_INTRAREFRESHTYPE	access:public
OMX_VIDEO_PARAM_INTRAREFRESHTYPE::nVersion	omx/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_VIDEO_PARAM_INTRAREFRESHTYPE	access:public
OMX_VIDEO_PARAM_MOTIONVECTORTYPE	omx/openmax/OMX_Video.h	/^typedef struct OMX_VIDEO_PARAM_MOTIONVECTORTYPE {$/;"	s
OMX_VIDEO_PARAM_MOTIONVECTORTYPE	omx/openmax/OMX_Video.h	/^} OMX_VIDEO_PARAM_MOTIONVECTORTYPE;$/;"	t	typeref:struct:OMX_VIDEO_PARAM_MOTIONVECTORTYPE
OMX_VIDEO_PARAM_MOTIONVECTORTYPE::bFourMV	omx/openmax/OMX_Video.h	/^    OMX_BOOL bFourMV;$/;"	m	struct:OMX_VIDEO_PARAM_MOTIONVECTORTYPE	access:public
OMX_VIDEO_PARAM_MOTIONVECTORTYPE::bUnrestrictedMVs	omx/openmax/OMX_Video.h	/^    OMX_BOOL bUnrestrictedMVs;$/;"	m	struct:OMX_VIDEO_PARAM_MOTIONVECTORTYPE	access:public
OMX_VIDEO_PARAM_MOTIONVECTORTYPE::eAccuracy	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_MOTIONVECTORTYPE eAccuracy;$/;"	m	struct:OMX_VIDEO_PARAM_MOTIONVECTORTYPE	access:public
OMX_VIDEO_PARAM_MOTIONVECTORTYPE::nPortIndex	omx/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_VIDEO_PARAM_MOTIONVECTORTYPE	access:public
OMX_VIDEO_PARAM_MOTIONVECTORTYPE::nSize	omx/openmax/OMX_Video.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_VIDEO_PARAM_MOTIONVECTORTYPE	access:public
OMX_VIDEO_PARAM_MOTIONVECTORTYPE::nVersion	omx/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_VIDEO_PARAM_MOTIONVECTORTYPE	access:public
OMX_VIDEO_PARAM_MOTIONVECTORTYPE::sXSearchRange	omx/openmax/OMX_Video.h	/^    OMX_S32 sXSearchRange;$/;"	m	struct:OMX_VIDEO_PARAM_MOTIONVECTORTYPE	access:public
OMX_VIDEO_PARAM_MOTIONVECTORTYPE::sYSearchRange	omx/openmax/OMX_Video.h	/^    OMX_S32 sYSearchRange;$/;"	m	struct:OMX_VIDEO_PARAM_MOTIONVECTORTYPE	access:public
OMX_VIDEO_PARAM_MPEG2TYPE	omx/openmax/OMX_Video.h	/^typedef struct OMX_VIDEO_PARAM_MPEG2TYPE {$/;"	s
OMX_VIDEO_PARAM_MPEG2TYPE	omx/openmax/OMX_Video.h	/^} OMX_VIDEO_PARAM_MPEG2TYPE;$/;"	t	typeref:struct:OMX_VIDEO_PARAM_MPEG2TYPE
OMX_VIDEO_PARAM_MPEG2TYPE::eLevel	omx/openmax/OMX_Video.h	/^	OMX_VIDEO_MPEG2LEVELTYPE eLevel;   $/;"	m	struct:OMX_VIDEO_PARAM_MPEG2TYPE	access:public
OMX_VIDEO_PARAM_MPEG2TYPE::eProfile	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG2PROFILETYPE eProfile;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG2TYPE	access:public
OMX_VIDEO_PARAM_MPEG2TYPE::nBFrames	omx/openmax/OMX_Video.h	/^    OMX_U32 nBFrames;        $/;"	m	struct:OMX_VIDEO_PARAM_MPEG2TYPE	access:public
OMX_VIDEO_PARAM_MPEG2TYPE::nPFrames	omx/openmax/OMX_Video.h	/^    OMX_U32 nPFrames;        $/;"	m	struct:OMX_VIDEO_PARAM_MPEG2TYPE	access:public
OMX_VIDEO_PARAM_MPEG2TYPE::nPortIndex	omx/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;      $/;"	m	struct:OMX_VIDEO_PARAM_MPEG2TYPE	access:public
OMX_VIDEO_PARAM_MPEG2TYPE::nSize	omx/openmax/OMX_Video.h	/^    OMX_U32 nSize;           $/;"	m	struct:OMX_VIDEO_PARAM_MPEG2TYPE	access:public
OMX_VIDEO_PARAM_MPEG2TYPE::nVersion	omx/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG2TYPE	access:public
OMX_VIDEO_PARAM_MPEG4TYPE	omx/openmax/OMX_Video.h	/^typedef struct OMX_VIDEO_PARAM_MPEG4TYPE {$/;"	s
OMX_VIDEO_PARAM_MPEG4TYPE	omx/openmax/OMX_Video.h	/^} OMX_VIDEO_PARAM_MPEG4TYPE;$/;"	t	typeref:struct:OMX_VIDEO_PARAM_MPEG4TYPE
OMX_VIDEO_PARAM_MPEG4TYPE::bACPred	omx/openmax/OMX_Video.h	/^    OMX_BOOL bACPred;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG4TYPE	access:public
OMX_VIDEO_PARAM_MPEG4TYPE::bGov	omx/openmax/OMX_Video.h	/^    OMX_BOOL bGov;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG4TYPE	access:public
OMX_VIDEO_PARAM_MPEG4TYPE::bReversibleVLC	omx/openmax/OMX_Video.h	/^    OMX_BOOL bReversibleVLC;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG4TYPE	access:public
OMX_VIDEO_PARAM_MPEG4TYPE::bSVH	omx/openmax/OMX_Video.h	/^    OMX_BOOL bSVH;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG4TYPE	access:public
OMX_VIDEO_PARAM_MPEG4TYPE::eLevel	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4LEVELTYPE eLevel;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG4TYPE	access:public
OMX_VIDEO_PARAM_MPEG4TYPE::eProfile	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4PROFILETYPE eProfile;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG4TYPE	access:public
OMX_VIDEO_PARAM_MPEG4TYPE::nAllowedPictureTypes	omx/openmax/OMX_Video.h	/^    OMX_U32 nAllowedPictureTypes;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG4TYPE	access:public
OMX_VIDEO_PARAM_MPEG4TYPE::nBFrames	omx/openmax/OMX_Video.h	/^    OMX_U32 nBFrames;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG4TYPE	access:public
OMX_VIDEO_PARAM_MPEG4TYPE::nHeaderExtension	omx/openmax/OMX_Video.h	/^    OMX_U32 nHeaderExtension;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG4TYPE	access:public
OMX_VIDEO_PARAM_MPEG4TYPE::nIDCVLCThreshold	omx/openmax/OMX_Video.h	/^    OMX_U32 nIDCVLCThreshold;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG4TYPE	access:public
OMX_VIDEO_PARAM_MPEG4TYPE::nMaxPacketSize	omx/openmax/OMX_Video.h	/^    OMX_U32 nMaxPacketSize;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG4TYPE	access:public
OMX_VIDEO_PARAM_MPEG4TYPE::nPFrames	omx/openmax/OMX_Video.h	/^    OMX_U32 nPFrames;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG4TYPE	access:public
OMX_VIDEO_PARAM_MPEG4TYPE::nPortIndex	omx/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG4TYPE	access:public
OMX_VIDEO_PARAM_MPEG4TYPE::nSize	omx/openmax/OMX_Video.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG4TYPE	access:public
OMX_VIDEO_PARAM_MPEG4TYPE::nSliceHeaderSpacing	omx/openmax/OMX_Video.h	/^    OMX_U32 nSliceHeaderSpacing;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG4TYPE	access:public
OMX_VIDEO_PARAM_MPEG4TYPE::nTimeIncRes	omx/openmax/OMX_Video.h	/^    OMX_U32 nTimeIncRes;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG4TYPE	access:public
OMX_VIDEO_PARAM_MPEG4TYPE::nVersion	omx/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG4TYPE	access:public
OMX_VIDEO_PARAM_PORTFORMATTYPE	omx/openmax/OMX_Video.h	/^typedef struct OMX_VIDEO_PARAM_PORTFORMATTYPE {$/;"	s
OMX_VIDEO_PARAM_PORTFORMATTYPE	omx/openmax/OMX_Video.h	/^} OMX_VIDEO_PARAM_PORTFORMATTYPE;$/;"	t	typeref:struct:OMX_VIDEO_PARAM_PORTFORMATTYPE
OMX_VIDEO_PARAM_PORTFORMATTYPE::eColorFormat	omx/openmax/OMX_Video.h	/^    OMX_COLOR_FORMATTYPE eColorFormat;$/;"	m	struct:OMX_VIDEO_PARAM_PORTFORMATTYPE	access:public
OMX_VIDEO_PARAM_PORTFORMATTYPE::eCompressionFormat	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_CODINGTYPE eCompressionFormat; $/;"	m	struct:OMX_VIDEO_PARAM_PORTFORMATTYPE	access:public
OMX_VIDEO_PARAM_PORTFORMATTYPE::nIndex	omx/openmax/OMX_Video.h	/^    OMX_U32 nIndex;$/;"	m	struct:OMX_VIDEO_PARAM_PORTFORMATTYPE	access:public
OMX_VIDEO_PARAM_PORTFORMATTYPE::nPortIndex	omx/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_VIDEO_PARAM_PORTFORMATTYPE	access:public
OMX_VIDEO_PARAM_PORTFORMATTYPE::nSize	omx/openmax/OMX_Video.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_VIDEO_PARAM_PORTFORMATTYPE	access:public
OMX_VIDEO_PARAM_PORTFORMATTYPE::nVersion	omx/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_VIDEO_PARAM_PORTFORMATTYPE	access:public
OMX_VIDEO_PARAM_PORTFORMATTYPE::xFramerate	omx/openmax/OMX_Video.h	/^    OMX_U32 xFramerate;$/;"	m	struct:OMX_VIDEO_PARAM_PORTFORMATTYPE	access:public
OMX_VIDEO_PARAM_PROFILELEVELTYPE	omx/openmax/OMX_Video.h	/^typedef struct OMX_VIDEO_PARAM_PROFILELEVELTYPE {$/;"	s
OMX_VIDEO_PARAM_PROFILELEVELTYPE	omx/openmax/OMX_Video.h	/^} OMX_VIDEO_PARAM_PROFILELEVELTYPE;$/;"	t	typeref:struct:OMX_VIDEO_PARAM_PROFILELEVELTYPE
OMX_VIDEO_PARAM_PROFILELEVELTYPE::eLevel	omx/openmax/OMX_Video.h	/^   OMX_U32 eLevel;        \/**< type is OMX_VIDEO_AVCLEVELTYPE, OMX_VIDEO_H263LEVELTYPE, $/;"	m	struct:OMX_VIDEO_PARAM_PROFILELEVELTYPE	access:public
OMX_VIDEO_PARAM_PROFILELEVELTYPE::eProfile	omx/openmax/OMX_Video.h	/^   OMX_U32 eProfile;      \/**< type is OMX_VIDEO_AVCPROFILETYPE, OMX_VIDEO_H263PROFILETYPE, $/;"	m	struct:OMX_VIDEO_PARAM_PROFILELEVELTYPE	access:public
OMX_VIDEO_PARAM_PROFILELEVELTYPE::nPortIndex	omx/openmax/OMX_Video.h	/^   OMX_U32 nPortIndex;            $/;"	m	struct:OMX_VIDEO_PARAM_PROFILELEVELTYPE	access:public
OMX_VIDEO_PARAM_PROFILELEVELTYPE::nProfileIndex	omx/openmax/OMX_Video.h	/^   OMX_U32 nProfileIndex; \/**< Used to query for individual profile support information,$/;"	m	struct:OMX_VIDEO_PARAM_PROFILELEVELTYPE	access:public
OMX_VIDEO_PARAM_PROFILELEVELTYPE::nSize	omx/openmax/OMX_Video.h	/^   OMX_U32 nSize;                 $/;"	m	struct:OMX_VIDEO_PARAM_PROFILELEVELTYPE	access:public
OMX_VIDEO_PARAM_PROFILELEVELTYPE::nVersion	omx/openmax/OMX_Video.h	/^   OMX_VERSIONTYPE nVersion;      $/;"	m	struct:OMX_VIDEO_PARAM_PROFILELEVELTYPE	access:public
OMX_VIDEO_PARAM_QUANTIZATIONTYPE	omx/openmax/OMX_Video.h	/^typedef struct OMX_VIDEO_PARAM_QUANTIZATIONTYPE {$/;"	s
OMX_VIDEO_PARAM_QUANTIZATIONTYPE	omx/openmax/OMX_Video.h	/^} OMX_VIDEO_PARAM_QUANTIZATIONTYPE;$/;"	t	typeref:struct:OMX_VIDEO_PARAM_QUANTIZATIONTYPE
OMX_VIDEO_PARAM_QUANTIZATIONTYPE::nPortIndex	omx/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_VIDEO_PARAM_QUANTIZATIONTYPE	access:public
OMX_VIDEO_PARAM_QUANTIZATIONTYPE::nQpB	omx/openmax/OMX_Video.h	/^    OMX_U32 nQpB;$/;"	m	struct:OMX_VIDEO_PARAM_QUANTIZATIONTYPE	access:public
OMX_VIDEO_PARAM_QUANTIZATIONTYPE::nQpI	omx/openmax/OMX_Video.h	/^    OMX_U32 nQpI;$/;"	m	struct:OMX_VIDEO_PARAM_QUANTIZATIONTYPE	access:public
OMX_VIDEO_PARAM_QUANTIZATIONTYPE::nQpP	omx/openmax/OMX_Video.h	/^    OMX_U32 nQpP;$/;"	m	struct:OMX_VIDEO_PARAM_QUANTIZATIONTYPE	access:public
OMX_VIDEO_PARAM_QUANTIZATIONTYPE::nSize	omx/openmax/OMX_Video.h	/^    OMX_U32 nSize;            $/;"	m	struct:OMX_VIDEO_PARAM_QUANTIZATIONTYPE	access:public
OMX_VIDEO_PARAM_QUANTIZATIONTYPE::nVersion	omx/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_VIDEO_PARAM_QUANTIZATIONTYPE	access:public
OMX_VIDEO_PARAM_RVTYPE	omx/openmax/OMX_Video.h	/^typedef struct OMX_VIDEO_PARAM_RVTYPE {$/;"	s
OMX_VIDEO_PARAM_RVTYPE	omx/openmax/OMX_Video.h	/^} OMX_VIDEO_PARAM_RVTYPE;$/;"	t	typeref:struct:OMX_VIDEO_PARAM_RVTYPE
OMX_VIDEO_PARAM_RVTYPE::bEnableLatencyMode	omx/openmax/OMX_Video.h	/^    OMX_BOOL bEnableLatencyMode;$/;"	m	struct:OMX_VIDEO_PARAM_RVTYPE	access:public
OMX_VIDEO_PARAM_RVTYPE::bEnablePostFilter	omx/openmax/OMX_Video.h	/^    OMX_BOOL bEnablePostFilter;$/;"	m	struct:OMX_VIDEO_PARAM_RVTYPE	access:public
OMX_VIDEO_PARAM_RVTYPE::bEnableTemporalInterpolation	omx/openmax/OMX_Video.h	/^    OMX_BOOL bEnableTemporalInterpolation;$/;"	m	struct:OMX_VIDEO_PARAM_RVTYPE	access:public
OMX_VIDEO_PARAM_RVTYPE::eFormat	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_RVFORMATTYPE eFormat;$/;"	m	struct:OMX_VIDEO_PARAM_RVTYPE	access:public
OMX_VIDEO_PARAM_RVTYPE::nBitsPerPixel	omx/openmax/OMX_Video.h	/^    OMX_U16 nBitsPerPixel;$/;"	m	struct:OMX_VIDEO_PARAM_RVTYPE	access:public
OMX_VIDEO_PARAM_RVTYPE::nBitstreamFlags	omx/openmax/OMX_Video.h	/^    OMX_U32 nBitstreamFlags;$/;"	m	struct:OMX_VIDEO_PARAM_RVTYPE	access:public
OMX_VIDEO_PARAM_RVTYPE::nBitstreamVersion	omx/openmax/OMX_Video.h	/^    OMX_U32 nBitstreamVersion;$/;"	m	struct:OMX_VIDEO_PARAM_RVTYPE	access:public
OMX_VIDEO_PARAM_RVTYPE::nFrameRate	omx/openmax/OMX_Video.h	/^    OMX_U32 nFrameRate;$/;"	m	struct:OMX_VIDEO_PARAM_RVTYPE	access:public
OMX_VIDEO_PARAM_RVTYPE::nMaxEncodeFrameSize	omx/openmax/OMX_Video.h	/^    OMX_U32 nMaxEncodeFrameSize;$/;"	m	struct:OMX_VIDEO_PARAM_RVTYPE	access:public
OMX_VIDEO_PARAM_RVTYPE::nPaddedHeight	omx/openmax/OMX_Video.h	/^    OMX_U16 nPaddedHeight;$/;"	m	struct:OMX_VIDEO_PARAM_RVTYPE	access:public
OMX_VIDEO_PARAM_RVTYPE::nPaddedWidth	omx/openmax/OMX_Video.h	/^    OMX_U16 nPaddedWidth;$/;"	m	struct:OMX_VIDEO_PARAM_RVTYPE	access:public
OMX_VIDEO_PARAM_RVTYPE::nPortIndex	omx/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_VIDEO_PARAM_RVTYPE	access:public
OMX_VIDEO_PARAM_RVTYPE::nSize	omx/openmax/OMX_Video.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_VIDEO_PARAM_RVTYPE	access:public
OMX_VIDEO_PARAM_RVTYPE::nVersion	omx/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_VIDEO_PARAM_RVTYPE	access:public
OMX_VIDEO_PARAM_VBSMCTYPE	omx/openmax/OMX_Video.h	/^typedef struct OMX_VIDEO_PARAM_VBSMCTYPE {$/;"	s
OMX_VIDEO_PARAM_VBSMCTYPE	omx/openmax/OMX_Video.h	/^} OMX_VIDEO_PARAM_VBSMCTYPE;$/;"	t	typeref:struct:OMX_VIDEO_PARAM_VBSMCTYPE
OMX_VIDEO_PARAM_VBSMCTYPE::b16x16	omx/openmax/OMX_Video.h	/^    OMX_BOOL b16x16; $/;"	m	struct:OMX_VIDEO_PARAM_VBSMCTYPE	access:public
OMX_VIDEO_PARAM_VBSMCTYPE::b16x8	omx/openmax/OMX_Video.h	/^    OMX_BOOL b16x8; $/;"	m	struct:OMX_VIDEO_PARAM_VBSMCTYPE	access:public
OMX_VIDEO_PARAM_VBSMCTYPE::b4x4	omx/openmax/OMX_Video.h	/^    OMX_BOOL b4x4;$/;"	m	struct:OMX_VIDEO_PARAM_VBSMCTYPE	access:public
OMX_VIDEO_PARAM_VBSMCTYPE::b4x8	omx/openmax/OMX_Video.h	/^    OMX_BOOL b4x8;$/;"	m	struct:OMX_VIDEO_PARAM_VBSMCTYPE	access:public
OMX_VIDEO_PARAM_VBSMCTYPE::b8x16	omx/openmax/OMX_Video.h	/^    OMX_BOOL b8x16;$/;"	m	struct:OMX_VIDEO_PARAM_VBSMCTYPE	access:public
OMX_VIDEO_PARAM_VBSMCTYPE::b8x4	omx/openmax/OMX_Video.h	/^    OMX_BOOL b8x4;$/;"	m	struct:OMX_VIDEO_PARAM_VBSMCTYPE	access:public
OMX_VIDEO_PARAM_VBSMCTYPE::b8x8	omx/openmax/OMX_Video.h	/^    OMX_BOOL b8x8;$/;"	m	struct:OMX_VIDEO_PARAM_VBSMCTYPE	access:public
OMX_VIDEO_PARAM_VBSMCTYPE::nPortIndex	omx/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;       $/;"	m	struct:OMX_VIDEO_PARAM_VBSMCTYPE	access:public
OMX_VIDEO_PARAM_VBSMCTYPE::nSize	omx/openmax/OMX_Video.h	/^    OMX_U32 nSize; $/;"	m	struct:OMX_VIDEO_PARAM_VBSMCTYPE	access:public
OMX_VIDEO_PARAM_VBSMCTYPE::nVersion	omx/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion; $/;"	m	struct:OMX_VIDEO_PARAM_VBSMCTYPE	access:public
OMX_VIDEO_PARAM_VIDEOFASTUPDATETYPE	omx/openmax/OMX_Video.h	/^typedef struct OMX_VIDEO_PARAM_VIDEOFASTUPDATETYPE {$/;"	s
OMX_VIDEO_PARAM_VIDEOFASTUPDATETYPE	omx/openmax/OMX_Video.h	/^} OMX_VIDEO_PARAM_VIDEOFASTUPDATETYPE;$/;"	t	typeref:struct:OMX_VIDEO_PARAM_VIDEOFASTUPDATETYPE
OMX_VIDEO_PARAM_VIDEOFASTUPDATETYPE::bEnableVFU	omx/openmax/OMX_Video.h	/^    OMX_BOOL bEnableVFU;      $/;"	m	struct:OMX_VIDEO_PARAM_VIDEOFASTUPDATETYPE	access:public
OMX_VIDEO_PARAM_VIDEOFASTUPDATETYPE::nFirstGOB	omx/openmax/OMX_Video.h	/^    OMX_U32 nFirstGOB;                            $/;"	m	struct:OMX_VIDEO_PARAM_VIDEOFASTUPDATETYPE	access:public
OMX_VIDEO_PARAM_VIDEOFASTUPDATETYPE::nFirstMB	omx/openmax/OMX_Video.h	/^    OMX_U32 nFirstMB;                            $/;"	m	struct:OMX_VIDEO_PARAM_VIDEOFASTUPDATETYPE	access:public
OMX_VIDEO_PARAM_VIDEOFASTUPDATETYPE::nNumMBs	omx/openmax/OMX_Video.h	/^    OMX_U32 nNumMBs;                                  $/;"	m	struct:OMX_VIDEO_PARAM_VIDEOFASTUPDATETYPE	access:public
OMX_VIDEO_PARAM_VIDEOFASTUPDATETYPE::nPortIndex	omx/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;       $/;"	m	struct:OMX_VIDEO_PARAM_VIDEOFASTUPDATETYPE	access:public
OMX_VIDEO_PARAM_VIDEOFASTUPDATETYPE::nSize	omx/openmax/OMX_Video.h	/^    OMX_U32 nSize;            $/;"	m	struct:OMX_VIDEO_PARAM_VIDEOFASTUPDATETYPE	access:public
OMX_VIDEO_PARAM_VIDEOFASTUPDATETYPE::nVersion	omx/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion; $/;"	m	struct:OMX_VIDEO_PARAM_VIDEOFASTUPDATETYPE	access:public
OMX_VIDEO_PARAM_WMVTYPE	omx/openmax/OMX_Video.h	/^typedef struct OMX_VIDEO_PARAM_WMVTYPE {$/;"	s
OMX_VIDEO_PARAM_WMVTYPE	omx/openmax/OMX_Video.h	/^} OMX_VIDEO_PARAM_WMVTYPE;$/;"	t	typeref:struct:OMX_VIDEO_PARAM_WMVTYPE
OMX_VIDEO_PARAM_WMVTYPE::eFormat	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_WMVFORMATTYPE eFormat;$/;"	m	struct:OMX_VIDEO_PARAM_WMVTYPE	access:public
OMX_VIDEO_PARAM_WMVTYPE::nPortIndex	omx/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_VIDEO_PARAM_WMVTYPE	access:public
OMX_VIDEO_PARAM_WMVTYPE::nSize	omx/openmax/OMX_Video.h	/^    OMX_U32 nSize; $/;"	m	struct:OMX_VIDEO_PARAM_WMVTYPE	access:public
OMX_VIDEO_PARAM_WMVTYPE::nVersion	omx/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_VIDEO_PARAM_WMVTYPE	access:public
OMX_VIDEO_PICTURETYPE	omx/openmax/OMX_Video.h	/^typedef enum OMX_VIDEO_PICTURETYPE {$/;"	g
OMX_VIDEO_PICTURETYPE	omx/openmax/OMX_Video.h	/^} OMX_VIDEO_PICTURETYPE;$/;"	t	typeref:enum:OMX_VIDEO_PICTURETYPE
OMX_VIDEO_PORTDEFINITIONTYPE	omx/openmax/OMX_Video.h	/^typedef struct OMX_VIDEO_PORTDEFINITIONTYPE {$/;"	s
OMX_VIDEO_PORTDEFINITIONTYPE	omx/openmax/OMX_Video.h	/^} OMX_VIDEO_PORTDEFINITIONTYPE;$/;"	t	typeref:struct:OMX_VIDEO_PORTDEFINITIONTYPE
OMX_VIDEO_PORTDEFINITIONTYPE::bFlagErrorConcealment	omx/openmax/OMX_Video.h	/^    OMX_BOOL bFlagErrorConcealment;$/;"	m	struct:OMX_VIDEO_PORTDEFINITIONTYPE	access:public
OMX_VIDEO_PORTDEFINITIONTYPE::cMIMEType	omx/openmax/OMX_Video.h	/^    OMX_STRING cMIMEType;$/;"	m	struct:OMX_VIDEO_PORTDEFINITIONTYPE	access:public
OMX_VIDEO_PORTDEFINITIONTYPE::eColorFormat	omx/openmax/OMX_Video.h	/^    OMX_COLOR_FORMATTYPE eColorFormat;$/;"	m	struct:OMX_VIDEO_PORTDEFINITIONTYPE	access:public
OMX_VIDEO_PORTDEFINITIONTYPE::eCompressionFormat	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_CODINGTYPE eCompressionFormat;$/;"	m	struct:OMX_VIDEO_PORTDEFINITIONTYPE	access:public
OMX_VIDEO_PORTDEFINITIONTYPE::nBitrate	omx/openmax/OMX_Video.h	/^    OMX_U32 nBitrate;$/;"	m	struct:OMX_VIDEO_PORTDEFINITIONTYPE	access:public
OMX_VIDEO_PORTDEFINITIONTYPE::nFrameHeight	omx/openmax/OMX_Video.h	/^    OMX_U32 nFrameHeight;$/;"	m	struct:OMX_VIDEO_PORTDEFINITIONTYPE	access:public
OMX_VIDEO_PORTDEFINITIONTYPE::nFrameWidth	omx/openmax/OMX_Video.h	/^    OMX_U32 nFrameWidth;$/;"	m	struct:OMX_VIDEO_PORTDEFINITIONTYPE	access:public
OMX_VIDEO_PORTDEFINITIONTYPE::nSliceHeight	omx/openmax/OMX_Video.h	/^    OMX_U32 nSliceHeight;$/;"	m	struct:OMX_VIDEO_PORTDEFINITIONTYPE	access:public
OMX_VIDEO_PORTDEFINITIONTYPE::nStride	omx/openmax/OMX_Video.h	/^    OMX_S32 nStride;$/;"	m	struct:OMX_VIDEO_PORTDEFINITIONTYPE	access:public
OMX_VIDEO_PORTDEFINITIONTYPE::pNativeRender	omx/openmax/OMX_Video.h	/^    OMX_NATIVE_DEVICETYPE pNativeRender;$/;"	m	struct:OMX_VIDEO_PORTDEFINITIONTYPE	access:public
OMX_VIDEO_PORTDEFINITIONTYPE::pNativeWindow	omx/openmax/OMX_Video.h	/^    OMX_NATIVE_WINDOWTYPE pNativeWindow;$/;"	m	struct:OMX_VIDEO_PORTDEFINITIONTYPE	access:public
OMX_VIDEO_PORTDEFINITIONTYPE::xFramerate	omx/openmax/OMX_Video.h	/^    OMX_U32 xFramerate;$/;"	m	struct:OMX_VIDEO_PORTDEFINITIONTYPE	access:public
OMX_VIDEO_PictureTypeB	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_PictureTypeB   = 0x04,$/;"	e	enum:OMX_VIDEO_PICTURETYPE
OMX_VIDEO_PictureTypeEI	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_PictureTypeEI  = 0x11,$/;"	e	enum:OMX_VIDEO_PICTURETYPE
OMX_VIDEO_PictureTypeEP	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_PictureTypeEP  = 0x12,$/;"	e	enum:OMX_VIDEO_PICTURETYPE
OMX_VIDEO_PictureTypeI	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_PictureTypeI   = 0x01,$/;"	e	enum:OMX_VIDEO_PICTURETYPE
OMX_VIDEO_PictureTypeKhronosExtensions	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_PictureTypeKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_VIDEO_PICTURETYPE
OMX_VIDEO_PictureTypeMax	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_PictureTypeMax = 0x7FFFFFFF$/;"	e	enum:OMX_VIDEO_PICTURETYPE
OMX_VIDEO_PictureTypeP	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_PictureTypeP   = 0x02,$/;"	e	enum:OMX_VIDEO_PICTURETYPE
OMX_VIDEO_PictureTypeS	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_PictureTypeS   = 0x14,$/;"	e	enum:OMX_VIDEO_PICTURETYPE
OMX_VIDEO_PictureTypeSI	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_PictureTypeSI  = 0x08,$/;"	e	enum:OMX_VIDEO_PICTURETYPE
OMX_VIDEO_PictureTypeSP	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_PictureTypeSP  = 0x10,$/;"	e	enum:OMX_VIDEO_PICTURETYPE
OMX_VIDEO_PictureTypeVendorStartUnused	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_PictureTypeVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_VIDEO_PICTURETYPE
OMX_VIDEO_RAFormatMax	omx/openmax/OMX_Audio.h	/^    OMX_VIDEO_RAFormatMax = 0x7FFFFFFF$/;"	e	enum:OMX_AUDIO_RAFORMATTYPE
OMX_VIDEO_RVFORMATTYPE	omx/openmax/OMX_Video.h	/^typedef enum OMX_VIDEO_RVFORMATTYPE {$/;"	g
OMX_VIDEO_RVFORMATTYPE	omx/openmax/OMX_Video.h	/^} OMX_VIDEO_RVFORMATTYPE;$/;"	t	typeref:enum:OMX_VIDEO_RVFORMATTYPE
OMX_VIDEO_RVFormat8	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_RVFormat8,          \/**< Real Video format 8 *\/$/;"	e	enum:OMX_VIDEO_RVFORMATTYPE
OMX_VIDEO_RVFormat9	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_RVFormat9,          \/**< Real Video format 9 *\/$/;"	e	enum:OMX_VIDEO_RVFORMATTYPE
OMX_VIDEO_RVFormatG2	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_RVFormatG2,         \/**< Real Video Format G2 *\/$/;"	e	enum:OMX_VIDEO_RVFORMATTYPE
OMX_VIDEO_RVFormatKhronosExtensions	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_RVFormatKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_VIDEO_RVFORMATTYPE
OMX_VIDEO_RVFormatMax	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_RVFormatMax = 0x7FFFFFFF$/;"	e	enum:OMX_VIDEO_RVFORMATTYPE
OMX_VIDEO_RVFormatUnused	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_RVFormatUnused = 0, \/**< Format unused or unknown *\/$/;"	e	enum:OMX_VIDEO_RVFORMATTYPE
OMX_VIDEO_RVFormatVendorStartUnused	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_RVFormatVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_VIDEO_RVFORMATTYPE
OMX_VIDEO_SLICEMODE_AVCByteSlice	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_SLICEMODE_AVCByteSlice,$/;"	e	enum:OMX_VIDEO_AVCSLICEMODETYPE
OMX_VIDEO_SLICEMODE_AVCDefault	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_SLICEMODE_AVCDefault = 0,$/;"	e	enum:OMX_VIDEO_AVCSLICEMODETYPE
OMX_VIDEO_SLICEMODE_AVCKhronosExtensions	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_SLICEMODE_AVCKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_VIDEO_AVCSLICEMODETYPE
OMX_VIDEO_SLICEMODE_AVCLevelMax	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_SLICEMODE_AVCLevelMax = 0x7FFFFFFF$/;"	e	enum:OMX_VIDEO_AVCSLICEMODETYPE
OMX_VIDEO_SLICEMODE_AVCMBSlice	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_SLICEMODE_AVCMBSlice,$/;"	e	enum:OMX_VIDEO_AVCSLICEMODETYPE
OMX_VIDEO_SLICEMODE_AVCVendorStartUnused	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_SLICEMODE_AVCVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_VIDEO_AVCSLICEMODETYPE
OMX_VIDEO_WMFFormatKhronosExtensions	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_WMFFormatKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_VIDEO_WMVFORMATTYPE
OMX_VIDEO_WMFFormatVendorStartUnused	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_WMFFormatVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_VIDEO_WMVFORMATTYPE
OMX_VIDEO_WMVFORMATTYPE	omx/openmax/OMX_Video.h	/^typedef enum OMX_VIDEO_WMVFORMATTYPE {$/;"	g
OMX_VIDEO_WMVFORMATTYPE	omx/openmax/OMX_Video.h	/^} OMX_VIDEO_WMVFORMATTYPE;$/;"	t	typeref:enum:OMX_VIDEO_WMVFORMATTYPE
OMX_VIDEO_WMVFormat7	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_WMVFormat7      = 0x02,   \/**< Windows Media Video format 7 *\/$/;"	e	enum:OMX_VIDEO_WMVFORMATTYPE
OMX_VIDEO_WMVFormat8	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_WMVFormat8      = 0x04,   \/**< Windows Media Video format 8 *\/$/;"	e	enum:OMX_VIDEO_WMVFORMATTYPE
OMX_VIDEO_WMVFormat9	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_WMVFormat9      = 0x08,   \/**< Windows Media Video format 9 *\/$/;"	e	enum:OMX_VIDEO_WMVFORMATTYPE
OMX_VIDEO_WMVFormatMax	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_WMVFormatMax    = 0x7FFFFFFF$/;"	e	enum:OMX_VIDEO_WMVFORMATTYPE
OMX_VIDEO_WMVFormatUnused	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_WMVFormatUnused = 0x01,   \/**< Format unused or unknown *\/$/;"	e	enum:OMX_VIDEO_WMVFORMATTYPE
OMX_VideoExt_h	omx/openmax/OMX_VideoExt.h	31;"	d
OMX_Video_ControlRateConstant	omx/openmax/OMX_Video.h	/^    OMX_Video_ControlRateConstant,$/;"	e	enum:OMX_VIDEO_CONTROLRATETYPE
OMX_Video_ControlRateConstantSkipFrames	omx/openmax/OMX_Video.h	/^    OMX_Video_ControlRateConstantSkipFrames,$/;"	e	enum:OMX_VIDEO_CONTROLRATETYPE
OMX_Video_ControlRateDisable	omx/openmax/OMX_Video.h	/^    OMX_Video_ControlRateDisable,$/;"	e	enum:OMX_VIDEO_CONTROLRATETYPE
OMX_Video_ControlRateKhronosExtensions	omx/openmax/OMX_Video.h	/^    OMX_Video_ControlRateKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_VIDEO_CONTROLRATETYPE
OMX_Video_ControlRateMax	omx/openmax/OMX_Video.h	/^    OMX_Video_ControlRateMax = 0x7FFFFFFF$/;"	e	enum:OMX_VIDEO_CONTROLRATETYPE
OMX_Video_ControlRateVariable	omx/openmax/OMX_Video.h	/^    OMX_Video_ControlRateVariable,$/;"	e	enum:OMX_VIDEO_CONTROLRATETYPE
OMX_Video_ControlRateVariableSkipFrames	omx/openmax/OMX_Video.h	/^    OMX_Video_ControlRateVariableSkipFrames,$/;"	e	enum:OMX_VIDEO_CONTROLRATETYPE
OMX_Video_ControlRateVendorStartUnused	omx/openmax/OMX_Video.h	/^    OMX_Video_ControlRateVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_VIDEO_CONTROLRATETYPE
OMX_Video_MotionVectorEighthPel	omx/openmax/OMX_Video.h	/^    OMX_Video_MotionVectorEighthPel,$/;"	e	enum:OMX_VIDEO_MOTIONVECTORTYPE
OMX_Video_MotionVectorHalfPel	omx/openmax/OMX_Video.h	/^    OMX_Video_MotionVectorHalfPel,$/;"	e	enum:OMX_VIDEO_MOTIONVECTORTYPE
OMX_Video_MotionVectorKhronosExtensions	omx/openmax/OMX_Video.h	/^    OMX_Video_MotionVectorKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_VIDEO_MOTIONVECTORTYPE
OMX_Video_MotionVectorMax	omx/openmax/OMX_Video.h	/^    OMX_Video_MotionVectorMax = 0x7FFFFFFF$/;"	e	enum:OMX_VIDEO_MOTIONVECTORTYPE
OMX_Video_MotionVectorPixel	omx/openmax/OMX_Video.h	/^    OMX_Video_MotionVectorPixel,$/;"	e	enum:OMX_VIDEO_MOTIONVECTORTYPE
OMX_Video_MotionVectorQuarterPel	omx/openmax/OMX_Video.h	/^    OMX_Video_MotionVectorQuarterPel,$/;"	e	enum:OMX_VIDEO_MOTIONVECTORTYPE
OMX_Video_MotionVectorVendorStartUnused	omx/openmax/OMX_Video.h	/^    OMX_Video_MotionVectorVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_VIDEO_MOTIONVECTORTYPE
OMX_Video_h	omx/openmax/OMX_Video.h	30;"	d
OMX_WHITEBALCONTROLTYPE	omx/openmax/OMX_IVCommon.h	/^typedef enum OMX_WHITEBALCONTROLTYPE {$/;"	g
OMX_WHITEBALCONTROLTYPE	omx/openmax/OMX_IVCommon.h	/^} OMX_WHITEBALCONTROLTYPE;$/;"	t	typeref:enum:OMX_WHITEBALCONTROLTYPE
OMX_WhiteBalControlAuto	omx/openmax/OMX_IVCommon.h	/^    OMX_WhiteBalControlAuto,$/;"	e	enum:OMX_WHITEBALCONTROLTYPE
OMX_WhiteBalControlCloudy	omx/openmax/OMX_IVCommon.h	/^    OMX_WhiteBalControlCloudy,$/;"	e	enum:OMX_WHITEBALCONTROLTYPE
OMX_WhiteBalControlFlash	omx/openmax/OMX_IVCommon.h	/^    OMX_WhiteBalControlFlash,$/;"	e	enum:OMX_WHITEBALCONTROLTYPE
OMX_WhiteBalControlFluorescent	omx/openmax/OMX_IVCommon.h	/^    OMX_WhiteBalControlFluorescent,$/;"	e	enum:OMX_WHITEBALCONTROLTYPE
OMX_WhiteBalControlHorizon	omx/openmax/OMX_IVCommon.h	/^    OMX_WhiteBalControlHorizon,$/;"	e	enum:OMX_WHITEBALCONTROLTYPE
OMX_WhiteBalControlIncandescent	omx/openmax/OMX_IVCommon.h	/^    OMX_WhiteBalControlIncandescent,$/;"	e	enum:OMX_WHITEBALCONTROLTYPE
OMX_WhiteBalControlKhronosExtensions	omx/openmax/OMX_IVCommon.h	/^    OMX_WhiteBalControlKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_WHITEBALCONTROLTYPE
OMX_WhiteBalControlMax	omx/openmax/OMX_IVCommon.h	/^    OMX_WhiteBalControlMax = 0x7FFFFFFF$/;"	e	enum:OMX_WHITEBALCONTROLTYPE
OMX_WhiteBalControlOff	omx/openmax/OMX_IVCommon.h	/^    OMX_WhiteBalControlOff = 0,$/;"	e	enum:OMX_WHITEBALCONTROLTYPE
OMX_WhiteBalControlShade	omx/openmax/OMX_IVCommon.h	/^    OMX_WhiteBalControlShade,$/;"	e	enum:OMX_WHITEBALCONTROLTYPE
OMX_WhiteBalControlSunLight	omx/openmax/OMX_IVCommon.h	/^    OMX_WhiteBalControlSunLight,$/;"	e	enum:OMX_WHITEBALCONTROLTYPE
OMX_WhiteBalControlTungsten	omx/openmax/OMX_IVCommon.h	/^    OMX_WhiteBalControlTungsten,$/;"	e	enum:OMX_WHITEBALCONTROLTYPE
OMX_WhiteBalControlVendorStartUnused	omx/openmax/OMX_IVCommon.h	/^    OMX_WhiteBalControlVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_WHITEBALCONTROLTYPE
OUT_CHANNELS	omx/gstomxaudiosink.c	45;"	d	file:
Open	omx/openmax/OMX_ContentPipe.h	/^    CPresult (*Open)( CPhandle* hContent, CPstring szURI, CP_ACCESSTYPE eAccess );$/;"	m	struct:CP_PIPETYPE	access:public
PASSTHROUGH_CAPS	omx/gstomxaudiosink.h	54;"	d
PROP_0	omx/gstomxaacenc.c	/^  PROP_0,$/;"	e	enum:__anon21	file:
PROP_0	omx/gstomxaudiodec.c	/^  PROP_0$/;"	e	enum:__anon29	file:
PROP_0	omx/gstomxaudioenc.c	/^  PROP_0$/;"	e	enum:__anon28	file:
PROP_0	omx/gstomxaudiosink.c	/^  PROP_0,$/;"	e	enum:__anon31	file:
PROP_0	omx/gstomxh263dec.c	/^  PROP_0$/;"	e	enum:__anon26	file:
PROP_0	omx/gstomxh263enc.c	/^  PROP_0$/;"	e	enum:__anon30	file:
PROP_0	omx/gstomxh264dec.c	/^  PROP_0$/;"	e	enum:__anon19	file:
PROP_0	omx/gstomxh264enc.c	/^  PROP_0,$/;"	e	enum:__anon23	file:
PROP_0	omx/gstomxmjpegdec.c	/^  PROP_0$/;"	e	enum:__anon32	file:
PROP_0	omx/gstomxmpeg2videodec.c	/^  PROP_0$/;"	e	enum:__anon25	file:
PROP_0	omx/gstomxmpeg4videodec.c	/^  PROP_0$/;"	e	enum:__anon17	file:
PROP_0	omx/gstomxmpeg4videoenc.c	/^  PROP_0$/;"	e	enum:__anon1	file:
PROP_0	omx/gstomxtheoradec.c	/^  PROP_0$/;"	e	enum:__anon20	file:
PROP_0	omx/gstomxvideodec.c	/^  PROP_0$/;"	e	enum:__anon24	file:
PROP_0	omx/gstomxvideoenc.c	/^  PROP_0,$/;"	e	enum:__anon27	file:
PROP_0	omx/gstomxvp8dec.c	/^  PROP_0$/;"	e	enum:__anon18	file:
PROP_0	omx/gstomxwmvdec.c	/^  PROP_0$/;"	e	enum:__anon35	file:
PROP_AAC_ERROR_RESILIENCE_TOOLS	omx/gstomxaacenc.c	/^  PROP_AAC_ERROR_RESILIENCE_TOOLS$/;"	e	enum:__anon21	file:
PROP_AAC_TOOLS	omx/gstomxaacenc.c	/^  PROP_AAC_TOOLS,$/;"	e	enum:__anon21	file:
PROP_BITRATE	omx/gstomxaacenc.c	/^  PROP_BITRATE,$/;"	e	enum:__anon21	file:
PROP_CONTROL_RATE	omx/gstomxvideoenc.c	/^  PROP_CONTROL_RATE,$/;"	e	enum:__anon27	file:
PROP_INLINESPSPPSHEADERS	omx/gstomxh264enc.c	/^  PROP_INLINESPSPPSHEADERS,$/;"	e	enum:__anon23	file:
PROP_INTERVALOFCODINGINTRAFRAMES	omx/gstomxh264enc.c	/^  PROP_INTERVALOFCODINGINTRAFRAMES$/;"	e	enum:__anon23	file:
PROP_MUTE	omx/gstomxaudiosink.c	/^  PROP_MUTE,$/;"	e	enum:__anon31	file:
PROP_PERIODICITYOFIDRFRAMES	omx/gstomxh264enc.c	/^  PROP_PERIODICITYOFIDRFRAMES,$/;"	e	enum:__anon23	file:
PROP_QUANT_B_FRAMES	omx/gstomxvideoenc.c	/^  PROP_QUANT_B_FRAMES$/;"	e	enum:__anon27	file:
PROP_QUANT_I_FRAMES	omx/gstomxvideoenc.c	/^  PROP_QUANT_I_FRAMES,$/;"	e	enum:__anon27	file:
PROP_QUANT_P_FRAMES	omx/gstomxvideoenc.c	/^  PROP_QUANT_P_FRAMES,$/;"	e	enum:__anon27	file:
PROP_TARGET_BITRATE	omx/gstomxvideoenc.c	/^  PROP_TARGET_BITRATE,$/;"	e	enum:__anon27	file:
PROP_VOLUME	omx/gstomxaudiosink.c	/^  PROP_VOLUME$/;"	e	enum:__anon31	file:
Read	omx/openmax/OMX_ContentPipe.h	/^    CPresult (*Read)( CPhandle hContent, CPbyte *pData, CPuint nSize); $/;"	m	struct:CP_PIPETYPE	access:public
ReadBuffer	omx/openmax/OMX_ContentPipe.h	/^    CPresult (*ReadBuffer)( CPhandle hContent, CPbyte **ppBuffer, CPuint *nSize, CPbool bForbidCopy);$/;"	m	struct:CP_PIPETYPE	access:public
RegisterCallback	omx/openmax/OMX_ContentPipe.h	/^    CPresult (*RegisterCallback)( CPhandle hContent, CPresult (*ClientCallback)(CP_EVENTTYPE eEvent, CPuint iParam));$/;"	m	struct:CP_PIPETYPE	access:public
ReleaseReadBuffer	omx/openmax/OMX_ContentPipe.h	/^    CPresult (*ReleaseReadBuffer)(CPhandle hContent, CPbyte *pBuffer);$/;"	m	struct:CP_PIPETYPE	access:public
S5P_FIMV_DEC_BUF_ALIGN	omx/gstomx.h	521;"	d
S5P_FIMV_D_ALIGN_PLANE_SIZE	omx/gstomx.h	535;"	d
S5P_FIMV_ENC_BUF_ALIGN	omx/gstomx.h	522;"	d
S5P_FIMV_MAX_FRAME_SIZE	omx/gstomx.h	537;"	d
S5P_FIMV_NUM_PIXELS_IN_MB_COL	omx/gstomx.h	539;"	d
S5P_FIMV_NUM_PIXELS_IN_MB_ROW	omx/gstomx.h	538;"	d
S5P_FIMV_NV12MT_HALIGN	omx/gstomx.h	526;"	d
S5P_FIMV_NV12MT_SALIGN	omx/gstomx.h	529;"	d
S5P_FIMV_NV12MT_VALIGN	omx/gstomx.h	527;"	d
S5P_FIMV_NV12M_CVALIGN	omx/gstomx.h	525;"	d
S5P_FIMV_NV12M_HALIGN	omx/gstomx.h	523;"	d
S5P_FIMV_NV12M_LVALIGN	omx/gstomx.h	524;"	d
S5P_FIMV_NV12M_SALIGN	omx/gstomx.h	528;"	d
SCMN_IMGB	omx/gstomx.h	/^} SCMN_IMGB;$/;"	t	typeref:struct:__anon2
SCMN_IMGB_MAX_PLANE	omx/gstomx.h	138;"	d
SKIP	examples/egl/testegl.c	1258;"	d	file:
SYNC_BUFFERS	examples/egl/testegl.c	79;"	d	file:
SZ_1M	omx/gstomx.h	534;"	d
SendCommand	omx/openmax/OMX_Component.h	/^    OMX_ERRORTYPE (*SendCommand)($/;"	m	struct:OMX_COMPONENTTYPE	access:public
SetCallbacks	omx/openmax/OMX_Component.h	/^    OMX_ERRORTYPE (*SetCallbacks)($/;"	m	struct:OMX_COMPONENTTYPE	access:public
SetConfig	omx/openmax/OMX_Component.h	/^    OMX_ERRORTYPE (*SetConfig)($/;"	m	struct:OMX_COMPONENTTYPE	access:public
SetParameter	omx/openmax/OMX_Component.h	/^    OMX_ERRORTYPE (*SetParameter)($/;"	m	struct:OMX_COMPONENTTYPE	access:public
SetPosition	omx/openmax/OMX_ContentPipe.h	/^    CPresult (*SetPosition)( CPhandle  hContent, CPint nOffset, CP_ORIGINTYPE eOrigin);$/;"	m	struct:CP_PIPETYPE	access:public
TBMBuffer	omx/gstomx.h	/^typedef struct _TBMBuffer TBMBuffer;$/;"	t	typeref:struct:_TBMBuffer
TBMInputBuffer	omx/gstomx.h	/^typedef struct _TBMInputBuffer TBMInputBuffer;$/;"	t	typeref:struct:_TBMInputBuffer
TBMOutputBuffer	omx/gstomx.h	/^typedef struct _TBMOutputBuffer TBMOutputBuffer;$/;"	t	typeref:struct:_TBMOutputBuffer
TRACE_VC_MEMORY	examples/egl/testegl.c	116;"	d	file:
TRACE_VC_MEMORY	examples/egl/testegl.c	84;"	d	file:
TRACE_VC_MEMORY_DEFINE_ID	examples/egl/testegl.c	117;"	d	file:
TRACE_VC_MEMORY_DEFINE_ID	examples/egl/testegl.c	88;"	d	file:
TRACE_VC_MEMORY_ENABLED	examples/egl/testegl.c	81;"	d	file:
TRACE_VC_MEMORY_ONCE	examples/egl/testegl.c	105;"	d	file:
TRACE_VC_MEMORY_ONCE	examples/egl/testegl.c	120;"	d	file:
TRACE_VC_MEMORY_ONCE_FOR_ID	examples/egl/testegl.c	119;"	d	file:
TRACE_VC_MEMORY_ONCE_FOR_ID	examples/egl/testegl.c	96;"	d	file:
TRACE_VC_MEMORY_RESET_ID	examples/egl/testegl.c	118;"	d	file:
TRACE_VC_MEMORY_RESET_ID	examples/egl/testegl.c	91;"	d	file:
TypeOffest	omx/gstomx.c	/^struct TypeOffest$/;"	s	file:
TypeOffest::get_type	omx/gstomx.c	/^  GType (*get_type) (void);$/;"	m	struct:TypeOffest	file:	access:public
TypeOffest::offset	omx/gstomx.c	/^  glong offset;$/;"	m	struct:TypeOffest	file:	access:public
UseBuffer	omx/openmax/OMX_Component.h	/^    OMX_ERRORTYPE (*UseBuffer)($/;"	m	struct:OMX_COMPONENTTYPE	access:public
UseEGLImage	omx/openmax/OMX_Component.h	/^    OMX_ERRORTYPE (*UseEGLImage)($/;"	m	struct:OMX_COMPONENTTYPE	access:public
VOLUME_MAX_DOUBLE	omx/gstomxaudiosink.c	44;"	d	file:
Write	omx/openmax/OMX_ContentPipe.h	/^    CPresult (*Write)( CPhandle hContent, CPbyte *data, CPuint nSize); $/;"	m	struct:CP_PIPETYPE	access:public
WriteBuffer	omx/openmax/OMX_ContentPipe.h	/^    CPresult (*WriteBuffer)( CPhandle hContent, CPbyte *pBuffer, CPuint nFilledSize);$/;"	m	struct:CP_PIPETYPE	access:public
_EnableGemBuffersParams	omx/gstomx.h	/^struct _EnableGemBuffersParams$/;"	s
_EnableGemBuffersParams::enable	omx/gstomx.h	/^  OMX_BOOL enable;$/;"	m	struct:_EnableGemBuffersParams	access:public
_EnableGemBuffersParams::nPortIndex	omx/gstomx.h	/^  OMX_U32 nPortIndex;$/;"	m	struct:_EnableGemBuffersParams	access:public
_EnableGemBuffersParams::nSize	omx/gstomx.h	/^  OMX_U32 nSize;$/;"	m	struct:_EnableGemBuffersParams	access:public
_EnableGemBuffersParams::nVersion	omx/gstomx.h	/^  OMX_VERSIONTYPE nVersion;$/;"	m	struct:_EnableGemBuffersParams	access:public
_GstOMXAACDec	omx/gstomxaacdec.h	/^struct _GstOMXAACDec$/;"	s
_GstOMXAACDec::parent	omx/gstomxaacdec.h	/^  GstOMXAudioDec parent;$/;"	m	struct:_GstOMXAACDec	access:public
_GstOMXAACDec::spf	omx/gstomxaacdec.h	/^  gint spf;$/;"	m	struct:_GstOMXAACDec	access:public
_GstOMXAACDecClass	omx/gstomxaacdec.h	/^struct _GstOMXAACDecClass$/;"	s
_GstOMXAACDecClass::parent_class	omx/gstomxaacdec.h	/^  GstOMXAudioDecClass parent_class;$/;"	m	struct:_GstOMXAACDecClass	access:public
_GstOMXAACEnc	omx/gstomxaacenc.h	/^struct _GstOMXAACEnc$/;"	s
_GstOMXAACEnc::aac_er_tools	omx/gstomxaacenc.h	/^  guint aac_er_tools;$/;"	m	struct:_GstOMXAACEnc	access:public
_GstOMXAACEnc::aac_tools	omx/gstomxaacenc.h	/^  guint aac_tools;$/;"	m	struct:_GstOMXAACEnc	access:public
_GstOMXAACEnc::bitrate	omx/gstomxaacenc.h	/^  guint bitrate;$/;"	m	struct:_GstOMXAACEnc	access:public
_GstOMXAACEnc::parent	omx/gstomxaacenc.h	/^  GstOMXAudioEnc parent;$/;"	m	struct:_GstOMXAACEnc	access:public
_GstOMXAACEncClass	omx/gstomxaacenc.h	/^struct _GstOMXAACEncClass$/;"	s
_GstOMXAACEncClass::parent_class	omx/gstomxaacenc.h	/^  GstOMXAudioEncClass parent_class;$/;"	m	struct:_GstOMXAACEncClass	access:public
_GstOMXAMRDec	omx/gstomxamrdec.h	/^struct _GstOMXAMRDec$/;"	s
_GstOMXAMRDec::parent	omx/gstomxamrdec.h	/^  GstOMXAudioDec parent;$/;"	m	struct:_GstOMXAMRDec	access:public
_GstOMXAMRDec::rate	omx/gstomxamrdec.h	/^  gint rate;$/;"	m	struct:_GstOMXAMRDec	access:public
_GstOMXAMRDec::spf	omx/gstomxamrdec.h	/^  gint spf;$/;"	m	struct:_GstOMXAMRDec	access:public
_GstOMXAMRDecClass	omx/gstomxamrdec.h	/^struct _GstOMXAMRDecClass$/;"	s
_GstOMXAMRDecClass::parent_class	omx/gstomxamrdec.h	/^  GstOMXAudioDecClass parent_class;$/;"	m	struct:_GstOMXAMRDecClass	access:public
_GstOMXAnalogAudioSink	omx/gstomxanalogaudiosink.h	/^struct _GstOMXAnalogAudioSink$/;"	s
_GstOMXAnalogAudioSink::parent	omx/gstomxanalogaudiosink.h	/^  GstOMXAudioSink parent;$/;"	m	struct:_GstOMXAnalogAudioSink	access:public
_GstOMXAnalogAudioSinkClass	omx/gstomxanalogaudiosink.h	/^struct _GstOMXAnalogAudioSinkClass$/;"	s
_GstOMXAnalogAudioSinkClass::parent_class	omx/gstomxanalogaudiosink.h	/^  GstOMXAudioSinkClass parent_class;$/;"	m	struct:_GstOMXAnalogAudioSinkClass	access:public
_GstOMXAudioDec	omx/gstomxaudiodec.h	/^struct _GstOMXAudioDec$/;"	s
_GstOMXAudioDec::codec_data	omx/gstomxaudiodec.h	/^  GstBuffer *codec_data;$/;"	m	struct:_GstOMXAudioDec	access:public
_GstOMXAudioDec::dec	omx/gstomxaudiodec.h	/^  GstOMXComponent *dec;$/;"	m	struct:_GstOMXAudioDec	access:public
_GstOMXAudioDec::dec_in_port	omx/gstomxaudiodec.h	/^  GstOMXPort *dec_in_port, *dec_out_port;$/;"	m	struct:_GstOMXAudioDec	access:public
_GstOMXAudioDec::dec_out_port	omx/gstomxaudiodec.h	/^  GstOMXPort *dec_in_port, *dec_out_port;$/;"	m	struct:_GstOMXAudioDec	access:public
_GstOMXAudioDec::downstream_flow_ret	omx/gstomxaudiodec.h	/^  GstFlowReturn downstream_flow_ret;$/;"	m	struct:_GstOMXAudioDec	access:public
_GstOMXAudioDec::drain_cond	omx/gstomxaudiodec.h	/^  GCond drain_cond;$/;"	m	struct:_GstOMXAudioDec	access:public
_GstOMXAudioDec::drain_lock	omx/gstomxaudiodec.h	/^  GMutex drain_lock;$/;"	m	struct:_GstOMXAudioDec	access:public
_GstOMXAudioDec::draining	omx/gstomxaudiodec.h	/^  gboolean draining;$/;"	m	struct:_GstOMXAudioDec	access:public
_GstOMXAudioDec::in_port_pool	omx/gstomxaudiodec.h	/^  GstBufferPool *in_port_pool, *out_port_pool;$/;"	m	struct:_GstOMXAudioDec	access:public
_GstOMXAudioDec::info	omx/gstomxaudiodec.h	/^  GstAudioInfo info;$/;"	m	struct:_GstOMXAudioDec	access:public
_GstOMXAudioDec::last_upstream_ts	omx/gstomxaudiodec.h	/^  GstClockTime last_upstream_ts;$/;"	m	struct:_GstOMXAudioDec	access:public
_GstOMXAudioDec::needs_reorder	omx/gstomxaudiodec.h	/^  gboolean needs_reorder;$/;"	m	struct:_GstOMXAudioDec	access:public
_GstOMXAudioDec::out_port_pool	omx/gstomxaudiodec.h	/^  GstBufferPool *in_port_pool, *out_port_pool;$/;"	m	struct:_GstOMXAudioDec	access:public
_GstOMXAudioDec::output_adapter	omx/gstomxaudiodec.h	/^  GstAdapter *output_adapter;$/;"	m	struct:_GstOMXAudioDec	access:public
_GstOMXAudioDec::parent	omx/gstomxaudiodec.h	/^  GstAudioDecoder parent;$/;"	m	struct:_GstOMXAudioDec	access:public
_GstOMXAudioDec::position	omx/gstomxaudiodec.h	/^  GstAudioChannelPosition position[OMX_AUDIO_MAXCHANNELS];$/;"	m	struct:_GstOMXAudioDec	access:public
_GstOMXAudioDec::reorder_map	omx/gstomxaudiodec.h	/^  gint reorder_map[OMX_AUDIO_MAXCHANNELS];$/;"	m	struct:_GstOMXAudioDec	access:public
_GstOMXAudioDec::started	omx/gstomxaudiodec.h	/^  gboolean started;$/;"	m	struct:_GstOMXAudioDec	access:public
_GstOMXAudioDecClass	omx/gstomxaudiodec.h	/^struct _GstOMXAudioDecClass$/;"	s
_GstOMXAudioDecClass::cdata	omx/gstomxaudiodec.h	/^  GstOMXClassData cdata;$/;"	m	struct:_GstOMXAudioDecClass	access:public
_GstOMXAudioDecClass::get_channel_positions	omx/gstomxaudiodec.h	/^  gboolean (*get_channel_positions) (GstOMXAudioDec * self, GstOMXPort * port, GstAudioChannelPosition position[OMX_AUDIO_MAXCHANNELS]);$/;"	m	struct:_GstOMXAudioDecClass	access:public
_GstOMXAudioDecClass::get_samples_per_frame	omx/gstomxaudiodec.h	/^  gint     (*get_samples_per_frame) (GstOMXAudioDec * self, GstOMXPort * port);$/;"	m	struct:_GstOMXAudioDecClass	access:public
_GstOMXAudioDecClass::is_format_change	omx/gstomxaudiodec.h	/^  gboolean (*is_format_change) (GstOMXAudioDec * self, GstOMXPort * port, GstCaps * caps);$/;"	m	struct:_GstOMXAudioDecClass	access:public
_GstOMXAudioDecClass::parent_class	omx/gstomxaudiodec.h	/^  GstAudioDecoderClass parent_class;$/;"	m	struct:_GstOMXAudioDecClass	access:public
_GstOMXAudioDecClass::set_format	omx/gstomxaudiodec.h	/^  gboolean (*set_format)       (GstOMXAudioDec * self, GstOMXPort * port, GstCaps * caps);$/;"	m	struct:_GstOMXAudioDecClass	access:public
_GstOMXAudioEnc	omx/gstomxaudioenc.h	/^struct _GstOMXAudioEnc$/;"	s
_GstOMXAudioEnc::downstream_flow_ret	omx/gstomxaudioenc.h	/^  GstFlowReturn downstream_flow_ret;$/;"	m	struct:_GstOMXAudioEnc	access:public
_GstOMXAudioEnc::drain_cond	omx/gstomxaudioenc.h	/^  GCond drain_cond;$/;"	m	struct:_GstOMXAudioEnc	access:public
_GstOMXAudioEnc::drain_lock	omx/gstomxaudioenc.h	/^  GMutex drain_lock;$/;"	m	struct:_GstOMXAudioEnc	access:public
_GstOMXAudioEnc::draining	omx/gstomxaudioenc.h	/^  gboolean draining;$/;"	m	struct:_GstOMXAudioEnc	access:public
_GstOMXAudioEnc::enc	omx/gstomxaudioenc.h	/^  GstOMXComponent *enc;$/;"	m	struct:_GstOMXAudioEnc	access:public
_GstOMXAudioEnc::enc_in_port	omx/gstomxaudioenc.h	/^  GstOMXPort *enc_in_port, *enc_out_port;$/;"	m	struct:_GstOMXAudioEnc	access:public
_GstOMXAudioEnc::enc_out_port	omx/gstomxaudioenc.h	/^  GstOMXPort *enc_in_port, *enc_out_port;$/;"	m	struct:_GstOMXAudioEnc	access:public
_GstOMXAudioEnc::last_upstream_ts	omx/gstomxaudioenc.h	/^  GstClockTime last_upstream_ts;$/;"	m	struct:_GstOMXAudioEnc	access:public
_GstOMXAudioEnc::parent	omx/gstomxaudioenc.h	/^  GstAudioEncoder parent;$/;"	m	struct:_GstOMXAudioEnc	access:public
_GstOMXAudioEnc::started	omx/gstomxaudioenc.h	/^  gboolean started;$/;"	m	struct:_GstOMXAudioEnc	access:public
_GstOMXAudioEncClass	omx/gstomxaudioenc.h	/^struct _GstOMXAudioEncClass$/;"	s
_GstOMXAudioEncClass::cdata	omx/gstomxaudioenc.h	/^  GstOMXClassData cdata;$/;"	m	struct:_GstOMXAudioEncClass	access:public
_GstOMXAudioEncClass::get_caps	omx/gstomxaudioenc.h	/^  GstCaps *(*get_caps)         (GstOMXAudioEnc * self, GstOMXPort * port, GstAudioInfo * info);$/;"	m	struct:_GstOMXAudioEncClass	access:public
_GstOMXAudioEncClass::get_num_samples	omx/gstomxaudioenc.h	/^  guint    (*get_num_samples)  (GstOMXAudioEnc * self, GstOMXPort * port, GstAudioInfo * info, GstOMXBuffer * buffer);$/;"	m	struct:_GstOMXAudioEncClass	access:public
_GstOMXAudioEncClass::parent_class	omx/gstomxaudioenc.h	/^  GstAudioEncoderClass parent_class;$/;"	m	struct:_GstOMXAudioEncClass	access:public
_GstOMXAudioEncClass::set_format	omx/gstomxaudioenc.h	/^  gboolean (*set_format)       (GstOMXAudioEnc * self, GstOMXPort * port, GstAudioInfo * info);$/;"	m	struct:_GstOMXAudioEncClass	access:public
_GstOMXAudioSink	omx/gstomxaudiosink.h	/^struct _GstOMXAudioSink$/;"	s
_GstOMXAudioSink::buffer_size	omx/gstomxaudiosink.h	/^  guint buffer_size;$/;"	m	struct:_GstOMXAudioSink	access:public
_GstOMXAudioSink::channels	omx/gstomxaudiosink.h	/^  guint channels;$/;"	m	struct:_GstOMXAudioSink	access:public
_GstOMXAudioSink::comp	omx/gstomxaudiosink.h	/^  GstOMXComponent *comp;$/;"	m	struct:_GstOMXAudioSink	access:public
_GstOMXAudioSink::endianness	omx/gstomxaudiosink.h	/^  guint endianness;$/;"	m	struct:_GstOMXAudioSink	access:public
_GstOMXAudioSink::iec61937	omx/gstomxaudiosink.h	/^  gboolean iec61937;$/;"	m	struct:_GstOMXAudioSink	access:public
_GstOMXAudioSink::in_port	omx/gstomxaudiosink.h	/^  GstOMXPort *in_port, *out_port;$/;"	m	struct:_GstOMXAudioSink	access:public
_GstOMXAudioSink::is_float	omx/gstomxaudiosink.h	/^  gboolean is_float;$/;"	m	struct:_GstOMXAudioSink	access:public
_GstOMXAudioSink::is_signed	omx/gstomxaudiosink.h	/^  gboolean is_signed;$/;"	m	struct:_GstOMXAudioSink	access:public
_GstOMXAudioSink::lock	omx/gstomxaudiosink.h	/^  GMutex lock;$/;"	m	struct:_GstOMXAudioSink	access:public
_GstOMXAudioSink::mute	omx/gstomxaudiosink.h	/^  gboolean mute;$/;"	m	struct:_GstOMXAudioSink	access:public
_GstOMXAudioSink::out_port	omx/gstomxaudiosink.h	/^  GstOMXPort *in_port, *out_port;$/;"	m	struct:_GstOMXAudioSink	access:public
_GstOMXAudioSink::parent	omx/gstomxaudiosink.h	/^  GstAudioSink parent;$/;"	m	struct:_GstOMXAudioSink	access:public
_GstOMXAudioSink::rate	omx/gstomxaudiosink.h	/^  guint rate;$/;"	m	struct:_GstOMXAudioSink	access:public
_GstOMXAudioSink::samples	omx/gstomxaudiosink.h	/^  guint samples;$/;"	m	struct:_GstOMXAudioSink	access:public
_GstOMXAudioSink::volume	omx/gstomxaudiosink.h	/^  gdouble volume;$/;"	m	struct:_GstOMXAudioSink	access:public
_GstOMXAudioSink::width	omx/gstomxaudiosink.h	/^  guint width;$/;"	m	struct:_GstOMXAudioSink	access:public
_GstOMXAudioSinkClass	omx/gstomxaudiosink.h	/^struct _GstOMXAudioSinkClass$/;"	s
_GstOMXAudioSinkClass::cdata	omx/gstomxaudiosink.h	/^  GstOMXClassData cdata;$/;"	m	struct:_GstOMXAudioSinkClass	access:public
_GstOMXAudioSinkClass::destination	omx/gstomxaudiosink.h	/^  const gchar * destination;$/;"	m	struct:_GstOMXAudioSinkClass	access:public
_GstOMXAudioSinkClass::parent_class	omx/gstomxaudiosink.h	/^  GstAudioSinkClass parent_class;$/;"	m	struct:_GstOMXAudioSinkClass	access:public
_GstOMXBuffer	omx/gstomx.h	/^struct _GstOMXBuffer {$/;"	s
_GstOMXBuffer::eglimage	omx/gstomx.h	/^  gboolean eglimage;$/;"	m	struct:_GstOMXBuffer	access:public
_GstOMXBuffer::omx_buf	omx/gstomx.h	/^  OMX_BUFFERHEADERTYPE *omx_buf;$/;"	m	struct:_GstOMXBuffer	access:public
_GstOMXBuffer::port	omx/gstomx.h	/^  GstOMXPort *port;$/;"	m	struct:_GstOMXBuffer	access:public
_GstOMXBuffer::scmn_buffer	omx/gstomx.h	/^   MMVideoBuffer *scmn_buffer;$/;"	m	struct:_GstOMXBuffer	access:public
_GstOMXBuffer::scmn_buffer	omx/gstomx.h	/^  SCMN_IMGB *scmn_buffer;$/;"	m	struct:_GstOMXBuffer	access:public
_GstOMXBuffer::settings_cookie	omx/gstomx.h	/^  gint settings_cookie;$/;"	m	struct:_GstOMXBuffer	access:public
_GstOMXBuffer::used	omx/gstomx.h	/^  gboolean used;$/;"	m	struct:_GstOMXBuffer	access:public
_GstOMXBufferPool	omx/gstomxbufferpool.h	/^struct _GstOMXBufferPool$/;"	s
_GstOMXBufferPool::add_videometa	omx/gstomxbufferpool.h	/^  gboolean add_videometa;$/;"	m	struct:_GstOMXBufferPool	access:public
_GstOMXBufferPool::allocating	omx/gstomxbufferpool.h	/^  gboolean allocating;$/;"	m	struct:_GstOMXBufferPool	access:public
_GstOMXBufferPool::allocator	omx/gstomxbufferpool.h	/^  GstAllocator *allocator;$/;"	m	struct:_GstOMXBufferPool	access:public
_GstOMXBufferPool::buffers	omx/gstomxbufferpool.h	/^  GPtrArray *buffers;$/;"	m	struct:_GstOMXBufferPool	access:public
_GstOMXBufferPool::caps	omx/gstomxbufferpool.h	/^  GstCaps *caps;$/;"	m	struct:_GstOMXBufferPool	access:public
_GstOMXBufferPool::component	omx/gstomxbufferpool.h	/^  GstOMXComponent *component;$/;"	m	struct:_GstOMXBufferPool	access:public
_GstOMXBufferPool::current_buffer_index	omx/gstomxbufferpool.h	/^  gint current_buffer_index;$/;"	m	struct:_GstOMXBufferPool	access:public
_GstOMXBufferPool::deactivated	omx/gstomxbufferpool.h	/^  gboolean deactivated;$/;"	m	struct:_GstOMXBufferPool	access:public
_GstOMXBufferPool::element	omx/gstomxbufferpool.h	/^  GstElement *element;$/;"	m	struct:_GstOMXBufferPool	access:public
_GstOMXBufferPool::need_copy	omx/gstomxbufferpool.h	/^  gboolean need_copy;$/;"	m	struct:_GstOMXBufferPool	access:public
_GstOMXBufferPool::other_pool	omx/gstomxbufferpool.h	/^  GstBufferPool *other_pool;$/;"	m	struct:_GstOMXBufferPool	access:public
_GstOMXBufferPool::parent	omx/gstomxbufferpool.h	/^  GstVideoBufferPool parent;$/;"	m	struct:_GstOMXBufferPool	access:public
_GstOMXBufferPool::port	omx/gstomxbufferpool.h	/^  GstOMXPort *port;$/;"	m	struct:_GstOMXBufferPool	access:public
_GstOMXBufferPool::video_info	omx/gstomxbufferpool.h	/^  GstVideoInfo video_info;$/;"	m	struct:_GstOMXBufferPool	access:public
_GstOMXBufferPoolClass	omx/gstomxbufferpool.h	/^struct _GstOMXBufferPoolClass$/;"	s
_GstOMXBufferPoolClass::parent_class	omx/gstomxbufferpool.h	/^  GstVideoBufferPoolClass parent_class;$/;"	m	struct:_GstOMXBufferPoolClass	access:public
_GstOMXClassData	omx/gstomx.h	/^struct _GstOMXClassData {$/;"	s
_GstOMXClassData::component_name	omx/gstomx.h	/^  const gchar *component_name;$/;"	m	struct:_GstOMXClassData	access:public
_GstOMXClassData::component_role	omx/gstomx.h	/^  const gchar *component_role;$/;"	m	struct:_GstOMXClassData	access:public
_GstOMXClassData::core_name	omx/gstomx.h	/^  const gchar *core_name;$/;"	m	struct:_GstOMXClassData	access:public
_GstOMXClassData::default_sink_template_caps	omx/gstomx.h	/^  const gchar *default_sink_template_caps;$/;"	m	struct:_GstOMXClassData	access:public
_GstOMXClassData::default_src_template_caps	omx/gstomx.h	/^  const gchar *default_src_template_caps;$/;"	m	struct:_GstOMXClassData	access:public
_GstOMXClassData::hacks	omx/gstomx.h	/^  guint64 hacks;$/;"	m	struct:_GstOMXClassData	access:public
_GstOMXClassData::in_port_index	omx/gstomx.h	/^  guint32 in_port_index, out_port_index;$/;"	m	struct:_GstOMXClassData	access:public
_GstOMXClassData::out_port_index	omx/gstomx.h	/^  guint32 in_port_index, out_port_index;$/;"	m	struct:_GstOMXClassData	access:public
_GstOMXClassData::type	omx/gstomx.h	/^  GstOmxComponentType type;$/;"	m	struct:_GstOMXClassData	access:public
_GstOMXComponent	omx/gstomx.h	/^struct _GstOMXComponent {$/;"	s
_GstOMXComponent::core	omx/gstomx.h	/^  GstOMXCore *core;$/;"	m	struct:_GstOMXComponent	access:public
_GstOMXComponent::hacks	omx/gstomx.h	/^  guint64 hacks; \/* Flags, GST_OMX_HACK_* *\/$/;"	m	struct:_GstOMXComponent	access:public
_GstOMXComponent::handle	omx/gstomx.h	/^  OMX_HANDLETYPE handle;$/;"	m	struct:_GstOMXComponent	access:public
_GstOMXComponent::last_error	omx/gstomx.h	/^  OMX_ERRORTYPE last_error;$/;"	m	struct:_GstOMXComponent	access:public
_GstOMXComponent::lock	omx/gstomx.h	/^  GMutex lock;$/;"	m	struct:_GstOMXComponent	access:public
_GstOMXComponent::messages	omx/gstomx.h	/^  GQueue messages; \/* Queue of GstOMXMessages *\/$/;"	m	struct:_GstOMXComponent	access:public
_GstOMXComponent::messages_cond	omx/gstomx.h	/^  GCond messages_cond;$/;"	m	struct:_GstOMXComponent	access:public
_GstOMXComponent::messages_lock	omx/gstomx.h	/^  GMutex messages_lock;$/;"	m	struct:_GstOMXComponent	access:public
_GstOMXComponent::n_in_ports	omx/gstomx.h	/^  gint n_in_ports, n_out_ports;$/;"	m	struct:_GstOMXComponent	access:public
_GstOMXComponent::n_out_ports	omx/gstomx.h	/^  gint n_in_ports, n_out_ports;$/;"	m	struct:_GstOMXComponent	access:public
_GstOMXComponent::name	omx/gstomx.h	/^  gchar *name; \/* for debugging mostly *\/$/;"	m	struct:_GstOMXComponent	access:public
_GstOMXComponent::parent	omx/gstomx.h	/^  GstObject *parent;$/;"	m	struct:_GstOMXComponent	access:public
_GstOMXComponent::pending_reconfigure_outports	omx/gstomx.h	/^  GList *pending_reconfigure_outports;$/;"	m	struct:_GstOMXComponent	access:public
_GstOMXComponent::pending_state	omx/gstomx.h	/^  OMX_STATETYPE pending_state;$/;"	m	struct:_GstOMXComponent	access:public
_GstOMXComponent::ports	omx/gstomx.h	/^  GPtrArray *ports; \/* Contains GstOMXPort* *\/$/;"	m	struct:_GstOMXComponent	access:public
_GstOMXComponent::state	omx/gstomx.h	/^  OMX_STATETYPE state;$/;"	m	struct:_GstOMXComponent	access:public
_GstOMXCore	omx/gstomx.h	/^struct _GstOMXCore {$/;"	s
_GstOMXCore::component_vendor	omx/gstomx.h	/^  GOmxVendor component_vendor; \/* to check omx vender *\/$/;"	m	struct:_GstOMXCore	access:public
_GstOMXCore::deinit	omx/gstomx.h	/^  OMX_ERRORTYPE (*deinit) (void);$/;"	m	struct:_GstOMXCore	access:public
_GstOMXCore::free_handle	omx/gstomx.h	/^  OMX_ERRORTYPE (*free_handle) (OMX_HANDLETYPE handle);$/;"	m	struct:_GstOMXCore	access:public
_GstOMXCore::get_handle	omx/gstomx.h	/^  OMX_ERRORTYPE (*get_handle) (OMX_HANDLETYPE * handle,$/;"	m	struct:_GstOMXCore	access:public
_GstOMXCore::init	omx/gstomx.h	/^  OMX_ERRORTYPE (*init) (void);$/;"	m	struct:_GstOMXCore	access:public
_GstOMXCore::lock	omx/gstomx.h	/^  GMutex lock;$/;"	m	struct:_GstOMXCore	access:public
_GstOMXCore::module	omx/gstomx.h	/^  GModule *module;$/;"	m	struct:_GstOMXCore	access:public
_GstOMXCore::secure	omx/gstomx.h	/^  gboolean secure; \/* trust zone *\/$/;"	m	struct:_GstOMXCore	access:public
_GstOMXCore::setup_tunnel	omx/gstomx.h	/^  OMX_ERRORTYPE (*setup_tunnel) (OMX_HANDLETYPE output, OMX_U32 outport, OMX_HANDLETYPE input, OMX_U32 inport);$/;"	m	struct:_GstOMXCore	access:public
_GstOMXCore::user_count	omx/gstomx.h	/^  gint user_count; \/* LOCK *\/$/;"	m	struct:_GstOMXCore	access:public
_GstOMXH263Dec	omx/gstomxh263dec.h	/^struct _GstOMXH263Dec$/;"	s
_GstOMXH263Dec::parent	omx/gstomxh263dec.h	/^  GstOMXVideoDec parent;$/;"	m	struct:_GstOMXH263Dec	access:public
_GstOMXH263DecClass	omx/gstomxh263dec.h	/^struct _GstOMXH263DecClass$/;"	s
_GstOMXH263DecClass::parent_class	omx/gstomxh263dec.h	/^  GstOMXVideoDecClass parent_class;$/;"	m	struct:_GstOMXH263DecClass	access:public
_GstOMXH263Enc	omx/gstomxh263enc.h	/^struct _GstOMXH263Enc$/;"	s
_GstOMXH263Enc::parent	omx/gstomxh263enc.h	/^  GstOMXVideoEnc parent;$/;"	m	struct:_GstOMXH263Enc	access:public
_GstOMXH263EncClass	omx/gstomxh263enc.h	/^struct _GstOMXH263EncClass$/;"	s
_GstOMXH263EncClass::parent_class	omx/gstomxh263enc.h	/^  GstOMXVideoEncClass parent_class;$/;"	m	struct:_GstOMXH263EncClass	access:public
_GstOMXH264Dec	omx/gstomxh264dec.h	/^struct _GstOMXH264Dec$/;"	s
_GstOMXH264Dec::parent	omx/gstomxh264dec.h	/^  GstOMXVideoDec parent;$/;"	m	struct:_GstOMXH264Dec	access:public
_GstOMXH264DecClass	omx/gstomxh264dec.h	/^struct _GstOMXH264DecClass$/;"	s
_GstOMXH264DecClass::parent_class	omx/gstomxh264dec.h	/^  GstOMXVideoDecClass parent_class;$/;"	m	struct:_GstOMXH264DecClass	access:public
_GstOMXH264Enc	omx/gstomxh264enc.h	/^struct _GstOMXH264Enc$/;"	s
_GstOMXH264Enc::headers	omx/gstomxh264enc.h	/^  GList *headers;$/;"	m	struct:_GstOMXH264Enc	access:public
_GstOMXH264Enc::inline_sps_pps_headers	omx/gstomxh264enc.h	/^  gboolean inline_sps_pps_headers;$/;"	m	struct:_GstOMXH264Enc	access:public
_GstOMXH264Enc::interval_intraframes	omx/gstomxh264enc.h	/^  guint32 interval_intraframes;$/;"	m	struct:_GstOMXH264Enc	access:public
_GstOMXH264Enc::parent	omx/gstomxh264enc.h	/^  GstOMXVideoEnc parent;$/;"	m	struct:_GstOMXH264Enc	access:public
_GstOMXH264Enc::periodicty_idr	omx/gstomxh264enc.h	/^  guint32 periodicty_idr;$/;"	m	struct:_GstOMXH264Enc	access:public
_GstOMXH264EncClass	omx/gstomxh264enc.h	/^struct _GstOMXH264EncClass$/;"	s
_GstOMXH264EncClass::parent_class	omx/gstomxh264enc.h	/^  GstOMXVideoEncClass parent_class;$/;"	m	struct:_GstOMXH264EncClass	access:public
_GstOMXHdmiAudioSink	omx/gstomxhdmiaudiosink.h	/^struct _GstOMXHdmiAudioSink$/;"	s
_GstOMXHdmiAudioSink::parent	omx/gstomxhdmiaudiosink.h	/^  GstOMXAudioSink parent;$/;"	m	struct:_GstOMXHdmiAudioSink	access:public
_GstOMXHdmiAudioSinkClass	omx/gstomxhdmiaudiosink.h	/^struct _GstOMXHdmiAudioSinkClass$/;"	s
_GstOMXHdmiAudioSinkClass::parent_class	omx/gstomxhdmiaudiosink.h	/^  GstOMXAudioSinkClass parent_class;$/;"	m	struct:_GstOMXHdmiAudioSinkClass	access:public
_GstOMXMJPEGDec	omx/gstomxmjpegdec.h	/^struct _GstOMXMJPEGDec$/;"	s
_GstOMXMJPEGDec::parent	omx/gstomxmjpegdec.h	/^  GstOMXVideoDec parent;$/;"	m	struct:_GstOMXMJPEGDec	access:public
_GstOMXMJPEGDecClass	omx/gstomxmjpegdec.h	/^struct _GstOMXMJPEGDecClass$/;"	s
_GstOMXMJPEGDecClass::parent_class	omx/gstomxmjpegdec.h	/^  GstOMXVideoDecClass parent_class;$/;"	m	struct:_GstOMXMJPEGDecClass	access:public
_GstOMXMP3Dec	omx/gstomxmp3dec.h	/^struct _GstOMXMP3Dec$/;"	s
_GstOMXMP3Dec::parent	omx/gstomxmp3dec.h	/^  GstOMXAudioDec parent;$/;"	m	struct:_GstOMXMP3Dec	access:public
_GstOMXMP3Dec::spf	omx/gstomxmp3dec.h	/^  gint spf;$/;"	m	struct:_GstOMXMP3Dec	access:public
_GstOMXMP3DecClass	omx/gstomxmp3dec.h	/^struct _GstOMXMP3DecClass$/;"	s
_GstOMXMP3DecClass::parent_class	omx/gstomxmp3dec.h	/^  GstOMXAudioDecClass parent_class;$/;"	m	struct:_GstOMXMP3DecClass	access:public
_GstOMXMPEG2VideoDec	omx/gstomxmpeg2videodec.h	/^struct _GstOMXMPEG2VideoDec$/;"	s
_GstOMXMPEG2VideoDec::parent	omx/gstomxmpeg2videodec.h	/^  GstOMXVideoDec parent;$/;"	m	struct:_GstOMXMPEG2VideoDec	access:public
_GstOMXMPEG2VideoDecClass	omx/gstomxmpeg2videodec.h	/^struct _GstOMXMPEG2VideoDecClass$/;"	s
_GstOMXMPEG2VideoDecClass::parent_class	omx/gstomxmpeg2videodec.h	/^  GstOMXVideoDecClass parent_class;$/;"	m	struct:_GstOMXMPEG2VideoDecClass	access:public
_GstOMXMPEG4VideoDec	omx/gstomxmpeg4videodec.h	/^struct _GstOMXMPEG4VideoDec$/;"	s
_GstOMXMPEG4VideoDec::parent	omx/gstomxmpeg4videodec.h	/^  GstOMXVideoDec parent;$/;"	m	struct:_GstOMXMPEG4VideoDec	access:public
_GstOMXMPEG4VideoDecClass	omx/gstomxmpeg4videodec.h	/^struct _GstOMXMPEG4VideoDecClass$/;"	s
_GstOMXMPEG4VideoDecClass::parent_class	omx/gstomxmpeg4videodec.h	/^  GstOMXVideoDecClass parent_class;$/;"	m	struct:_GstOMXMPEG4VideoDecClass	access:public
_GstOMXMPEG4VideoEnc	omx/gstomxmpeg4videoenc.h	/^struct _GstOMXMPEG4VideoEnc$/;"	s
_GstOMXMPEG4VideoEnc::parent	omx/gstomxmpeg4videoenc.h	/^  GstOMXVideoEnc parent;$/;"	m	struct:_GstOMXMPEG4VideoEnc	access:public
_GstOMXMPEG4VideoEncClass	omx/gstomxmpeg4videoenc.h	/^struct _GstOMXMPEG4VideoEncClass$/;"	s
_GstOMXMPEG4VideoEncClass::parent_class	omx/gstomxmpeg4videoenc.h	/^  GstOMXVideoEncClass parent_class;$/;"	m	struct:_GstOMXMPEG4VideoEncClass	access:public
_GstOMXMemory	omx/gstomxbufferpool.c	/^struct _GstOMXMemory$/;"	s	file:
_GstOMXMemory::buf	omx/gstomxbufferpool.c	/^  GstOMXBuffer *buf;$/;"	m	struct:_GstOMXMemory	file:	access:public
_GstOMXMemory::mem	omx/gstomxbufferpool.c	/^  GstMemory mem;$/;"	m	struct:_GstOMXMemory	file:	access:public
_GstOMXMemoryAllocator	omx/gstomxbufferpool.c	/^struct _GstOMXMemoryAllocator$/;"	s	file:
_GstOMXMemoryAllocator::parent	omx/gstomxbufferpool.c	/^  GstAllocator parent;$/;"	m	struct:_GstOMXMemoryAllocator	file:	access:public
_GstOMXMemoryAllocatorClass	omx/gstomxbufferpool.c	/^struct _GstOMXMemoryAllocatorClass$/;"	s	file:
_GstOMXMemoryAllocatorClass::parent_class	omx/gstomxbufferpool.c	/^  GstAllocatorClass parent_class;$/;"	m	struct:_GstOMXMemoryAllocatorClass	file:	access:public
_GstOMXMessage	omx/gstomx.h	/^struct _GstOMXMessage {$/;"	s
_GstOMXMessage::__anon9::__anon10::state	omx/gstomx.h	/^      OMX_STATETYPE state;$/;"	m	struct:_GstOMXMessage::__anon9::__anon10	access:public
_GstOMXMessage::__anon9::__anon11::port	omx/gstomx.h	/^      OMX_U32 port;$/;"	m	struct:_GstOMXMessage::__anon9::__anon11	access:public
_GstOMXMessage::__anon9::__anon12::error	omx/gstomx.h	/^      OMX_ERRORTYPE error;$/;"	m	struct:_GstOMXMessage::__anon9::__anon12	access:public
_GstOMXMessage::__anon9::__anon13::enable	omx/gstomx.h	/^      OMX_BOOL enable;$/;"	m	struct:_GstOMXMessage::__anon9::__anon13	access:public
_GstOMXMessage::__anon9::__anon13::port	omx/gstomx.h	/^      OMX_U32 port;$/;"	m	struct:_GstOMXMessage::__anon9::__anon13	access:public
_GstOMXMessage::__anon9::__anon14::port	omx/gstomx.h	/^      OMX_U32 port;$/;"	m	struct:_GstOMXMessage::__anon9::__anon14	access:public
_GstOMXMessage::__anon9::__anon15::flags	omx/gstomx.h	/^      OMX_U32 flags;$/;"	m	struct:_GstOMXMessage::__anon9::__anon15	access:public
_GstOMXMessage::__anon9::__anon15::port	omx/gstomx.h	/^      OMX_U32 port;$/;"	m	struct:_GstOMXMessage::__anon9::__anon15	access:public
_GstOMXMessage::__anon9::__anon16::app_data	omx/gstomx.h	/^      OMX_PTR app_data;$/;"	m	struct:_GstOMXMessage::__anon9::__anon16	access:public
_GstOMXMessage::__anon9::__anon16::buffer	omx/gstomx.h	/^      OMX_BUFFERHEADERTYPE *buffer;$/;"	m	struct:_GstOMXMessage::__anon9::__anon16	access:public
_GstOMXMessage::__anon9::__anon16::component	omx/gstomx.h	/^      OMX_HANDLETYPE component;$/;"	m	struct:_GstOMXMessage::__anon9::__anon16	access:public
_GstOMXMessage::__anon9::__anon16::empty	omx/gstomx.h	/^      OMX_BOOL empty;$/;"	m	struct:_GstOMXMessage::__anon9::__anon16	access:public
_GstOMXMessage::__anon9::buffer_done	omx/gstomx.h	/^    } buffer_done;$/;"	m	union:_GstOMXMessage::__anon9	typeref:struct:_GstOMXMessage::__anon9::__anon16	access:public
_GstOMXMessage::__anon9::buffer_flag	omx/gstomx.h	/^    } buffer_flag;$/;"	m	union:_GstOMXMessage::__anon9	typeref:struct:_GstOMXMessage::__anon9::__anon15	access:public
_GstOMXMessage::__anon9::error	omx/gstomx.h	/^    } error;$/;"	m	union:_GstOMXMessage::__anon9	typeref:struct:_GstOMXMessage::__anon9::__anon12	access:public
_GstOMXMessage::__anon9::flush	omx/gstomx.h	/^    } flush;$/;"	m	union:_GstOMXMessage::__anon9	typeref:struct:_GstOMXMessage::__anon9::__anon11	access:public
_GstOMXMessage::__anon9::port_enable	omx/gstomx.h	/^    } port_enable;$/;"	m	union:_GstOMXMessage::__anon9	typeref:struct:_GstOMXMessage::__anon9::__anon13	access:public
_GstOMXMessage::__anon9::port_settings_changed	omx/gstomx.h	/^    } port_settings_changed;$/;"	m	union:_GstOMXMessage::__anon9	typeref:struct:_GstOMXMessage::__anon9::__anon14	access:public
_GstOMXMessage::__anon9::state_set	omx/gstomx.h	/^    } state_set;$/;"	m	union:_GstOMXMessage::__anon9	typeref:struct:_GstOMXMessage::__anon9::__anon10	access:public
_GstOMXMessage::content	omx/gstomx.h	/^  } content;$/;"	m	struct:_GstOMXMessage	typeref:union:_GstOMXMessage::__anon9	access:public
_GstOMXMessage::type	omx/gstomx.h	/^  GstOMXMessageType type;$/;"	m	struct:_GstOMXMessage	access:public
_GstOMXPort	omx/gstomx.h	/^struct _GstOMXPort {$/;"	s
_GstOMXPort::buffers	omx/gstomx.h	/^  GPtrArray *buffers; \/* Contains GstOMXBuffer* *\/$/;"	m	struct:_GstOMXPort	access:public
_GstOMXPort::comp	omx/gstomx.h	/^  GstOMXComponent *comp;$/;"	m	struct:_GstOMXPort	access:public
_GstOMXPort::configured_settings_cookie	omx/gstomx.h	/^  gint configured_settings_cookie;$/;"	m	struct:_GstOMXPort	access:public
_GstOMXPort::disabled_pending	omx/gstomx.h	/^  gboolean disabled_pending; \/* was done until it took effect *\/$/;"	m	struct:_GstOMXPort	access:public
_GstOMXPort::enabled_pending	omx/gstomx.h	/^  gboolean enabled_pending;  \/* TRUE after OMX_Command{En,Dis}able *\/$/;"	m	struct:_GstOMXPort	access:public
_GstOMXPort::eos	omx/gstomx.h	/^  gboolean eos; \/* TRUE after a buffer with EOS flag was received *\/$/;"	m	struct:_GstOMXPort	access:public
_GstOMXPort::flushed	omx/gstomx.h	/^  gboolean flushed; \/* TRUE after OMX_CommandFlush was done *\/$/;"	m	struct:_GstOMXPort	access:public
_GstOMXPort::flushing	omx/gstomx.h	/^  gboolean flushing;$/;"	m	struct:_GstOMXPort	access:public
_GstOMXPort::index	omx/gstomx.h	/^  guint32 index;$/;"	m	struct:_GstOMXPort	access:public
_GstOMXPort::pending_buffers	omx/gstomx.h	/^  GQueue pending_buffers; \/* Contains GstOMXBuffer* *\/$/;"	m	struct:_GstOMXPort	access:public
_GstOMXPort::port_def	omx/gstomx.h	/^  OMX_PARAM_PORTDEFINITIONTYPE port_def;$/;"	m	struct:_GstOMXPort	access:public
_GstOMXPort::settings_cookie	omx/gstomx.h	/^  gint settings_cookie;$/;"	m	struct:_GstOMXPort	access:public
_GstOMXPort::tunneled	omx/gstomx.h	/^  gboolean tunneled;$/;"	m	struct:_GstOMXPort	access:public
_GstOMXTheoraDec	omx/gstomxtheoradec.h	/^struct _GstOMXTheoraDec$/;"	s
_GstOMXTheoraDec::header	omx/gstomxtheoradec.h	/^  GstBuffer *header;$/;"	m	struct:_GstOMXTheoraDec	access:public
_GstOMXTheoraDec::parent	omx/gstomxtheoradec.h	/^  GstOMXVideoDec parent;$/;"	m	struct:_GstOMXTheoraDec	access:public
_GstOMXTheoraDecClass	omx/gstomxtheoradec.h	/^struct _GstOMXTheoraDecClass$/;"	s
_GstOMXTheoraDecClass::parent_class	omx/gstomxtheoradec.h	/^  GstOMXVideoDecClass parent_class;$/;"	m	struct:_GstOMXTheoraDecClass	access:public
_GstOMXVP8Dec	omx/gstomxvp8dec.h	/^struct _GstOMXVP8Dec$/;"	s
_GstOMXVP8Dec::parent	omx/gstomxvp8dec.h	/^  GstOMXVideoDec parent;$/;"	m	struct:_GstOMXVP8Dec	access:public
_GstOMXVP8DecClass	omx/gstomxvp8dec.h	/^struct _GstOMXVP8DecClass$/;"	s
_GstOMXVP8DecClass::parent_class	omx/gstomxvp8dec.h	/^  GstOMXVideoDecClass parent_class;$/;"	m	struct:_GstOMXVP8DecClass	access:public
_GstOMXVideoDec	omx/gstomxvideodec.h	/^struct _GstOMXVideoDec$/;"	s
_GstOMXVideoDec::codec_data	omx/gstomxvideodec.h	/^  GstBuffer *codec_data;$/;"	m	struct:_GstOMXVideoDec	access:public
_GstOMXVideoDec::dec	omx/gstomxvideodec.h	/^  GstOMXComponent *dec;$/;"	m	struct:_GstOMXVideoDec	access:public
_GstOMXVideoDec::dec_in_port	omx/gstomxvideodec.h	/^  GstOMXPort *dec_in_port, *dec_out_port;$/;"	m	struct:_GstOMXVideoDec	access:public
_GstOMXVideoDec::dec_out_port	omx/gstomxvideodec.h	/^  GstOMXPort *dec_in_port, *dec_out_port;$/;"	m	struct:_GstOMXVideoDec	access:public
_GstOMXVideoDec::downstream_flow_ret	omx/gstomxvideodec.h	/^  GstFlowReturn downstream_flow_ret;$/;"	m	struct:_GstOMXVideoDec	access:public
_GstOMXVideoDec::drain_cond	omx/gstomxvideodec.h	/^  GCond drain_cond;$/;"	m	struct:_GstOMXVideoDec	access:public
_GstOMXVideoDec::drain_lock	omx/gstomxvideodec.h	/^  GMutex drain_lock;$/;"	m	struct:_GstOMXVideoDec	access:public
_GstOMXVideoDec::draining	omx/gstomxvideodec.h	/^  gboolean draining;$/;"	m	struct:_GstOMXVideoDec	access:public
_GstOMXVideoDec::drm_fd	omx/gstomxvideodec.h	/^  gint drm_fd;$/;"	m	struct:_GstOMXVideoDec	access:public
_GstOMXVideoDec::egl_in_port	omx/gstomxvideodec.h	/^  GstOMXPort *egl_in_port, *egl_out_port;$/;"	m	struct:_GstOMXVideoDec	access:public
_GstOMXVideoDec::egl_out_port	omx/gstomxvideodec.h	/^  GstOMXPort *egl_in_port, *egl_out_port;$/;"	m	struct:_GstOMXVideoDec	access:public
_GstOMXVideoDec::egl_render	omx/gstomxvideodec.h	/^  GstOMXComponent *egl_render;$/;"	m	struct:_GstOMXVideoDec	access:public
_GstOMXVideoDec::eglimage	omx/gstomxvideodec.h	/^  gboolean eglimage;$/;"	m	struct:_GstOMXVideoDec	access:public
_GstOMXVideoDec::hTBMBufMgr	omx/gstomxvideodec.h	/^  tbm_bufmgr hTBMBufMgr;$/;"	m	struct:_GstOMXVideoDec	access:public
_GstOMXVideoDec::in_port_pool	omx/gstomxvideodec.h	/^  GstBufferPool *in_port_pool, *out_port_pool;$/;"	m	struct:_GstOMXVideoDec	access:public
_GstOMXVideoDec::input_state	omx/gstomxvideodec.h	/^  GstVideoCodecState *input_state;$/;"	m	struct:_GstOMXVideoDec	access:public
_GstOMXVideoDec::last_upstream_ts	omx/gstomxvideodec.h	/^  GstClockTime last_upstream_ts;$/;"	m	struct:_GstOMXVideoDec	access:public
_GstOMXVideoDec::out_port_pool	omx/gstomxvideodec.h	/^  GstBufferPool *in_port_pool, *out_port_pool;$/;"	m	struct:_GstOMXVideoDec	access:public
_GstOMXVideoDec::parent	omx/gstomxvideodec.h	/^  GstVideoDecoder parent;$/;"	m	struct:_GstOMXVideoDec	access:public
_GstOMXVideoDec::started	omx/gstomxvideodec.h	/^  gboolean started;$/;"	m	struct:_GstOMXVideoDec	access:public
_GstOMXVideoDecClass	omx/gstomxvideodec.h	/^struct _GstOMXVideoDecClass$/;"	s
_GstOMXVideoDecClass::cdata	omx/gstomxvideodec.h	/^  GstOMXClassData cdata;$/;"	m	struct:_GstOMXVideoDecClass	access:public
_GstOMXVideoDecClass::is_format_change	omx/gstomxvideodec.h	/^  gboolean (*is_format_change) (GstOMXVideoDec * self, GstOMXPort * port, GstVideoCodecState * state);$/;"	m	struct:_GstOMXVideoDecClass	access:public
_GstOMXVideoDecClass::parent_class	omx/gstomxvideodec.h	/^  GstVideoDecoderClass parent_class;$/;"	m	struct:_GstOMXVideoDecClass	access:public
_GstOMXVideoDecClass::prepare_frame	omx/gstomxvideodec.h	/^  GstFlowReturn (*prepare_frame)   (GstOMXVideoDec * self, GstVideoCodecFrame *frame);$/;"	m	struct:_GstOMXVideoDecClass	access:public
_GstOMXVideoDecClass::set_format	omx/gstomxvideodec.h	/^  gboolean (*set_format)       (GstOMXVideoDec * self, GstOMXPort * port, GstVideoCodecState * state);$/;"	m	struct:_GstOMXVideoDecClass	access:public
_GstOMXVideoEnc	omx/gstomxvideoenc.h	/^struct _GstOMXVideoEnc$/;"	s
_GstOMXVideoEnc::control_rate	omx/gstomxvideoenc.h	/^  guint32 control_rate;$/;"	m	struct:_GstOMXVideoEnc	access:public
_GstOMXVideoEnc::downstream_flow_ret	omx/gstomxvideoenc.h	/^  GstFlowReturn downstream_flow_ret;$/;"	m	struct:_GstOMXVideoEnc	access:public
_GstOMXVideoEnc::drain_cond	omx/gstomxvideoenc.h	/^  GCond drain_cond;$/;"	m	struct:_GstOMXVideoEnc	access:public
_GstOMXVideoEnc::drain_lock	omx/gstomxvideoenc.h	/^  GMutex drain_lock;$/;"	m	struct:_GstOMXVideoEnc	access:public
_GstOMXVideoEnc::draining	omx/gstomxvideoenc.h	/^  gboolean draining;$/;"	m	struct:_GstOMXVideoEnc	access:public
_GstOMXVideoEnc::drm_fd	omx/gstomxvideoenc.h	/^  gint drm_fd;$/;"	m	struct:_GstOMXVideoEnc	access:public
_GstOMXVideoEnc::enc	omx/gstomxvideoenc.h	/^  GstOMXComponent *enc;$/;"	m	struct:_GstOMXVideoEnc	access:public
_GstOMXVideoEnc::enc_in_port	omx/gstomxvideoenc.h	/^  GstOMXPort *enc_in_port, *enc_out_port;$/;"	m	struct:_GstOMXVideoEnc	access:public
_GstOMXVideoEnc::enc_out_port	omx/gstomxvideoenc.h	/^  GstOMXPort *enc_in_port, *enc_out_port;$/;"	m	struct:_GstOMXVideoEnc	access:public
_GstOMXVideoEnc::hTBMBufMgr	omx/gstomxvideoenc.h	/^  tbm_bufmgr hTBMBufMgr;$/;"	m	struct:_GstOMXVideoEnc	access:public
_GstOMXVideoEnc::input_state	omx/gstomxvideoenc.h	/^  GstVideoCodecState *input_state;$/;"	m	struct:_GstOMXVideoEnc	access:public
_GstOMXVideoEnc::last_upstream_ts	omx/gstomxvideoenc.h	/^  GstClockTime last_upstream_ts;$/;"	m	struct:_GstOMXVideoEnc	access:public
_GstOMXVideoEnc::parent	omx/gstomxvideoenc.h	/^  GstVideoEncoder parent;$/;"	m	struct:_GstOMXVideoEnc	access:public
_GstOMXVideoEnc::quant_b_frames	omx/gstomxvideoenc.h	/^  guint32 quant_b_frames;$/;"	m	struct:_GstOMXVideoEnc	access:public
_GstOMXVideoEnc::quant_i_frames	omx/gstomxvideoenc.h	/^  guint32 quant_i_frames;$/;"	m	struct:_GstOMXVideoEnc	access:public
_GstOMXVideoEnc::quant_p_frames	omx/gstomxvideoenc.h	/^  guint32 quant_p_frames;$/;"	m	struct:_GstOMXVideoEnc	access:public
_GstOMXVideoEnc::started	omx/gstomxvideoenc.h	/^  gboolean started;$/;"	m	struct:_GstOMXVideoEnc	access:public
_GstOMXVideoEnc::target_bitrate	omx/gstomxvideoenc.h	/^  guint32 target_bitrate;$/;"	m	struct:_GstOMXVideoEnc	access:public
_GstOMXVideoEncClass	omx/gstomxvideoenc.h	/^struct _GstOMXVideoEncClass$/;"	s
_GstOMXVideoEncClass::cdata	omx/gstomxvideoenc.h	/^  GstOMXClassData cdata;$/;"	m	struct:_GstOMXVideoEncClass	access:public
_GstOMXVideoEncClass::get_caps	omx/gstomxvideoenc.h	/^  GstCaps            *(*get_caps)           (GstOMXVideoEnc * self, GstOMXPort * port, GstVideoCodecState * state);$/;"	m	struct:_GstOMXVideoEncClass	access:public
_GstOMXVideoEncClass::handle_output_frame	omx/gstomxvideoenc.h	/^  GstFlowReturn       (*handle_output_frame) (GstOMXVideoEnc * self, GstOMXPort * port, GstOMXBuffer * buffer, GstVideoCodecFrame * frame);$/;"	m	struct:_GstOMXVideoEncClass	access:public
_GstOMXVideoEncClass::parent_class	omx/gstomxvideoenc.h	/^  GstVideoEncoderClass parent_class;$/;"	m	struct:_GstOMXVideoEncClass	access:public
_GstOMXVideoEncClass::set_format	omx/gstomxvideoenc.h	/^  gboolean            (*set_format)          (GstOMXVideoEnc * self, GstOMXPort * port, GstVideoCodecState * state);$/;"	m	struct:_GstOMXVideoEncClass	access:public
_GstOMXWMVDec	omx/gstomxwmvdec.h	/^struct _GstOMXWMVDec$/;"	s
_GstOMXWMVDec::parent	omx/gstomxwmvdec.h	/^  GstOMXVideoDec parent;$/;"	m	struct:_GstOMXWMVDec	access:public
_GstOMXWMVDecClass	omx/gstomxwmvdec.h	/^struct _GstOMXWMVDecClass$/;"	s
_GstOMXWMVDecClass::parent_class	omx/gstomxwmvdec.h	/^  GstOMXVideoDecClass parent_class;$/;"	m	struct:_GstOMXWMVDecClass	access:public
_TBMBuffer	omx/gstomx.h	/^struct _TBMBuffer$/;"	s
_TBMBuffer::mBo	omx/gstomx.h	/^   tbm_bo  mBo;$/;"	m	struct:_TBMBuffer	access:public
_TBMBuffer::mBufFD	omx/gstomx.h	/^   OMX_U32 mBufFD;$/;"	m	struct:_TBMBuffer	access:public
_TBMBuffer::mPtr	omx/gstomx.h	/^   OMX_PTR mPtr;$/;"	m	struct:_TBMBuffer	access:public
_TBMBuffer::nAllocLen	omx/gstomx.h	/^   OMX_U32 nAllocLen;$/;"	m	struct:_TBMBuffer	access:public
_TBMInputBuffer	omx/gstomx.h	/^struct _TBMInputBuffer$/;"	s
_TBMInputBuffer::allocatedCount	omx/gstomx.h	/^    OMX_U32 allocatedCount;$/;"	m	struct:_TBMInputBuffer	access:public
_TBMInputBuffer::buffers	omx/gstomx.h	/^    GList *buffers;$/;"	m	struct:_TBMInputBuffer	access:public
_TBMInputBuffer::tbmBuffer	omx/gstomx.h	/^    struct _TBMBuffer tbmBuffer[MAX_INPUT_BUFFER];$/;"	m	struct:_TBMInputBuffer	typeref:struct:_TBMInputBuffer::_TBMBuffer	access:public
_TBMOutputBuffer	omx/gstomx.h	/^struct _TBMOutputBuffer$/;"	s
_TBMOutputBuffer::allocatedCount	omx/gstomx.h	/^    OMX_U32 allocatedCount;$/;"	m	struct:_TBMOutputBuffer	access:public
_TBMOutputBuffer::buffers	omx/gstomx.h	/^    GList *buffers;$/;"	m	struct:_TBMOutputBuffer	access:public
_TBMOutputBuffer::tbmBuffer	omx/gstomx.h	/^    MMVideoBuffer *tbmBuffer[MAX_OUTPUT_BUFFER];$/;"	m	struct:_TBMOutputBuffer	access:public
__GST_OMX_AAC_DEC_H__	omx/gstomxaacdec.h	21;"	d
__GST_OMX_AAC_ENC_H__	omx/gstomxaacenc.h	22;"	d
__GST_OMX_AMR_DEC_H__	omx/gstomxamrdec.h	21;"	d
__GST_OMX_ANALOG_AUDIO_SINK_H__	omx/gstomxanalogaudiosink.h	23;"	d
__GST_OMX_AUDIO_DEC_H__	omx/gstomxaudiodec.h	21;"	d
__GST_OMX_AUDIO_ENC_H__	omx/gstomxaudioenc.h	22;"	d
__GST_OMX_AUDIO_SINK_H__	omx/gstomxaudiosink.h	23;"	d
__GST_OMX_BUFFER_POOL_H__	omx/gstomxbufferpool.h	22;"	d
__GST_OMX_H263_DEC_H__	omx/gstomxh263dec.h	22;"	d
__GST_OMX_H263_ENC_H__	omx/gstomxh263enc.h	22;"	d
__GST_OMX_H264_DEC_H__	omx/gstomxh264dec.h	22;"	d
__GST_OMX_H264_ENC_H__	omx/gstomxh264enc.h	22;"	d
__GST_OMX_HDMI_AUDIO_SINK_H__	omx/gstomxhdmiaudiosink.h	23;"	d
__GST_OMX_H__	omx/gstomx.h	24;"	d
__GST_OMX_MJPEG_DEC_H__	omx/gstomxmjpegdec.h	22;"	d
__GST_OMX_MP3_DEC_H__	omx/gstomxmp3dec.h	21;"	d
__GST_OMX_MPEG2_VIDEO_DEC_H__	omx/gstomxmpeg2videodec.h	22;"	d
__GST_OMX_MPEG4_VIDEO_DEC_H__	omx/gstomxmpeg4videodec.h	22;"	d
__GST_OMX_MPEG4_VIDEO_ENC_H__	omx/gstomxmpeg4videoenc.h	22;"	d
__GST_OMX_THEORA_DEC_H__	omx/gstomxtheoradec.h	22;"	d
__GST_OMX_VIDEO_DEC_H__	omx/gstomxvideodec.h	22;"	d
__GST_OMX_VIDEO_ENC_H__	omx/gstomxvideoenc.h	22;"	d
__GST_OMX_VIDEO_H__	omx/gstomxvideo.h	22;"	d
__GST_OMX_VP8_DEC_H__	omx/gstomxvp8dec.h	22;"	d
__GST_OMX_WMV_DEC_H__	omx/gstomxwmvdec.h	22;"	d
__VCCOREVER__	examples/egl/testegl.c	53;"	d	file:
__VCCOREVER__	omx/gstomxvideodec.c	31;"	d	file:
__anon22::format	omx/gstomxvideo.h	/^  GstVideoFormat format;$/;"	m	struct:__anon22	access:public
__anon22::type	omx/gstomxvideo.h	/^  OMX_COLOR_FORMATTYPE type;$/;"	m	struct:__anon22	access:public
__anon2::__dummy2	omx/gstomx.h	/^    int      __dummy2;    \/* to align memory *\/$/;"	m	struct:__anon2	access:public
__anon2::a	omx/gstomx.h	/^    void   * a[SCMN_IMGB_MAX_PLANE];    \/* user space address of each image plane *\/$/;"	m	struct:__anon2	access:public
__anon2::bo	omx/gstomx.h	/^    tbm_bo bo[SCMN_IMGB_MAX_PLANE];$/;"	m	struct:__anon2	access:public
__anon2::buf_share_method	omx/gstomx.h	/^    int buf_share_method;$/;"	m	struct:__anon2	access:public
__anon2::cs	omx/gstomx.h	/^    int      cs;    \/* color space type of image *\/$/;"	m	struct:__anon2	access:public
__anon2::data	omx/gstomx.h	/^    int      data[16];    \/* arbitrary data *\/$/;"	m	struct:__anon2	access:public
__anon2::e	omx/gstomx.h	/^    int      e[SCMN_IMGB_MAX_PLANE];    \/* elevation of each image plane *\/$/;"	m	struct:__anon2	access:public
__anon2::fd	omx/gstomx.h	/^    int fd[SCMN_IMGB_MAX_PLANE];    \/* DMABUF fd of each image plane *\/$/;"	m	struct:__anon2	access:public
__anon2::h	omx/gstomx.h	/^    int      h[SCMN_IMGB_MAX_PLANE];    \/* height of each image plane *\/$/;"	m	struct:__anon2	access:public
__anon2::jpeg_data	omx/gstomx.h	/^    void *jpeg_data;                    \/* JPEG data *\/$/;"	m	struct:__anon2	access:public
__anon2::jpeg_size	omx/gstomx.h	/^    int jpeg_size;                      \/* JPEG size *\/$/;"	m	struct:__anon2	access:public
__anon2::p	omx/gstomx.h	/^    void   * p[SCMN_IMGB_MAX_PLANE];    \/* physical address of each image plane, if needs *\/$/;"	m	struct:__anon2	access:public
__anon2::s	omx/gstomx.h	/^    int      s[SCMN_IMGB_MAX_PLANE];    \/* stride of each image plane *\/$/;"	m	struct:__anon2	access:public
__anon2::tz_enable	omx/gstomx.h	/^    int tz_enable;                      \/* tzmem buffer *\/$/;"	m	struct:__anon2	access:public
__anon2::uv_size	omx/gstomx.h	/^    int uv_size;                        \/* UV plane size in case of ST12 *\/$/;"	m	struct:__anon2	access:public
__anon2::w	omx/gstomx.h	/^    int      w[SCMN_IMGB_MAX_PLANE];    \/* width of each image plane *\/$/;"	m	struct:__anon2	access:public
__anon2::x	omx/gstomx.h	/^    int      x;    \/* left postion, if needs *\/$/;"	m	struct:__anon2	access:public
__anon2::y	omx/gstomx.h	/^    int      y;    \/* top position, if needs *\/$/;"	m	struct:__anon2	access:public
__anon2::y_size	omx/gstomx.h	/^    int y_size;                         \/* Y plane size in case of ST12 *\/$/;"	m	struct:__anon2	access:public
__anon36::m	examples/egl/testegl.c	/^  GLfloat m[4][4];$/;"	m	struct:__anon36	file:	access:public
__anon37::animate	examples/egl/testegl.c	/^  gboolean animate;$/;"	m	struct:__anon37	file:	access:public
__anon37::aspect	examples/egl/testegl.c	/^  GLfloat aspect;$/;"	m	struct:__anon37	file:	access:public
__anon37::can_avoid_upload	examples/egl/testegl.c	/^  gboolean can_avoid_upload;$/;"	m	struct:__anon37	file:	access:public
__anon37::caps	examples/egl/testegl.c	/^  GstCaps *caps;$/;"	m	struct:__anon37	file:	access:public
__anon37::cond	examples/egl/testegl.c	/^  GCond cond;$/;"	m	struct:__anon37	file:	access:public
__anon37::context	examples/egl/testegl.c	/^  EGLContext context;$/;"	m	struct:__anon37	file:	access:public
__anon37::current_buffer	examples/egl/testegl.c	/^  GstBuffer *current_buffer;$/;"	m	struct:__anon37	file:	access:public
__anon37::display	examples/egl/testegl.c	/^  EGLDisplay display;$/;"	m	struct:__anon37	file:	access:public
__anon37::dispman_display	examples/egl/testegl.c	/^  DISPMANX_DISPLAY_HANDLE_T dispman_display;$/;"	m	struct:__anon37	file:	access:public
__anon37::dispman_element	examples/egl/testegl.c	/^  DISPMANX_ELEMENT_HANDLE_T dispman_element;$/;"	m	struct:__anon37	file:	access:public
__anon37::distance	examples/egl/testegl.c	/^  GLfloat distance;$/;"	m	struct:__anon37	file:	access:public
__anon37::distance_inc	examples/egl/testegl.c	/^  GLfloat distance_inc;$/;"	m	struct:__anon37	file:	access:public
__anon37::dropped	examples/egl/testegl.c	/^  guint64 dropped;$/;"	m	struct:__anon37	file:	access:public
__anon37::flushing	examples/egl/testegl.c	/^  gboolean flushing;$/;"	m	struct:__anon37	file:	access:public
__anon37::fov	examples/egl/testegl.c	/^  GLfloat fov;$/;"	m	struct:__anon37	file:	access:public
__anon37::fshader	examples/egl/testegl.c	/^  GLint fshader;$/;"	m	struct:__anon37	file:	access:public
__anon37::gst_display	examples/egl/testegl.c	/^  GstGLDisplayEGL *gst_display;$/;"	m	struct:__anon37	file:	access:public
__anon37::last_buffer	examples/egl/testegl.c	/^  GstBuffer *last_buffer;$/;"	m	struct:__anon37	file:	access:public
__anon37::main_loop	examples/egl/testegl.c	/^  GMainLoop *main_loop;$/;"	m	struct:__anon37	file:	access:public
__anon37::modelview	examples/egl/testegl.c	/^  GstGLMatrix modelview;$/;"	m	struct:__anon37	file:	access:public
__anon37::pipeline	examples/egl/testegl.c	/^  GstElement *pipeline;$/;"	m	struct:__anon37	file:	access:public
__anon37::popped_obj	examples/egl/testegl.c	/^  GstMiniObject *popped_obj;$/;"	m	struct:__anon37	file:	access:public
__anon37::program	examples/egl/testegl.c	/^  GLint program;$/;"	m	struct:__anon37	file:	access:public
__anon37::projection	examples/egl/testegl.c	/^  GstGLMatrix projection;$/;"	m	struct:__anon37	file:	access:public
__anon37::queue	examples/egl/testegl.c	/^  GAsyncQueue *queue;$/;"	m	struct:__anon37	file:	access:public
__anon37::queue_lock	examples/egl/testegl.c	/^  GMutex queue_lock;$/;"	m	struct:__anon37	file:	access:public
__anon37::rendered	examples/egl/testegl.c	/^  guint64 rendered;$/;"	m	struct:__anon37	file:	access:public
__anon37::rot_angle_x	examples/egl/testegl.c	/^  GLfloat rot_angle_x;$/;"	m	struct:__anon37	file:	access:public
__anon37::rot_angle_x_inc	examples/egl/testegl.c	/^  GLfloat rot_angle_x_inc;$/;"	m	struct:__anon37	file:	access:public
__anon37::rot_angle_y	examples/egl/testegl.c	/^  GLfloat rot_angle_y;$/;"	m	struct:__anon37	file:	access:public
__anon37::rot_angle_y_inc	examples/egl/testegl.c	/^  GLfloat rot_angle_y_inc;$/;"	m	struct:__anon37	file:	access:public
__anon37::rot_angle_z	examples/egl/testegl.c	/^  GLfloat rot_angle_z;$/;"	m	struct:__anon37	file:	access:public
__anon37::rot_angle_z_inc	examples/egl/testegl.c	/^  GLfloat rot_angle_z_inc;$/;"	m	struct:__anon37	file:	access:public
__anon37::running	examples/egl/testegl.c	/^  gboolean running;$/;"	m	struct:__anon37	file:	access:public
__anon37::s_texture	examples/egl/testegl.c	/^  GLint s_texture;$/;"	m	struct:__anon37	file:	access:public
__anon37::screen_height	examples/egl/testegl.c	/^  uint32_t screen_height;$/;"	m	struct:__anon37	file:	access:public
__anon37::screen_width	examples/egl/testegl.c	/^  uint32_t screen_width;$/;"	m	struct:__anon37	file:	access:public
__anon37::surface	examples/egl/testegl.c	/^  EGLSurface surface;$/;"	m	struct:__anon37	file:	access:public
__anon37::tex	examples/egl/testegl.c	/^  GLuint tex;$/;"	m	struct:__anon37	file:	access:public
__anon37::u_modelviewmatrix	examples/egl/testegl.c	/^  GLint u_modelviewmatrix;$/;"	m	struct:__anon37	file:	access:public
__anon37::u_projectionmatrix	examples/egl/testegl.c	/^  GLint u_projectionmatrix;$/;"	m	struct:__anon37	file:	access:public
__anon37::u_rotx	examples/egl/testegl.c	/^  GLint u_rotx;$/;"	m	struct:__anon37	file:	access:public
__anon37::u_roty	examples/egl/testegl.c	/^  GLint u_roty;$/;"	m	struct:__anon37	file:	access:public
__anon37::u_rotz	examples/egl/testegl.c	/^  GLint u_rotz;$/;"	m	struct:__anon37	file:	access:public
__anon37::vshader	examples/egl/testegl.c	/^  GLint vshader;$/;"	m	struct:__anon37	file:	access:public
__anon37::vsink	examples/egl/testegl.c	/^  GstElement *vsink;$/;"	m	struct:__anon37	file:	access:public
__dummy2	omx/gstomx.h	/^    int      __dummy2;    \/* to align memory *\/$/;"	m	struct:__anon2	access:public
_class_init	omx/gstomx.c	/^_class_init (gpointer g_class, gpointer data)$/;"	f	file:	signature:(gpointer g_class, gpointer data)
_state	examples/egl/testegl.c	/^static APP_STATE_T _state, *state = &_state;$/;"	v	file:
a	omx/gstomx.h	/^    void   * a[SCMN_IMGB_MAX_PLANE];    \/* user space address of each image plane *\/$/;"	m	struct:__anon2	access:public
aac_er_tools	omx/gstomxaacenc.h	/^  guint aac_er_tools;$/;"	m	struct:_GstOMXAACEnc	access:public
aac_tools	omx/gstomxaacenc.h	/^  guint aac_tools;$/;"	m	struct:_GstOMXAACEnc	access:public
aclocal_check	common/gst-autogen.sh	/^aclocal_check ()$/;"	f
add_videometa	omx/gstomxbufferpool.h	/^  gboolean add_videometa;$/;"	m	struct:_GstOMXBufferPool	access:public
adts_sample_index	omx/gstomxaacenc.c	/^} adts_sample_index;$/;"	t	typeref:enum:adts_sample_index__	file:
adts_sample_index__	omx/gstomxaacenc.c	/^typedef enum adts_sample_index__$/;"	g	file:
allocatedCount	omx/gstomx.h	/^    OMX_U32 allocatedCount;$/;"	m	struct:_TBMInputBuffer	access:public
allocatedCount	omx/gstomx.h	/^    OMX_U32 allocatedCount;$/;"	m	struct:_TBMOutputBuffer	access:public
allocating	omx/gstomxbufferpool.h	/^  gboolean allocating;$/;"	m	struct:_GstOMXBufferPool	access:public
allocator	omx/gstomxbufferpool.h	/^  GstAllocator *allocator;$/;"	m	struct:_GstOMXBufferPool	access:public
animate	examples/egl/testegl.c	/^  gboolean animate;$/;"	m	struct:__anon37	file:	access:public
app_data	omx/gstomx.h	/^      OMX_PTR app_data;$/;"	m	struct:_GstOMXMessage::__anon9::__anon16	access:public
aspect	examples/egl/testegl.c	/^  GLfloat aspect;$/;"	m	struct:__anon37	file:	access:public
audio	omx/openmax/OMX_Component.h	/^        OMX_AUDIO_PORTDEFINITIONTYPE audio;$/;"	m	union:OMX_PARAM_PORTDEFINITIONTYPE::__anon33	access:public
autogen_options	common/gst-autogen.sh	/^autogen_options ()$/;"	f
autoheader_check	common/gst-autogen.sh	/^autoheader_check ()$/;"	f
b16x16	omx/openmax/OMX_Video.h	/^    OMX_BOOL b16x16; $/;"	m	struct:OMX_VIDEO_PARAM_VBSMCTYPE	access:public
b16x8	omx/openmax/OMX_Video.h	/^    OMX_BOOL b16x8; $/;"	m	struct:OMX_VIDEO_PARAM_VBSMCTYPE	access:public
b4x4	omx/openmax/OMX_Video.h	/^    OMX_BOOL b4x4;$/;"	m	struct:OMX_VIDEO_PARAM_VBSMCTYPE	access:public
b4x8	omx/openmax/OMX_Video.h	/^    OMX_BOOL b4x8;$/;"	m	struct:OMX_VIDEO_PARAM_VBSMCTYPE	access:public
b8x16	omx/openmax/OMX_Video.h	/^    OMX_BOOL b8x16;$/;"	m	struct:OMX_VIDEO_PARAM_VBSMCTYPE	access:public
b8x4	omx/openmax/OMX_Video.h	/^    OMX_BOOL b8x4;$/;"	m	struct:OMX_VIDEO_PARAM_VBSMCTYPE	access:public
b8x8	omx/openmax/OMX_Video.h	/^    OMX_BOOL b8x8;$/;"	m	struct:OMX_VIDEO_PARAM_VBSMCTYPE	access:public
bACPred	omx/openmax/OMX_Video.h	/^    OMX_BOOL bACPred;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG4TYPE	access:public
bAllKeys	omx/openmax/OMX_Component.h	/^    OMX_BOOL bAllKeys;	\/* if true then this structure refers to all keys and $/;"	m	struct:OMX_PARAM_METADATAFILTERTYPE	access:public
bAllKeys	omx/openmax/OMX_Component.h	/^    OMX_BOOL bAllKeys;$/;"	m	struct:OMX_CONFIG_CONTAINERNODECOUNTTYPE	access:public
bAllKeys	omx/openmax/OMX_Component.h	/^    OMX_BOOL bAllKeys;$/;"	m	struct:OMX_CONFIG_CONTAINERNODEIDTYPE	access:public
bAutoAperture	omx/openmax/OMX_IVCommon.h	/^    OMX_BOOL bAutoAperture;		\/**< Whether aperture number is defined automatically *\/$/;"	m	struct:OMX_CONFIG_EXPOSUREVALUETYPE	access:public
bAutoSensitivity	omx/openmax/OMX_IVCommon.h	/^    OMX_BOOL bAutoSensitivity;	\/**< Whether sensitivity is defined automatically *\/$/;"	m	struct:OMX_CONFIG_EXPOSUREVALUETYPE	access:public
bAutoShutterSpeed	omx/openmax/OMX_IVCommon.h	/^    OMX_BOOL bAutoShutterSpeed;	\/**< Whether shutter speed is defined automatically *\/ $/;"	m	struct:OMX_CONFIG_EXPOSUREVALUETYPE	access:public
bBottom	omx/openmax/OMX_IVCommon.h	/^    OMX_BOOL bBottom;$/;"	m	struct:OMX_CONFIG_FOCUSREGIONTYPE	access:public
bBottomLeft	omx/openmax/OMX_IVCommon.h	/^    OMX_BOOL bBottomLeft;$/;"	m	struct:OMX_CONFIG_FOCUSREGIONTYPE	access:public
bBottomLeftStatus	omx/openmax/OMX_IVCommon.h	/^    OMX_BOOL bBottomLeftStatus;$/;"	m	struct:OMX_PARAM_FOCUSSTATUSTYPE	access:public
bBottomRight	omx/openmax/OMX_IVCommon.h	/^    OMX_BOOL bBottomRight;$/;"	m	struct:OMX_CONFIG_FOCUSREGIONTYPE	access:public
bBottomRightStatus	omx/openmax/OMX_IVCommon.h	/^    OMX_BOOL bBottomRightStatus;$/;"	m	struct:OMX_PARAM_FOCUSSTATUSTYPE	access:public
bBottomStatus	omx/openmax/OMX_IVCommon.h	/^    OMX_BOOL bBottomStatus;$/;"	m	struct:OMX_PARAM_FOCUSSTATUSTYPE	access:public
bBuffersContiguous	omx/openmax/OMX_Component.h	/^    OMX_BOOL bBuffersContiguous;$/;"	m	struct:OMX_PARAM_PORTDEFINITIONTYPE	access:public
bCenter	omx/openmax/OMX_IVCommon.h	/^    OMX_BOOL bCenter;$/;"	m	struct:OMX_CONFIG_FOCUSREGIONTYPE	access:public
bCenterStatus	omx/openmax/OMX_IVCommon.h	/^    OMX_BOOL bCenterStatus;$/;"	m	struct:OMX_PARAM_FOCUSSTATUSTYPE	access:public
bColorEnhancement	omx/openmax/OMX_IVCommon.h	/^    OMX_BOOL bColorEnhancement;$/;"	m	struct:OMX_CONFIG_COLORENHANCEMENTTYPE	access:public
bContinuous	omx/openmax/OMX_IVCommon.h	/^    OMX_BOOL bContinuous;   \/**< If true then ignore frame rate and emit capture $/;"	m	struct:OMX_CONFIG_CAPTUREMODETYPE	access:public
bDTX	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bDTX;                \/**< Enable Discontinuous Transmisssion *\/ $/;"	m	struct:OMX_AUDIO_PARAM_G723TYPE	access:public
bDTX	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bDTX;                \/**< Enable Discontinuous Transmisssion *\/$/;"	m	struct:OMX_AUDIO_PARAM_PDCEFRTYPE	access:public
bDTX	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bDTX;                \/**< Enable Discontinuous Transmisssion *\/$/;"	m	struct:OMX_AUDIO_PARAM_PDCFRTYPE	access:public
bDTX	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bDTX;                \/**< Enable Discontinuous Transmisssion *\/$/;"	m	struct:OMX_AUDIO_PARAM_PDCHRTYPE	access:public
bDTX	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bDTX;                \/**< Enable Discontinuous Transmisssion *\/$/;"	m	struct:OMX_AUDIO_PARAM_TDMAEFRTYPE	access:public
bDTX	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bDTX;                \/**< Enable Discontinuous Transmisssion *\/$/;"	m	struct:OMX_AUDIO_PARAM_TDMAFRTYPE	access:public
bDTX	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bDTX;            \/**< Enable Discontinuous Transmisssion *\/$/;"	m	struct:OMX_AUDIO_PARAM_G729TYPE	access:public
bDTX	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bDTX;            \/**< Enable Discontinuous Transmisssion *\/$/;"	m	struct:OMX_AUDIO_PARAM_GSMEFRTYPE	access:public
bDTX	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bDTX;            \/**< Enable Discontinuous Transmisssion *\/$/;"	m	struct:OMX_AUDIO_PARAM_GSMFRTYPE	access:public
bDTX	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bDTX;            \/**< Enable Discontinuous Transmisssion *\/$/;"	m	struct:OMX_AUDIO_PARAM_GSMHRTYPE	access:public
bDeblocking	omx/openmax/OMX_IVCommon.h	/^    OMX_BOOL bDeblocking;$/;"	m	struct:OMX_PARAM_DEBLOCKINGTYPE	access:public
bDeferred	omx/openmax/OMX_ComponentExt.h	/^    OMX_BOOL bDeferred;$/;"	m	struct:OMX_CONFIG_COMMITMODETYPE	access:public
bDirect8x8Inference	omx/openmax/OMX_Video.h	/^    OMX_BOOL bDirect8x8Inference;  $/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE	access:public
bDirectSpatialTemporal	omx/openmax/OMX_Video.h	/^	OMX_BOOL bDirectSpatialTemporal;$/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE	access:public
bDownmix	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bDownmix;		  \/**< Downmix input from stereo to mono (has no effect on $/;"	m	struct:OMX_AUDIO_PARAM_VORBISTYPE	access:public
bEnable	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bEnable;             \/**< Enable\/disable for reverberation control *\/$/;"	m	struct:OMX_AUDIO_CONFIG_REVERBERATIONTYPE	access:public
bEnable	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bEnable;          \/**< Enable\/disable for bass control *\/$/;"	m	struct:OMX_AUDIO_CONFIG_BASSTYPE	access:public
bEnable	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bEnable;          \/**< Enable\/disable for chorus *\/$/;"	m	struct:OMX_AUDIO_CONFIG_CHORUSTYPE	access:public
bEnable	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bEnable;          \/**< Enable\/disable for equalizer *\/$/;"	m	struct:OMX_AUDIO_CONFIG_EQUALIZERTYPE	access:public
bEnable	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bEnable;          \/**< Enable\/disable for stereo widening control *\/$/;"	m	struct:OMX_AUDIO_CONFIG_STEREOWIDENINGTYPE	access:public
bEnable	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bEnable;          \/**< Enable\/disable for treble control *\/$/;"	m	struct:OMX_AUDIO_CONFIG_TREBLETYPE	access:public
bEnable	omx/openmax/OMX_CoreExt.h	/^    OMX_BOOL bEnable;           \/**< enable (OMX_TRUE) or disable (OMX_FALSE) the callback *\/$/;"	m	struct:OMX_CONFIG_CALLBACKREQUESTTYPE	access:public
bEnable	omx/openmax/OMX_IVCommon.h	/^    OMX_BOOL bEnable;$/;"	m	struct:OMX_PARAM_INTERLEAVETYPE	access:public
bEnableASO	omx/openmax/OMX_Video.h	/^    OMX_BOOL bEnableASO;  $/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE	access:public
bEnableBitrate	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bEnableBitrate;   \/**< Use bitrate value instead of bitpool *\/$/;"	m	struct:OMX_AUDIO_PARAM_SBCTYPE	access:public
bEnableDataPartitioning	omx/openmax/OMX_Video.h	/^    OMX_BOOL bEnableDataPartitioning;$/;"	m	struct:OMX_VIDEO_PARAM_ERRORCORRECTIONTYPE	access:public
bEnableFMO	omx/openmax/OMX_Video.h	/^    OMX_BOOL bEnableFMO;  $/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE	access:public
bEnableHEC	omx/openmax/OMX_Video.h	/^    OMX_BOOL bEnableHEC;$/;"	m	struct:OMX_VIDEO_PARAM_ERRORCORRECTIONTYPE	access:public
bEnableLatencyMode	omx/openmax/OMX_Video.h	/^    OMX_BOOL bEnableLatencyMode;$/;"	m	struct:OMX_VIDEO_PARAM_RVTYPE	access:public
bEnablePM	omx/openmax/OMX_Other.h	/^    OMX_BOOL bEnablePM;       \/**< Flag to enable Power Management *\/$/;"	m	struct:OMX_OTHER_CONFIG_POWERTYPE	access:public
bEnablePostFilter	omx/openmax/OMX_Video.h	/^    OMX_BOOL bEnablePostFilter;$/;"	m	struct:OMX_VIDEO_PARAM_RVTYPE	access:public
bEnableRS	omx/openmax/OMX_Video.h	/^    OMX_BOOL bEnableRS;   $/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE	access:public
bEnableRVLC	omx/openmax/OMX_Video.h	/^    OMX_BOOL bEnableRVLC;$/;"	m	struct:OMX_VIDEO_PARAM_ERRORCORRECTIONTYPE	access:public
bEnableResync	omx/openmax/OMX_Video.h	/^    OMX_BOOL bEnableResync;$/;"	m	struct:OMX_VIDEO_PARAM_ERRORCORRECTIONTYPE	access:public
bEnableTemporalInterpolation	omx/openmax/OMX_Video.h	/^    OMX_BOOL bEnableTemporalInterpolation;$/;"	m	struct:OMX_VIDEO_PARAM_RVTYPE	access:public
bEnableUEP	omx/openmax/OMX_Video.h	/^    OMX_BOOL bEnableUEP;  $/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE	access:public
bEnableVFU	omx/openmax/OMX_Video.h	/^    OMX_BOOL bEnableVFU;      $/;"	m	struct:OMX_VIDEO_PARAM_VIDEOFASTUPDATETYPE	access:public
bEnabled	omx/openmax/OMX_Component.h	/^    OMX_BOOL bEnabled;	\/* if true then key is part of filter (e.g. $/;"	m	struct:OMX_PARAM_METADATAFILTERTYPE	access:public
bEnabled	omx/openmax/OMX_Component.h	/^    OMX_BOOL bEnabled;             \/**< Ports default to enabled and are enabled\/disabled by$/;"	m	struct:OMX_PARAM_PORTDEFINITIONTYPE	access:public
bEnabled	omx/openmax/OMX_Component.h	/^    OMX_BOOL bEnabled;    $/;"	m	struct:OMX_CONFIG_BOOLEANTYPE	access:public
bEnabled	omx/openmax/OMX_Video.h	/^    OMX_BOOL bEnabled;$/;"	m	struct:OMX_CONFIG_MBERRORREPORTINGTYPE	access:public
bEntropyCodingCABAC	omx/openmax/OMX_Video.h	/^    OMX_BOOL bEntropyCodingCABAC;  $/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE	access:public
bFlagErrorConcealment	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bFlagErrorConcealment;  \/**< Turns on error concealment if it is $/;"	m	struct:OMX_AUDIO_PORTDEFINITIONTYPE	access:public
bFlagErrorConcealment	omx/openmax/OMX_Image.h	/^    OMX_BOOL bFlagErrorConcealment;$/;"	m	struct:OMX_IMAGE_PORTDEFINITIONTYPE	access:public
bFlagErrorConcealment	omx/openmax/OMX_Video.h	/^    OMX_BOOL bFlagErrorConcealment;$/;"	m	struct:OMX_VIDEO_PORTDEFINITIONTYPE	access:public
bForceRoundingTypeToZero	omx/openmax/OMX_Video.h	/^    OMX_BOOL bForceRoundingTypeToZero;$/;"	m	struct:OMX_VIDEO_PARAM_H263TYPE	access:public
bFourMV	omx/openmax/OMX_Video.h	/^    OMX_BOOL bFourMV;$/;"	m	struct:OMX_VIDEO_PARAM_MOTIONVECTORTYPE	access:public
bFrameLimited	omx/openmax/OMX_IVCommon.h	/^    OMX_BOOL bFrameLimited; \/**< If true then terminate capture after the port emits the $/;"	m	struct:OMX_CONFIG_CAPTUREMODETYPE	access:public
bFrameMBsOnly	omx/openmax/OMX_Video.h	/^	OMX_BOOL bFrameMBsOnly;        									$/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE	access:public
bGov	omx/openmax/OMX_Video.h	/^    OMX_BOOL bGov;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG4TYPE	access:public
bHiPassFilter	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bHiPassFilter;       \/**< Enable High Pass Filter *\/ $/;"	m	struct:OMX_AUDIO_PARAM_G723TYPE	access:public
bHiPassFilter	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bHiPassFilter;       \/**< Enable High Pass Filter *\/$/;"	m	struct:OMX_AUDIO_PARAM_PDCEFRTYPE	access:public
bHiPassFilter	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bHiPassFilter;       \/**< Enable High Pass Filter *\/$/;"	m	struct:OMX_AUDIO_PARAM_PDCFRTYPE	access:public
bHiPassFilter	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bHiPassFilter;       \/**< Enable High Pass Filter *\/$/;"	m	struct:OMX_AUDIO_PARAM_PDCHRTYPE	access:public
bHiPassFilter	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bHiPassFilter;       \/**< Enable High Pass Filter *\/$/;"	m	struct:OMX_AUDIO_PARAM_TDMAEFRTYPE	access:public
bHiPassFilter	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bHiPassFilter;       \/**< Enable High Pass Filter *\/$/;"	m	struct:OMX_AUDIO_PARAM_TDMAFRTYPE	access:public
bHiPassFilter	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bHiPassFilter;       \/**< Enable encoder's High Pass Filter *\/$/;"	m	struct:OMX_AUDIO_PARAM_EVRCTYPE	access:public
bHiPassFilter	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bHiPassFilter;       \/**< Enable encoder's High Pass Filter ??*\/$/;"	m	struct:OMX_AUDIO_PARAM_SMVTYPE	access:public
bHiPassFilter	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bHiPassFilter;   \/**< Enable High Pass Filter *\/$/;"	m	struct:OMX_AUDIO_PARAM_GSMEFRTYPE	access:public
bHiPassFilter	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bHiPassFilter;   \/**< Enable High Pass Filter *\/$/;"	m	struct:OMX_AUDIO_PARAM_GSMFRTYPE	access:public
bHiPassFilter	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bHiPassFilter;   \/**< Enable High Pass Filter *\/$/;"	m	struct:OMX_AUDIO_PARAM_GSMHRTYPE	access:public
bInterleaved	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bInterleaved;            \/**< True for normal interleaved data; false for $/;"	m	struct:OMX_AUDIO_PARAM_PCMMODETYPE	access:public
bIsLeafType	omx/openmax/OMX_Component.h	/^    OMX_BOOL bIsLeafType;$/;"	m	struct:OMX_CONFIG_CONTAINERNODEIDTYPE	access:public
bIsMIDI	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bIsMIDI;           \/**< TRUE if nChannel refers to a MIDI channel,$/;"	m	struct:OMX_AUDIO_CONFIG_CHANNELMUTETYPE	access:public
bIsMIDI	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bIsMIDI;           \/**< TRUE if nChannel refers to a MIDI channel,$/;"	m	struct:OMX_AUDIO_CONFIG_CHANNELVOLUMETYPE	access:public
bLeft	omx/openmax/OMX_IVCommon.h	/^    OMX_BOOL bLeft;$/;"	m	struct:OMX_CONFIG_FOCUSREGIONTYPE	access:public
bLeftStatus	omx/openmax/OMX_IVCommon.h	/^    OMX_BOOL bLeftStatus;$/;"	m	struct:OMX_PARAM_FOCUSSTATUSTYPE	access:public
bLinear	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bLinear;           \/**< Is the volume to be set in linear (0.100) $/;"	m	struct:OMX_AUDIO_CONFIG_VOLUMETYPE	access:public
bLinear	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bLinear;           \/**< Is the volume to be set in linear (0.100) or $/;"	m	struct:OMX_AUDIO_CONFIG_CHANNELVOLUMETYPE	access:public
bLoadDefaultSound	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bLoadDefaultSound;    \/**< Whether to load default sound $/;"	m	struct:OMX_AUDIO_PARAM_MIDITYPE	access:public
bLoudness	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bLoudness;        \/**< Enable\/disable for loudness *\/$/;"	m	struct:OMX_AUDIO_CONFIG_LOUDNESSTYPE	access:public
bMBAFF	omx/openmax/OMX_Video.h	/^    OMX_BOOL bMBAFF;               $/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE	access:public
bManaged	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bManaged;		  \/**< Set  bitrate  management  mode. This turns off the$/;"	m	struct:OMX_AUDIO_PARAM_VORBISTYPE	access:public
bMute	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bMute;             \/**< Mute setting for this channel *\/$/;"	m	struct:OMX_AUDIO_CONFIG_CHANNELMUTETYPE	access:public
bMute	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bMute;             \/**< Mute setting for this port *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MUTETYPE	access:public
bNoiseReduction	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bNoiseReduction;  \/**< Enable\/disable for noise reduction *\/$/;"	m	struct:OMX_AUDIO_CONFIG_NOISEREDUCTIONTYPE	access:public
bNoiseSuppressor	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bNoiseSuppressor;    \/**< Enable encoder's noise suppressor pre-processing *\/$/;"	m	struct:OMX_AUDIO_PARAM_EVRCTYPE	access:public
bNoiseSuppressor	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bNoiseSuppressor;    \/**< Enable encoder's noise suppressor pre-processing *\/$/;"	m	struct:OMX_AUDIO_PARAM_SMVTYPE	access:public
bOneShot	omx/openmax/OMX_IVCommon.h	/^    OMX_BOOL bOneShot;$/;"	m	struct:OMX_PARAM_SENSORMODETYPE	access:public
bPLUSPTYPEAllowed	omx/openmax/OMX_Video.h	/^    OMX_BOOL bPLUSPTYPEAllowed;$/;"	m	struct:OMX_VIDEO_PARAM_H263TYPE	access:public
bPopulated	omx/openmax/OMX_Component.h	/^    OMX_BOOL bPopulated;           \/**< Port is populated with all of its buffers as indicated by$/;"	m	struct:OMX_PARAM_PORTDEFINITIONTYPE	access:public
bPostFilter	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bPostFilter;         \/**< Enable Post Filter *\/ $/;"	m	struct:OMX_AUDIO_PARAM_G723TYPE	access:public
bPostFilter	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bPostFilter;         \/**< Enable decoder's post Filter *\/$/;"	m	struct:OMX_AUDIO_PARAM_EVRCTYPE	access:public
bPostFilter	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bPostFilter;         \/**< Enable decoder's post Filter ??*\/$/;"	m	struct:OMX_AUDIO_PARAM_SMVTYPE	access:public
bRATE_REDUCon	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bRATE_REDUCon;           \/**< RATE_REDUCtion is requested for this frame *\/$/;"	m	struct:OMX_AUDIO_PARAM_SMVTYPE	access:public
bRATE_REDUCon	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bRATE_REDUCon;       \/**< RATE_REDUCtion is requested for this frame *\/$/;"	m	struct:OMX_AUDIO_PARAM_EVRCTYPE	access:public
bResourceConcealmentForbidden	omx/openmax/OMX_Component.h	/^    OMX_BOOL bResourceConcealmentForbidden; \/**< disallow the use of resource concealment $/;"	m	struct:OMX_RESOURCECONCEALMENTTYPE	access:public
bReversibleVLC	omx/openmax/OMX_Video.h	/^    OMX_BOOL bReversibleVLC;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG4TYPE	access:public
bRight	omx/openmax/OMX_IVCommon.h	/^    OMX_BOOL bRight;$/;"	m	struct:OMX_CONFIG_FOCUSREGIONTYPE	access:public
bRightStatus	omx/openmax/OMX_IVCommon.h	/^    OMX_BOOL bRightStatus;$/;"	m	struct:OMX_PARAM_FOCUSSTATUSTYPE	access:public
bSVH	omx/openmax/OMX_Video.h	/^    OMX_BOOL bSVH;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG4TYPE	access:public
bStab	omx/openmax/OMX_IVCommon.h	/^    OMX_BOOL bStab;$/;"	m	struct:OMX_CONFIG_FRAMESTABTYPE	access:public
bTop	omx/openmax/OMX_IVCommon.h	/^    OMX_BOOL bTop;$/;"	m	struct:OMX_CONFIG_FOCUSREGIONTYPE	access:public
bTopLeft	omx/openmax/OMX_IVCommon.h	/^    OMX_BOOL bTopLeft;$/;"	m	struct:OMX_CONFIG_FOCUSREGIONTYPE	access:public
bTopLeftStatus	omx/openmax/OMX_IVCommon.h	/^    OMX_BOOL bTopLeftStatus;$/;"	m	struct:OMX_PARAM_FOCUSSTATUSTYPE	access:public
bTopRight	omx/openmax/OMX_IVCommon.h	/^    OMX_BOOL bTopRight;$/;"	m	struct:OMX_CONFIG_FOCUSREGIONTYPE	access:public
bTopRightStatus	omx/openmax/OMX_IVCommon.h	/^    OMX_BOOL bTopRightStatus;$/;"	m	struct:OMX_PARAM_FOCUSSTATUSTYPE	access:public
bTopStatus	omx/openmax/OMX_IVCommon.h	/^    OMX_BOOL bTopStatus;$/;"	m	struct:OMX_PARAM_FOCUSSTATUSTYPE	access:public
bUnrestrictedMVs	omx/openmax/OMX_Video.h	/^    OMX_BOOL bUnrestrictedMVs;$/;"	m	struct:OMX_VIDEO_PARAM_MOTIONVECTORTYPE	access:public
bUseHadamard	omx/openmax/OMX_Video.h	/^    OMX_BOOL bUseHadamard;$/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE	access:public
bVibra	omx/openmax/OMX_Audio.h	/^    OMX_BOOL bVibra;            \/**< Does Vibra track exist? NOTE: May not return a meaningful $/;"	m	struct:OMX_AUDIO_CONFIG_MIDISTATUSTYPE	access:public
bWeightedPPrediction	omx/openmax/OMX_Video.h	/^    OMX_BOOL bWeightedPPrediction; $/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE	access:public
base_types	omx/gstomx.c	/^static const struct TypeOffest base_types[] = {$/;"	v	typeref:struct:TypeOffest	file:
bconstIpred	omx/openmax/OMX_Video.h	/^    OMX_BOOL bconstIpred ;$/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE	access:public
bitrate	omx/gstomxaacenc.h	/^  guint bitrate;$/;"	m	struct:_GstOMXAACEnc	access:public
bo	omx/gstomx.h	/^    tbm_bo bo[SCMN_IMGB_MAX_PLANE];$/;"	m	struct:__anon2	access:public
buf	omx/gstomxbufferpool.c	/^  GstOMXBuffer *buf;$/;"	m	struct:_GstOMXMemory	file:	access:public
buf_share_method	omx/gstomx.h	/^    int buf_share_method;$/;"	m	struct:__anon2	access:public
buffer	omx/gstomx.h	/^      OMX_BUFFERHEADERTYPE *buffer;$/;"	m	struct:_GstOMXMessage::__anon9::__anon16	access:public
buffer_done	omx/gstomx.h	/^    } buffer_done;$/;"	m	union:_GstOMXMessage::__anon9	typeref:struct:_GstOMXMessage::__anon9::__anon16	access:public
buffer_flag	omx/gstomx.h	/^    } buffer_flag;$/;"	m	union:_GstOMXMessage::__anon9	typeref:struct:_GstOMXMessage::__anon9::__anon15	access:public
buffer_size	omx/gstomxaudiosink.h	/^  guint buffer_size;$/;"	m	struct:_GstOMXAudioSink	access:public
buffering_cb	examples/egl/testegl.c	/^buffering_cb (GstBus * bus, GstMessage * msg, APP_STATE_T * state)$/;"	f	file:	signature:(GstBus * bus, GstMessage * msg, APP_STATE_T * state)
buffers	omx/gstomx.h	/^    GList *buffers;$/;"	m	struct:_TBMInputBuffer	access:public
buffers	omx/gstomx.h	/^    GList *buffers;$/;"	m	struct:_TBMOutputBuffer	access:public
buffers	omx/gstomx.h	/^  GPtrArray *buffers; \/* Contains GstOMXBuffer* *\/$/;"	m	struct:_GstOMXPort	access:public
buffers	omx/gstomxbufferpool.h	/^  GPtrArray *buffers;$/;"	m	struct:_GstOMXBufferPool	access:public
buffers_cb	examples/egl/testegl.c	/^buffers_cb (GstElement * fakesink, GstBuffer * buffer, GstPad * pad,$/;"	f	file:	signature:(GstElement * fakesink, GstBuffer * buffer, GstPad * pad, gpointer user_data)
bus_sync_handler	examples/egl/testegl.c	/^bus_sync_handler (GstBus * bus, GstMessage * message, GstPipeline * data)$/;"	f	file:	signature:(GstBus * bus, GstMessage * message, GstPipeline * data)
cMIMEType	omx/openmax/OMX_Audio.h	/^    OMX_STRING cMIMEType;            \/**< MIME type of data for the port *\/$/;"	m	struct:OMX_AUDIO_PORTDEFINITIONTYPE	access:public
cMIMEType	omx/openmax/OMX_Image.h	/^    OMX_STRING cMIMEType;$/;"	m	struct:OMX_IMAGE_PORTDEFINITIONTYPE	access:public
cMIMEType	omx/openmax/OMX_Video.h	/^    OMX_STRING cMIMEType;$/;"	m	struct:OMX_VIDEO_PORTDEFINITIONTYPE	access:public
cNodeName	omx/openmax/OMX_Component.h	/^    OMX_STRING cNodeName;$/;"	m	struct:OMX_CONFIG_CONTAINERNODEIDTYPE	access:public
cRole	omx/openmax/OMX_Core.h	/^    OMX_U8 cRole[OMX_MAX_STRINGNAME_SIZE];  \/**< name of standard component which defines component role *\/$/;"	m	struct:OMX_PARAM_COMPONENTROLETYPE	access:public
calc_plane	omx/gstomx.c	/^calc_plane(int width, int height)$/;"	f	signature:(int width, int height)
calc_plane	omx/gstomx.h	/^int calc_plane(int width, int height);$/;"	p	signature:(int width, int height)
calc_uvplane	omx/gstomx.c	/^calc_uvplane(int width, int height)$/;"	f	signature:(int width, int height)
calc_uvplane	omx/gstomx.h	/^int calc_uvplane(int width, int height);$/;"	p	signature:(int width, int height)
calc_yplane	omx/gstomx.c	/^calc_yplane(int width, int height)$/;"	f	signature:(int width, int height)
calc_yplane	omx/gstomx.h	/^int calc_yplane(int width, int height);$/;"	p	signature:(int width, int height)
callbacks	omx/gstomx.c	/^static OMX_CALLBACKTYPE callbacks =$/;"	v	file:
can_avoid_upload	examples/egl/testegl.c	/^  gboolean can_avoid_upload;$/;"	m	struct:__anon37	file:	access:public
caps	examples/egl/testegl.c	/^  GstCaps *caps;$/;"	m	struct:__anon37	file:	access:public
caps	omx/gstomxbufferpool.h	/^  GstCaps *caps;$/;"	m	struct:_GstOMXBufferPool	access:public
cdata	omx/gstomxaudiodec.h	/^  GstOMXClassData cdata;$/;"	m	struct:_GstOMXAudioDecClass	access:public
cdata	omx/gstomxaudioenc.h	/^  GstOMXClassData cdata;$/;"	m	struct:_GstOMXAudioEncClass	access:public
cdata	omx/gstomxaudiosink.h	/^  GstOMXClassData cdata;$/;"	m	struct:_GstOMXAudioSinkClass	access:public
cdata	omx/gstomxvideodec.h	/^  GstOMXClassData cdata;$/;"	m	struct:_GstOMXVideoDecClass	access:public
cdata	omx/gstomxvideoenc.h	/^  GstOMXClassData cdata;$/;"	m	struct:_GstOMXVideoEncClass	access:public
ch2str	omx/gstomxaudiosink.c	/^ch2str (OMX_AUDIO_CHANNELTYPE ch)$/;"	f	file:	signature:(OMX_AUDIO_CHANNELTYPE ch)
channel_mapping	omx/gstomxaudiosink.c	/^channel_mapping (GstAudioRingBufferSpec * spec,$/;"	f	file:	signature:(GstAudioRingBufferSpec * spec, OMX_AUDIO_CHANNELTYPE * eChannelMapping)
channels	omx/gstomxaudiosink.h	/^  guint channels;$/;"	m	struct:_GstOMXAudioSink	access:public
close_ogl	examples/egl/testegl.c	/^close_ogl (void)$/;"	f	file:	signature:(void)
codec_data	omx/gstomxaudiodec.h	/^  GstBuffer *codec_data;$/;"	m	struct:_GstOMXAudioDec	access:public
codec_data	omx/gstomxvideodec.h	/^  GstBuffer *codec_data;$/;"	m	struct:_GstOMXVideoDec	access:public
comp	omx/gstomx.h	/^  GstOMXComponent *comp;$/;"	m	struct:_GstOMXPort	access:public
comp	omx/gstomxaudiosink.h	/^  GstOMXComponent *comp;$/;"	m	struct:_GstOMXAudioSink	access:public
component	omx/gstomx.h	/^      OMX_HANDLETYPE component;$/;"	m	struct:_GstOMXMessage::__anon9::__anon16	access:public
component	omx/gstomxbufferpool.h	/^  GstOMXComponent *component;$/;"	m	struct:_GstOMXBufferPool	access:public
component_name	omx/gstomx.h	/^  const gchar *component_name;$/;"	m	struct:_GstOMXClassData	access:public
component_role	omx/gstomx.h	/^  const gchar *component_role;$/;"	m	struct:_GstOMXClassData	access:public
component_vendor	omx/gstomx.h	/^  GOmxVendor component_vendor; \/* to check omx vender *\/$/;"	m	struct:_GstOMXCore	access:public
cond	examples/egl/testegl.c	/^  GCond cond;$/;"	m	struct:__anon37	file:	access:public
config	omx/gstomx.c	/^static GKeyFile *config = NULL;$/;"	v	file:
configured_settings_cookie	omx/gstomx.h	/^  gint configured_settings_cookie;$/;"	m	struct:_GstOMXPort	access:public
content	omx/gstomx.h	/^  } content;$/;"	m	struct:_GstOMXMessage	typeref:union:_GstOMXMessage::__anon9	access:public
contentURI	omx/openmax/OMX_Component.h	/^    OMX_U8 contentURI[1];               \/**< The URI name *\/$/;"	m	struct:OMX_PARAM_CONTENTURITYPE	access:public
context	examples/egl/testegl.c	/^  EGLContext context;$/;"	m	struct:__anon37	file:	access:public
control_rate	omx/gstomxvideoenc.h	/^  guint32 control_rate;$/;"	m	struct:_GstOMXVideoEnc	access:public
copy_frame	omx/gstomxvideodec.c	/^copy_frame (const GstVideoInfo * info, GstBuffer * outbuf)$/;"	f	file:	signature:(const GstVideoInfo * info, GstBuffer * outbuf)
core	omx/gstomx.h	/^  GstOMXCore *core;$/;"	m	struct:_GstOMXComponent	access:public
core_handles	omx/gstomx.c	/^G_LOCK_DEFINE_STATIC (core_handles);$/;"	v
core_handles	omx/gstomx.c	/^static GHashTable *core_handles;$/;"	v	file:
core_name	omx/gstomx.h	/^  const gchar *core_name;$/;"	m	struct:_GstOMXClassData	access:public
cs	omx/gstomx.h	/^    int      cs;    \/* color space type of image *\/$/;"	m	struct:__anon2	access:public
cube_f_src	examples/egl/testegl.c	/^static const gchar *cube_f_src =$/;"	v	file:
cube_v_src	examples/egl/testegl.c	/^static const gchar *cube_v_src =$/;"	v	file:
current_buffer	examples/egl/testegl.c	/^  GstBuffer *current_buffer;$/;"	m	struct:__anon37	file:	access:public
current_buffer_index	omx/gstomxbufferpool.h	/^  gint current_buffer_index;$/;"	m	struct:_GstOMXBufferPool	access:public
data	omx/gstomx.h	/^    int      data[16];    \/* arbitrary data *\/$/;"	m	struct:__anon2	access:public
data	omx/openmax/OMX_Core.h	/^    OMX_U8  data[1];     \/* Supporting data hint  *\/$/;"	m	struct:OMX_OTHER_EXTRADATATYPE	access:public
deactivated	omx/gstomxbufferpool.h	/^  gboolean deactivated;$/;"	m	struct:_GstOMXBufferPool	access:public
debug	common/gst-autogen.sh	/^debug ()$/;"	f
dec	omx/gstomxaudiodec.h	/^  GstOMXComponent *dec;$/;"	m	struct:_GstOMXAudioDec	access:public
dec	omx/gstomxvideodec.h	/^  GstOMXComponent *dec;$/;"	m	struct:_GstOMXVideoDec	access:public
dec_in_port	omx/gstomxaudiodec.h	/^  GstOMXPort *dec_in_port, *dec_out_port;$/;"	m	struct:_GstOMXAudioDec	access:public
dec_in_port	omx/gstomxvideodec.h	/^  GstOMXPort *dec_in_port, *dec_out_port;$/;"	m	struct:_GstOMXVideoDec	access:public
dec_out_port	omx/gstomxaudiodec.h	/^  GstOMXPort *dec_in_port, *dec_out_port;$/;"	m	struct:_GstOMXAudioDec	access:public
dec_out_port	omx/gstomxvideodec.h	/^  GstOMXPort *dec_in_port, *dec_out_port;$/;"	m	struct:_GstOMXVideoDec	access:public
default_sink_template_caps	omx/gstomx.h	/^  const gchar *default_sink_template_caps;$/;"	m	struct:_GstOMXClassData	access:public
default_src_template_caps	omx/gstomx.h	/^  const gchar *default_src_template_caps;$/;"	m	struct:_GstOMXClassData	access:public
deinit	omx/gstomx.h	/^  OMX_ERRORTYPE (*deinit) (void);$/;"	m	struct:_GstOMXCore	access:public
destination	omx/gstomxaudiosink.h	/^  const gchar * destination;$/;"	m	struct:_GstOMXAudioSinkClass	access:public
die_check	common/gst-autogen.sh	/^die_check ()$/;"	f
disabled_pending	omx/gstomx.h	/^  gboolean disabled_pending; \/* was done until it took effect *\/$/;"	m	struct:_GstOMXPort	access:public
display	examples/egl/testegl.c	/^  EGLDisplay display;$/;"	m	struct:__anon37	file:	access:public
dispman_display	examples/egl/testegl.c	/^  DISPMANX_DISPLAY_HANDLE_T dispman_display;$/;"	m	struct:__anon37	file:	access:public
dispman_element	examples/egl/testegl.c	/^  DISPMANX_ELEMENT_HANDLE_T dispman_element;$/;"	m	struct:__anon37	file:	access:public
distance	examples/egl/testegl.c	/^  GLfloat distance;$/;"	m	struct:__anon37	file:	access:public
distance_inc	examples/egl/testegl.c	/^  GLfloat distance_inc;$/;"	m	struct:__anon37	file:	access:public
downstream_flow_ret	omx/gstomxaudiodec.h	/^  GstFlowReturn downstream_flow_ret;$/;"	m	struct:_GstOMXAudioDec	access:public
downstream_flow_ret	omx/gstomxaudioenc.h	/^  GstFlowReturn downstream_flow_ret;$/;"	m	struct:_GstOMXAudioEnc	access:public
downstream_flow_ret	omx/gstomxvideodec.h	/^  GstFlowReturn downstream_flow_ret;$/;"	m	struct:_GstOMXVideoDec	access:public
downstream_flow_ret	omx/gstomxvideoenc.h	/^  GstFlowReturn downstream_flow_ret;$/;"	m	struct:_GstOMXVideoEnc	access:public
drain_cond	omx/gstomxaudiodec.h	/^  GCond drain_cond;$/;"	m	struct:_GstOMXAudioDec	access:public
drain_cond	omx/gstomxaudioenc.h	/^  GCond drain_cond;$/;"	m	struct:_GstOMXAudioEnc	access:public
drain_cond	omx/gstomxvideodec.h	/^  GCond drain_cond;$/;"	m	struct:_GstOMXVideoDec	access:public
drain_cond	omx/gstomxvideoenc.h	/^  GCond drain_cond;$/;"	m	struct:_GstOMXVideoEnc	access:public
drain_lock	omx/gstomxaudiodec.h	/^  GMutex drain_lock;$/;"	m	struct:_GstOMXAudioDec	access:public
drain_lock	omx/gstomxaudioenc.h	/^  GMutex drain_lock;$/;"	m	struct:_GstOMXAudioEnc	access:public
drain_lock	omx/gstomxvideodec.h	/^  GMutex drain_lock;$/;"	m	struct:_GstOMXVideoDec	access:public
drain_lock	omx/gstomxvideoenc.h	/^  GMutex drain_lock;$/;"	m	struct:_GstOMXVideoEnc	access:public
draining	omx/gstomxaudiodec.h	/^  gboolean draining;$/;"	m	struct:_GstOMXAudioDec	access:public
draining	omx/gstomxaudioenc.h	/^  gboolean draining;$/;"	m	struct:_GstOMXAudioEnc	access:public
draining	omx/gstomxvideodec.h	/^  gboolean draining;$/;"	m	struct:_GstOMXVideoDec	access:public
draining	omx/gstomxvideoenc.h	/^  gboolean draining;$/;"	m	struct:_GstOMXVideoEnc	access:public
drm_fd	omx/gstomxvideodec.h	/^  gint drm_fd;$/;"	m	struct:_GstOMXVideoDec	access:public
drm_fd	omx/gstomxvideoenc.h	/^  gint drm_fd;$/;"	m	struct:_GstOMXVideoEnc	access:public
dropped	examples/egl/testegl.c	/^  guint64 dropped;$/;"	m	struct:__anon37	file:	access:public
e	omx/gstomx.h	/^    int      e[SCMN_IMGB_MAX_PLANE];    \/* elevation of each image plane *\/$/;"	m	struct:__anon2	access:public
eAACProfile	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_AACPROFILETYPE eAACProfile;   \/**< AAC profile enumeration *\/$/;"	m	struct:OMX_AUDIO_PARAM_AACPROFILETYPE	access:public
eAACStreamFormat	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_AACSTREAMFORMATTYPE eAACStreamFormat; \/**< AAC stream format enumeration *\/$/;"	m	struct:OMX_AUDIO_PARAM_AACPROFILETYPE	access:public
eAMRBandMode	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRBANDMODETYPE eAMRBandMode; \/**< AMR Band Mode enumeration *\/ $/;"	m	struct:OMX_AUDIO_PARAM_AMRTYPE	access:public
eAMRDTXMode	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRDTXMODETYPE  eAMRDTXMode;  \/**< AMR DTX Mode enumeration *\/$/;"	m	struct:OMX_AUDIO_PARAM_AMRTYPE	access:public
eAMRFrameFormat	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRFRAMEFORMATTYPE eAMRFrameFormat; \/**< AMR frame format enumeration *\/$/;"	m	struct:OMX_AUDIO_PARAM_AMRTYPE	access:public
eAccuracy	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_MOTIONVECTORTYPE eAccuracy;$/;"	m	struct:OMX_VIDEO_PARAM_MOTIONVECTORTYPE	access:public
eBitRate	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_G723RATE eBitRate;  \/**< todo: Should this be moved to a config? *\/$/;"	m	struct:OMX_AUDIO_PARAM_G723TYPE	access:public
eBitType	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_G729TYPE eBitType;$/;"	m	struct:OMX_AUDIO_PARAM_G729TYPE	access:public
eBufferSupplier	omx/openmax/OMX_Core.h	/^    OMX_BUFFERSUPPLIERTYPE eBufferSupplier; \/**< buffer supplier *\/$/;"	m	struct:OMX_PARAM_BUFFERSUPPLIERTYPE	access:public
eCDMARate	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_CDMARATETYPE eCDMARate; \/**< Frame rate *\/$/;"	m	struct:OMX_AUDIO_PARAM_QCELP13TYPE	access:public
eCDMARate	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_CDMARATETYPE eCDMARate; \/**< Frame rate *\/$/;"	m	struct:OMX_AUDIO_PARAM_QCELP8TYPE	access:public
eCDMARate	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_CDMARATETYPE eCDMARate; \/**< Frame rate *\/$/;"	m	struct:OMX_AUDIO_PARAM_SMVTYPE	access:public
eCDMARate	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_CDMARATETYPE eCDMARate; \/**< actual Frame rate *\/$/;"	m	struct:OMX_AUDIO_PARAM_EVRCTYPE	access:public
eChannelMapping	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_CHANNELTYPE eChannelMapping[OMX_AUDIO_MAXCHANNELS]; \/**< Slot i contains channel defined by eChannelMap[i] *\/$/;"	m	struct:OMX_AUDIO_PARAM_PCMMODETYPE	access:public
eChannelMode	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_CHANNELMODETYPE eChannelMode;   \/**< Channel mode enumeration *\/$/;"	m	struct:OMX_AUDIO_PARAM_AACPROFILETYPE	access:public
eChannelMode	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_CHANNELMODETYPE eChannelMode;   \/**< Channel mode enumeration *\/$/;"	m	struct:OMX_AUDIO_PARAM_MP3TYPE	access:public
eChannelMode	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_CHANNELMODETYPE eChannelMode; \/**< Channel mode enumeration *\/$/;"	m	struct:OMX_AUDIO_PARAM_SBCTYPE	access:public
eClock	omx/openmax/OMX_Other.h	/^    OMX_TIME_REFCLOCKTYPE eClock;   \/**< Reference clock used to compute media time *\/                        $/;"	m	struct:OMX_TIME_CONFIG_ACTIVEREFCLOCKTYPE	access:public
eColorBlend	omx/openmax/OMX_IVCommon.h	/^    OMX_COLORBLENDTYPE  eColorBlend;$/;"	m	struct:OMX_CONFIG_COLORBLENDTYPE	access:public
eColorFormat	omx/openmax/OMX_Image.h	/^    OMX_COLOR_FORMATTYPE eColorFormat;$/;"	m	struct:OMX_IMAGE_PARAM_PORTFORMATTYPE	access:public
eColorFormat	omx/openmax/OMX_Image.h	/^    OMX_COLOR_FORMATTYPE eColorFormat;$/;"	m	struct:OMX_IMAGE_PORTDEFINITIONTYPE	access:public
eColorFormat	omx/openmax/OMX_Video.h	/^    OMX_COLOR_FORMATTYPE eColorFormat;$/;"	m	struct:OMX_VIDEO_PARAM_PORTFORMATTYPE	access:public
eColorFormat	omx/openmax/OMX_Video.h	/^    OMX_COLOR_FORMATTYPE eColorFormat;$/;"	m	struct:OMX_VIDEO_PORTDEFINITIONTYPE	access:public
eCompressionFormat	omx/openmax/OMX_Image.h	/^    OMX_IMAGE_CODINGTYPE eCompressionFormat;$/;"	m	struct:OMX_IMAGE_PARAM_PORTFORMATTYPE	access:public
eCompressionFormat	omx/openmax/OMX_Image.h	/^    OMX_IMAGE_CODINGTYPE eCompressionFormat;$/;"	m	struct:OMX_IMAGE_PORTDEFINITIONTYPE	access:public
eCompressionFormat	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_CODINGTYPE eCompressionFormat; $/;"	m	struct:OMX_VIDEO_PARAM_PORTFORMATTYPE	access:public
eCompressionFormat	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_CODINGTYPE eCompressionFormat;$/;"	m	struct:OMX_VIDEO_PORTDEFINITIONTYPE	access:public
eControlRate	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_CONTROLRATETYPE eControlRate; $/;"	m	struct:OMX_VIDEO_PARAM_BITRATETYPE	access:public
eDir	omx/openmax/OMX_Component.h	/^    OMX_DIRTYPE eDir;              \/**< Direction (input or output) of this port *\/$/;"	m	struct:OMX_PARAM_PORTDEFINITIONTYPE	access:public
eDither	omx/openmax/OMX_IVCommon.h	/^    OMX_DITHERTYPE eDither;   \/**< Type of dithering to use *\/$/;"	m	struct:OMX_CONFIG_DITHERTYPE	access:public
eDomain	omx/openmax/OMX_Component.h	/^    OMX_PORTDOMAINTYPE eDomain;    \/**< Domain of the port. Determines the contents of metadata below. *\/$/;"	m	struct:OMX_PARAM_PORTDEFINITIONTYPE	access:public
eEchoCancelation	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_ECHOCANTYPE eEchoCancelation; \/**< Echo cancelation settings *\/$/;"	m	struct:OMX_AUDIO_CONFIG_ECHOCANCELATIONTYPE	access:public
eEffect	omx/openmax/OMX_IVCommon.h	/^    OMX_TRANSITIONEFFECTTYPE eEffect;$/;"	m	struct:OMX_CONFIG_TRANSITIONEFFECTTYPE	access:public
eEncapsulationType	omx/openmax/OMX_IVCommon.h	/^    OMX_DATAUNITENCAPSULATIONTYPE eEncapsulationType;$/;"	m	struct:OMX_PARAM_DATAUNITTYPE	access:public
eEncoding	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_CODINGTYPE eEncoding;  \/**< Type of data expected for this $/;"	m	struct:OMX_AUDIO_PORTDEFINITIONTYPE	access:public
eEncoding	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_CODINGTYPE eEncoding; \/**< Type of data expected for this port (e.g. PCM, AMR, MP3, etc) *\/$/;"	m	struct:OMX_AUDIO_PARAM_PORTFORMATTYPE	access:public
eEndian	omx/openmax/OMX_Audio.h	/^    OMX_ENDIANTYPE eEndian;           \/**< indicates PCM data as little or big endian *\/ $/;"	m	struct:OMX_AUDIO_PARAM_PCMMODETYPE	access:public
eExposureControl	omx/openmax/OMX_IVCommon.h	/^    OMX_EXPOSURECONTROLTYPE eExposureControl;$/;"	m	struct:OMX_CONFIG_EXPOSURECONTROLTYPE	access:public
eFlashControl	omx/openmax/OMX_Image.h	/^    OMX_IMAGE_FLASHCONTROLTYPE eFlashControl;$/;"	m	struct:OMX_IMAGE_PARAM_FLASHCONTROLTYPE	access:public
eFocusControl	omx/openmax/OMX_Image.h	/^    OMX_IMAGE_FOCUSCONTROLTYPE eFocusControl;$/;"	m	struct:OMX_IMAGE_CONFIG_FOCUSCONTROLTYPE	access:public
eFocusStatus	omx/openmax/OMX_IVCommon.h	/^    OMX_FOCUSSTATUSTYPE eFocusStatus;$/;"	m	struct:OMX_PARAM_FOCUSSTATUSTYPE	access:public
eFormat	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_MP3STREAMFORMATTYPE eFormat;  \/**< MP3 stream format *\/$/;"	m	struct:OMX_AUDIO_PARAM_MP3TYPE	access:public
eFormat	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_RAFORMATTYPE eFormat; \/**< is the RealAudio audio format *\/$/;"	m	struct:OMX_AUDIO_PARAM_RATYPE	access:public
eFormat	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_WMAFORMATTYPE eFormat; \/**< Version of WMA stream \/ data *\/$/;"	m	struct:OMX_AUDIO_PARAM_WMATYPE	access:public
eFormat	omx/openmax/OMX_Other.h	/^    OMX_OTHER_FORMATTYPE eFormat;  \/**< Type of data expected for this channel *\/$/;"	m	struct:OMX_OTHER_PORTDEFINITIONTYPE	access:public
eFormat	omx/openmax/OMX_Other.h	/^    OMX_OTHER_FORMATTYPE eFormat; \/**< Type of data expected for this channel *\/$/;"	m	struct:OMX_OTHER_PARAM_PORTFORMATTYPE	access:public
eFormat	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_RVFORMATTYPE eFormat;$/;"	m	struct:OMX_VIDEO_PARAM_RVTYPE	access:public
eFormat	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_WMVFORMATTYPE eFormat;$/;"	m	struct:OMX_VIDEO_PARAM_WMVTYPE	access:public
eG726Mode	omx/openmax/OMX_Audio.h	/^     OMX_AUDIO_G726MODE eG726Mode;$/;"	m	struct:OMX_AUDIO_PARAM_G726TYPE	access:public
eHuffmanTable	omx/openmax/OMX_Image.h	/^    OMX_IMAGE_HUFFMANTABLETYPE eHuffmanTable;$/;"	m	struct:OMX_IMAGE_PARAM_HUFFMANTTABLETYPE	access:public
eImageFilter	omx/openmax/OMX_IVCommon.h	/^    OMX_IMAGEFILTERTYPE eImageFilter;$/;"	m	struct:OMX_CONFIG_IMAGEFILTERTYPE	access:public
eKeyCharset	omx/openmax/OMX_Component.h	/^    OMX_METADATACHARSETTYPE eKeyCharset;$/;"	m	struct:OMX_CONFIG_METADATAITEMTYPE	access:public
eKeyCharset	omx/openmax/OMX_Component.h	/^    OMX_METADATACHARSETTYPE eKeyCharset;$/;"	m	struct:OMX_PARAM_METADATAFILTERTYPE	access:public
eLevel	omx/openmax/OMX_Video.h	/^	OMX_VIDEO_AVCLEVELTYPE eLevel; $/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE	access:public
eLevel	omx/openmax/OMX_Video.h	/^	OMX_VIDEO_H263LEVELTYPE eLevel;$/;"	m	struct:OMX_VIDEO_PARAM_H263TYPE	access:public
eLevel	omx/openmax/OMX_Video.h	/^	OMX_VIDEO_MPEG2LEVELTYPE eLevel;   $/;"	m	struct:OMX_VIDEO_PARAM_MPEG2TYPE	access:public
eLevel	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4LEVELTYPE eLevel;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG4TYPE	access:public
eLevel	omx/openmax/OMX_Video.h	/^   OMX_U32 eLevel;        \/**< type is OMX_VIDEO_AVCLEVELTYPE, OMX_VIDEO_H263LEVELTYPE, $/;"	m	struct:OMX_VIDEO_PARAM_PROFILELEVELTYPE	access:public
eLoopFilterMode	omx/openmax/OMX_Video.h	/^	OMX_VIDEO_AVCLOOPFILTERTYPE eLoopFilterMode;$/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE	access:public
eMIDIPlayBackState	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_MIDIPLAYBACKSTATETYPE eMIDIPlayBackState;  \/**< MIDI playback state enumeration, read only field *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDISTATUSTYPE	access:public
eMetering	omx/openmax/OMX_IVCommon.h	/^    OMX_METERINGTYPE eMetering;$/;"	m	struct:OMX_CONFIG_EXPOSUREVALUETYPE	access:public
eMidiFormat	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_MIDIFORMATTYPE eMidiFormat; \/**< Version of the MIDI file *\/                                                                           $/;"	m	struct:OMX_AUDIO_PARAM_MIDITYPE	access:public
eMidiSoundBank	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_MIDISOUNDBANKTYPE eMidiSoundBank;   \/**< Midi sound bank type enumeration *\/$/;"	m	struct:OMX_AUDIO_PARAM_MIDILOADUSERSOUNDTYPE	access:public
eMidiSoundBankLayout	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_MIDISOUNDBANKLAYOUTTYPE eMidiSoundBankLayout; \/**< Midi sound bank layout enumeration *\/$/;"	m	struct:OMX_AUDIO_PARAM_MIDILOADUSERSOUNDTYPE	access:public
eMirror	omx/openmax/OMX_IVCommon.h	/^    OMX_MIRRORTYPE  eMirror;$/;"	m	struct:OMX_CONFIG_MIRRORTYPE	access:public
eNaluFormat	omx/openmax/OMX_VideoExt.h	/^    OMX_NALUFORMATSTYPE eNaluFormat;$/;"	m	struct:OMX_NALSTREAMFORMATTYPE	access:public
eNumData	omx/openmax/OMX_Audio.h	/^    OMX_NUMERICALDATATYPE eNumData;   \/**< indicates PCM data as signed or unsigned *\/ $/;"	m	struct:OMX_AUDIO_PARAM_PCMMODETYPE	access:public
ePCMMode	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_PCMMODETYPE ePCMMode;   \/**< PCM mode enumeration *\/ $/;"	m	struct:OMX_AUDIO_PARAM_PCMMODETYPE	access:public
ePolicy	omx/openmax/OMX_Component.h	/^    OMX_SUSPENSIONPOLICYTYPE ePolicy;$/;"	m	struct:OMX_PARAM_SUSPENSIONPOLICYTYPE	access:public
eProfile	omx/openmax/OMX_Audio.h	/^	OMX_AUDIO_WMAPROFILETYPE eProfile;  \/**< Profile of WMA stream \/ data *\/$/;"	m	struct:OMX_AUDIO_PARAM_WMATYPE	access:public
eProfile	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCPROFILETYPE eProfile;$/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE	access:public
eProfile	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_H263PROFILETYPE eProfile;$/;"	m	struct:OMX_VIDEO_PARAM_H263TYPE	access:public
eProfile	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG2PROFILETYPE eProfile;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG2TYPE	access:public
eProfile	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4PROFILETYPE eProfile;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG4TYPE	access:public
eProfile	omx/openmax/OMX_Video.h	/^   OMX_U32 eProfile;      \/**< type is OMX_VIDEO_AVCPROFILETYPE, OMX_VIDEO_H263PROFILETYPE, $/;"	m	struct:OMX_VIDEO_PARAM_PROFILELEVELTYPE	access:public
eQuantizationTable	omx/openmax/OMX_Image.h	/^    OMX_IMAGE_QUANTIZATIONTABLETYPE eQuantizationTable;$/;"	m	struct:OMX_IMAGE_PARAM_QUANTIZATIONTABLETYPE	access:public
eRefreshMode	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_INTRAREFRESHTYPE eRefreshMode;$/;"	m	struct:OMX_VIDEO_PARAM_INTRAREFRESHTYPE	access:public
eSBCAllocType	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_SBCALLOCMETHODTYPE eSBCAllocType;   \/**< SBC Allocation method type *\/$/;"	m	struct:OMX_AUDIO_PARAM_SBCTYPE	access:public
eScopeMode	omx/openmax/OMX_Component.h	/^    OMX_METADATASCOPETYPE eScopeMode;$/;"	m	struct:OMX_CONFIG_METADATAITEMCOUNTTYPE	access:public
eScopeMode	omx/openmax/OMX_Component.h	/^    OMX_METADATASCOPETYPE eScopeMode;$/;"	m	struct:OMX_CONFIG_METADATAITEMTYPE	access:public
eSearchMode	omx/openmax/OMX_Component.h	/^    OMX_METADATASEARCHMODETYPE eSearchMode;$/;"	m	struct:OMX_CONFIG_METADATAITEMTYPE	access:public
eSliceMode	omx/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCSLICEMODETYPE eSliceMode;$/;"	m	struct:OMX_VIDEO_PARAM_AVCSLICEFMO	access:public
eState	omx/openmax/OMX_Other.h	/^    OMX_TIME_CLOCKSTATE eState;     \/* Seeking Change. Added 7\/12.*\/$/;"	m	struct:OMX_TIME_MEDIATIMETYPE	access:public
eState	omx/openmax/OMX_Other.h	/^    OMX_TIME_CLOCKSTATE eState; \/**< State of the media time. *\/$/;"	m	struct:OMX_TIME_CONFIG_CLOCKSTATETYPE	access:public
eSupplier	omx/openmax/OMX_Core.h	/^    OMX_BUFFERSUPPLIERTYPE eSupplier; \/**< supplier preference *\/$/;"	m	struct:OMX_TUNNELSETUPTYPE	access:public
eType	omx/openmax/OMX_Component.h	/^    OMX_SUSPENSIONTYPE eType;             $/;"	m	struct:OMX_PARAM_SUSPENSIONTYPE	access:public
eType	omx/openmax/OMX_Core.h	/^    OMX_EXTRADATATYPE eType;       \/* Extra Data type *\/$/;"	m	struct:OMX_OTHER_EXTRADATATYPE	access:public
eType	omx/openmax/OMX_Other.h	/^    OMX_TIME_SEEKMODETYPE eType;    \/**< The seek mode *\/$/;"	m	struct:OMX_TIME_CONFIG_SEEKMODETYPE	access:public
eUnitType	omx/openmax/OMX_IVCommon.h	/^    OMX_DATAUNITTYPE eUnitType;$/;"	m	struct:OMX_PARAM_DATAUNITTYPE	access:public
eUpdateType	omx/openmax/OMX_Other.h	/^    OMX_TIME_UPDATETYPE eUpdateType; \/**< Reason for the update *\/$/;"	m	struct:OMX_TIME_MEDIATIMETYPE	access:public
eValueCharset	omx/openmax/OMX_Component.h	/^    OMX_METADATACHARSETTYPE eValueCharset;$/;"	m	struct:OMX_CONFIG_METADATAITEMTYPE	access:public
eWhiteBalControl	omx/openmax/OMX_IVCommon.h	/^    OMX_WHITEBALCONTROLTYPE eWhiteBalControl;$/;"	m	struct:OMX_CONFIG_WHITEBALCONTROLTYPE	access:public
eWideningType	omx/openmax/OMX_Audio.h	/^    OMX_AUDIO_STEREOWIDENINGTYPE eWideningType; \/**< Stereo widening algorithm type *\/$/;"	m	struct:OMX_AUDIO_CONFIG_STEREOWIDENINGTYPE	access:public
egl_in_port	omx/gstomxvideodec.h	/^  GstOMXPort *egl_in_port, *egl_out_port;$/;"	m	struct:_GstOMXVideoDec	access:public
egl_out_port	omx/gstomxvideodec.h	/^  GstOMXPort *egl_in_port, *egl_out_port;$/;"	m	struct:_GstOMXVideoDec	access:public
egl_render	omx/gstomxvideodec.h	/^  GstOMXComponent *egl_render;$/;"	m	struct:_GstOMXVideoDec	access:public
eglimage	omx/gstomx.h	/^  gboolean eglimage;$/;"	m	struct:_GstOMXBuffer	access:public
eglimage	omx/gstomxvideodec.h	/^  gboolean eglimage;$/;"	m	struct:_GstOMXVideoDec	access:public
element	omx/gstomxbufferpool.h	/^  GstElement *element;$/;"	m	struct:_GstOMXBufferPool	access:public
empty	omx/gstomx.h	/^      OMX_BOOL empty;$/;"	m	struct:_GstOMXMessage::__anon9::__anon16	access:public
enable	omx/gstomx.h	/^      OMX_BOOL enable;$/;"	m	struct:_GstOMXMessage::__anon9::__anon13	access:public
enable	omx/gstomx.h	/^  OMX_BOOL enable;$/;"	m	struct:_EnableGemBuffersParams	access:public
enabled_pending	omx/gstomx.h	/^  gboolean enabled_pending;  \/* TRUE after OMX_Command{En,Dis}able *\/$/;"	m	struct:_GstOMXPort	access:public
enc	omx/gstomxaudioenc.h	/^  GstOMXComponent *enc;$/;"	m	struct:_GstOMXAudioEnc	access:public
enc	omx/gstomxvideoenc.h	/^  GstOMXComponent *enc;$/;"	m	struct:_GstOMXVideoEnc	access:public
enc_in_port	omx/gstomxaudioenc.h	/^  GstOMXPort *enc_in_port, *enc_out_port;$/;"	m	struct:_GstOMXAudioEnc	access:public
enc_in_port	omx/gstomxvideoenc.h	/^  GstOMXPort *enc_in_port, *enc_out_port;$/;"	m	struct:_GstOMXVideoEnc	access:public
enc_out_port	omx/gstomxaudioenc.h	/^  GstOMXPort *enc_in_port, *enc_out_port;$/;"	m	struct:_GstOMXAudioEnc	access:public
enc_out_port	omx/gstomxvideoenc.h	/^  GstOMXPort *enc_in_port, *enc_out_port;$/;"	m	struct:_GstOMXVideoEnc	access:public
endianness	omx/gstomxaudiosink.h	/^  guint endianness;$/;"	m	struct:_GstOMXAudioSink	access:public
eos	omx/gstomx.h	/^  gboolean eos; \/* TRUE after a buffer with EOS flag was received *\/$/;"	m	struct:_GstOMXPort	access:public
eos_cb	examples/egl/testegl.c	/^eos_cb (GstBus * bus, GstMessage * msg, APP_STATE_T * state)$/;"	f	file:	signature:(GstBus * bus, GstMessage * msg, APP_STATE_T * state)
error	omx/gstomx.h	/^      OMX_ERRORTYPE error;$/;"	m	struct:_GstOMXMessage::__anon9::__anon12	access:public
error	omx/gstomx.h	/^    } error;$/;"	m	union:_GstOMXMessage::__anon9	typeref:struct:_GstOMXMessage::__anon9::__anon12	access:public
error_cb	examples/egl/testegl.c	/^error_cb (GstBus * bus, GstMessage * msg, APP_STATE_T * state)$/;"	f	file:	signature:(GstBus * bus, GstMessage * msg, APP_STATE_T * state)
events_cb	examples/egl/testegl.c	/^events_cb (GstPad * pad, GstPadProbeInfo * probe_info, gpointer user_data)$/;"	f	file:	signature:(GstPad * pad, GstPadProbeInfo * probe_info, gpointer user_data)
fd	omx/gstomx.h	/^    int fd[SCMN_IMGB_MAX_PLANE];    \/* DMABUF fd of each image plane *\/$/;"	m	struct:__anon2	access:public
flags	omx/gstomx.h	/^      OMX_U32 flags;$/;"	m	struct:_GstOMXMessage::__anon9::__anon15	access:public
flush	omx/gstomx.h	/^    } flush;$/;"	m	union:_GstOMXMessage::__anon9	typeref:struct:_GstOMXMessage::__anon9::__anon11	access:public
flush_internal	examples/egl/testegl.c	/^flush_internal (APP_STATE_T * state)$/;"	f	file:	signature:(APP_STATE_T * state)
flush_start	examples/egl/testegl.c	/^flush_start (APP_STATE_T * state)$/;"	f	file:	signature:(APP_STATE_T * state)
flush_stop	examples/egl/testegl.c	/^flush_stop (APP_STATE_T * state)$/;"	f	file:	signature:(APP_STATE_T * state)
flushed	omx/gstomx.h	/^  gboolean flushed; \/* TRUE after OMX_CommandFlush was done *\/$/;"	m	struct:_GstOMXPort	access:public
flushing	examples/egl/testegl.c	/^  gboolean flushing;$/;"	m	struct:__anon37	file:	access:public
flushing	omx/gstomx.h	/^  gboolean flushing;$/;"	m	struct:_GstOMXPort	access:public
format	omx/gstomxvideo.h	/^  GstVideoFormat format;$/;"	m	struct:__anon22	access:public
format	omx/openmax/OMX_Component.h	/^    } format;$/;"	m	struct:OMX_PARAM_PORTDEFINITIONTYPE	typeref:union:OMX_PARAM_PORTDEFINITIONTYPE::__anon33	access:public
fov	examples/egl/testegl.c	/^  GLfloat fov;$/;"	m	struct:__anon37	file:	access:public
free_handle	omx/gstomx.h	/^  OMX_ERRORTYPE (*free_handle) (OMX_HANDLETYPE handle);$/;"	m	struct:_GstOMXCore	access:public
fshader	examples/egl/testegl.c	/^  GLint fshader;$/;"	m	struct:__anon37	file:	access:public
get_caps	omx/gstomxaudioenc.h	/^  GstCaps *(*get_caps)         (GstOMXAudioEnc * self, GstOMXPort * port, GstAudioInfo * info);$/;"	m	struct:_GstOMXAudioEncClass	access:public
get_caps	omx/gstomxvideoenc.h	/^  GstCaps            *(*get_caps)           (GstOMXVideoEnc * self, GstOMXPort * port, GstVideoCodecState * state);$/;"	m	struct:_GstOMXVideoEncClass	access:public
get_channel_positions	omx/gstomxaudiodec.h	/^  gboolean (*get_channel_positions) (GstOMXAudioDec * self, GstOMXPort * port, GstAudioChannelPosition position[OMX_AUDIO_MAXCHANNELS]);$/;"	m	struct:_GstOMXAudioDecClass	access:public
get_handle	omx/gstomx.h	/^  OMX_ERRORTYPE (*get_handle) (OMX_HANDLETYPE * handle,$/;"	m	struct:_GstOMXCore	access:public
get_num_samples	omx/gstomxaudioenc.h	/^  guint    (*get_num_samples)  (GstOMXAudioEnc * self, GstOMXPort * port, GstAudioInfo * info, GstOMXBuffer * buffer);$/;"	m	struct:_GstOMXAudioEncClass	access:public
get_samples_per_frame	omx/gstomxaudiodec.h	/^  gint     (*get_samples_per_frame) (GstOMXAudioDec * self, GstOMXPort * port);$/;"	m	struct:_GstOMXAudioDecClass	access:public
get_type	omx/gstomx.c	/^  GType (*get_type) (void);$/;"	m	struct:TypeOffest	file:	access:public
gid0	examples/egl/testegl.c	/^TRACE_VC_MEMORY_DEFINE_ID (gid0);$/;"	v
gid1	examples/egl/testegl.c	/^TRACE_VC_MEMORY_DEFINE_ID (gid1);$/;"	v
gid2	examples/egl/testegl.c	/^TRACE_VC_MEMORY_DEFINE_ID (gid2);$/;"	v
gst_display	examples/egl/testegl.c	/^  GstGLDisplayEGL *gst_display;$/;"	m	struct:__anon37	file:	access:public
gst_gl_matrix_frustum	examples/egl/testegl.c	/^gst_gl_matrix_frustum (GstGLMatrix * matrix, GLfloat left, GLfloat right,$/;"	f	file:	signature:(GstGLMatrix * matrix, GLfloat left, GLfloat right, GLfloat bottom, GLfloat top, GLfloat nearZ, GLfloat farZ)
gst_gl_matrix_load_identity	examples/egl/testegl.c	/^gst_gl_matrix_load_identity (GstGLMatrix * matrix)$/;"	f	file:	signature:(GstGLMatrix * matrix)
gst_gl_matrix_multiply	examples/egl/testegl.c	/^gst_gl_matrix_multiply (GstGLMatrix * matrix, GstGLMatrix * srcA,$/;"	f	file:	signature:(GstGLMatrix * matrix, GstGLMatrix * srcA, GstGLMatrix * srcB)
gst_gl_matrix_perspective	examples/egl/testegl.c	/^gst_gl_matrix_perspective (GstGLMatrix * matrix, GLfloat fovy, GLfloat aspect,$/;"	f	file:	signature:(GstGLMatrix * matrix, GLfloat fovy, GLfloat aspect, GLfloat nearZ, GLfloat farZ)
gst_gl_matrix_translate	examples/egl/testegl.c	/^gst_gl_matrix_translate (GstGLMatrix * matrix, GLfloat tx, GLfloat ty,$/;"	f	file:	signature:(GstGLMatrix * matrix, GLfloat tx, GLfloat ty, GLfloat tz)
gst_omx_aac_dec_class_init	omx/gstomxaacdec.c	/^gst_omx_aac_dec_class_init (GstOMXAACDecClass * klass)$/;"	f	file:	signature:(GstOMXAACDecClass * klass)
gst_omx_aac_dec_debug_category	omx/gstomxaacdec.c	/^GST_DEBUG_CATEGORY_STATIC (gst_omx_aac_dec_debug_category);$/;"	v
gst_omx_aac_dec_get_channel_positions	omx/gstomxaacdec.c	/^gst_omx_aac_dec_get_channel_positions (GstOMXAudioDec * dec,$/;"	f	file:	signature:(GstOMXAudioDec * dec, GstOMXPort * port, GstAudioChannelPosition position[OMX_AUDIO_MAXCHANNELS])
gst_omx_aac_dec_get_channel_positions	omx/gstomxaacdec.c	/^static gboolean gst_omx_aac_dec_get_channel_positions (GstOMXAudioDec * dec,$/;"	p	file:	signature:(GstOMXAudioDec * dec, GstOMXPort * port, GstAudioChannelPosition position[OMX_AUDIO_MAXCHANNELS])
gst_omx_aac_dec_get_samples_per_frame	omx/gstomxaacdec.c	/^gst_omx_aac_dec_get_samples_per_frame (GstOMXAudioDec * dec, GstOMXPort * port)$/;"	f	file:	signature:(GstOMXAudioDec * dec, GstOMXPort * port)
gst_omx_aac_dec_get_samples_per_frame	omx/gstomxaacdec.c	/^static gint gst_omx_aac_dec_get_samples_per_frame (GstOMXAudioDec * dec,$/;"	p	file:	signature:(GstOMXAudioDec * dec, GstOMXPort * port)
gst_omx_aac_dec_get_type	omx/gstomxaacdec.h	/^GType gst_omx_aac_dec_get_type (void);$/;"	p	signature:(void)
gst_omx_aac_dec_init	omx/gstomxaacdec.c	/^gst_omx_aac_dec_init (GstOMXAACDec * self)$/;"	f	file:	signature:(GstOMXAACDec * self)
gst_omx_aac_dec_is_format_change	omx/gstomxaacdec.c	/^gst_omx_aac_dec_is_format_change (GstOMXAudioDec * dec, GstOMXPort * port,$/;"	f	file:	signature:(GstOMXAudioDec * dec, GstOMXPort * port, GstCaps * caps)
gst_omx_aac_dec_is_format_change	omx/gstomxaacdec.c	/^static gboolean gst_omx_aac_dec_is_format_change (GstOMXAudioDec * dec,$/;"	p	file:	signature:(GstOMXAudioDec * dec, GstOMXPort * port, GstCaps * caps)
gst_omx_aac_dec_set_format	omx/gstomxaacdec.c	/^gst_omx_aac_dec_set_format (GstOMXAudioDec * dec, GstOMXPort * port,$/;"	f	file:	signature:(GstOMXAudioDec * dec, GstOMXPort * port, GstCaps * caps)
gst_omx_aac_dec_set_format	omx/gstomxaacdec.c	/^static gboolean gst_omx_aac_dec_set_format (GstOMXAudioDec * dec,$/;"	p	file:	signature:(GstOMXAudioDec * dec, GstOMXPort * port, GstCaps * caps)
gst_omx_aac_enc_class_init	omx/gstomxaacenc.c	/^gst_omx_aac_enc_class_init (GstOMXAACEncClass * klass)$/;"	f	file:	signature:(GstOMXAACEncClass * klass)
gst_omx_aac_enc_debug_category	omx/gstomxaacenc.c	/^GST_DEBUG_CATEGORY_STATIC (gst_omx_aac_enc_debug_category);$/;"	v
gst_omx_aac_enc_get_caps	omx/gstomxaacenc.c	/^gst_omx_aac_enc_get_caps (GstOMXAudioEnc * enc, GstOMXPort * port,$/;"	f	file:	signature:(GstOMXAudioEnc * enc, GstOMXPort * port, GstAudioInfo * info)
gst_omx_aac_enc_get_caps	omx/gstomxaacenc.c	/^static GstCaps *gst_omx_aac_enc_get_caps (GstOMXAudioEnc * enc,$/;"	p	file:	signature:(GstOMXAudioEnc * enc, GstOMXPort * port, GstAudioInfo * info)
gst_omx_aac_enc_get_num_samples	omx/gstomxaacenc.c	/^gst_omx_aac_enc_get_num_samples (GstOMXAudioEnc * enc, GstOMXPort * port,$/;"	f	file:	signature:(GstOMXAudioEnc * enc, GstOMXPort * port, GstAudioInfo * info, GstOMXBuffer * buf)
gst_omx_aac_enc_get_num_samples	omx/gstomxaacenc.c	/^static guint gst_omx_aac_enc_get_num_samples (GstOMXAudioEnc * enc,$/;"	p	file:	signature:(GstOMXAudioEnc * enc, GstOMXPort * port, GstAudioInfo * info, GstOMXBuffer * buf)
gst_omx_aac_enc_get_property	omx/gstomxaacenc.c	/^gst_omx_aac_enc_get_property (GObject * object, guint prop_id, GValue * value,$/;"	f	file:	signature:(GObject * object, guint prop_id, GValue * value, GParamSpec * pspec)
gst_omx_aac_enc_get_property	omx/gstomxaacenc.c	/^static void gst_omx_aac_enc_get_property (GObject * object, guint prop_id,$/;"	p	file:	signature:(GObject * object, guint prop_id, GValue * value, GParamSpec * pspec)
gst_omx_aac_enc_get_type	omx/gstomxaacenc.h	/^GType gst_omx_aac_enc_get_type (void);$/;"	p	signature:(void)
gst_omx_aac_enc_init	omx/gstomxaacenc.c	/^gst_omx_aac_enc_init (GstOMXAACEnc * self)$/;"	f	file:	signature:(GstOMXAACEnc * self)
gst_omx_aac_enc_set_format	omx/gstomxaacenc.c	/^gst_omx_aac_enc_set_format (GstOMXAudioEnc * enc, GstOMXPort * port,$/;"	f	file:	signature:(GstOMXAudioEnc * enc, GstOMXPort * port, GstAudioInfo * info)
gst_omx_aac_enc_set_format	omx/gstomxaacenc.c	/^static gboolean gst_omx_aac_enc_set_format (GstOMXAudioEnc * enc,$/;"	p	file:	signature:(GstOMXAudioEnc * enc, GstOMXPort * port, GstAudioInfo * info)
gst_omx_aac_enc_set_property	omx/gstomxaacenc.c	/^gst_omx_aac_enc_set_property (GObject * object, guint prop_id,$/;"	f	file:	signature:(GObject * object, guint prop_id, const GValue * value, GParamSpec * pspec)
gst_omx_aac_enc_set_property	omx/gstomxaacenc.c	/^static void gst_omx_aac_enc_set_property (GObject * object, guint prop_id,$/;"	p	file:	signature:(GObject * object, guint prop_id, const GValue * value, GParamSpec * pspec)
gst_omx_aac_er_tools_get_type	omx/gstomxaacenc.c	/^gst_omx_aac_er_tools_get_type (void)$/;"	f	file:	signature:(void)
gst_omx_aac_tools_get_type	omx/gstomxaacenc.c	/^gst_omx_aac_tools_get_type (void)$/;"	f	file:	signature:(void)
gst_omx_amr_dec_class_init	omx/gstomxamrdec.c	/^gst_omx_amr_dec_class_init (GstOMXAMRDecClass * klass)$/;"	f	file:	signature:(GstOMXAMRDecClass * klass)
gst_omx_amr_dec_debug_category	omx/gstomxamrdec.c	/^GST_DEBUG_CATEGORY_STATIC (gst_omx_amr_dec_debug_category);$/;"	v
gst_omx_amr_dec_get_channel_positions	omx/gstomxamrdec.c	/^gst_omx_amr_dec_get_channel_positions (GstOMXAudioDec * dec,$/;"	f	file:	signature:(GstOMXAudioDec * dec, GstOMXPort * port, GstAudioChannelPosition position[OMX_AUDIO_MAXCHANNELS])
gst_omx_amr_dec_get_channel_positions	omx/gstomxamrdec.c	/^static gboolean gst_omx_amr_dec_get_channel_positions (GstOMXAudioDec * dec,$/;"	p	file:	signature:(GstOMXAudioDec * dec, GstOMXPort * port, GstAudioChannelPosition position[OMX_AUDIO_MAXCHANNELS])
gst_omx_amr_dec_get_samples_per_frame	omx/gstomxamrdec.c	/^gst_omx_amr_dec_get_samples_per_frame (GstOMXAudioDec * dec, GstOMXPort * port)$/;"	f	file:	signature:(GstOMXAudioDec * dec, GstOMXPort * port)
gst_omx_amr_dec_get_samples_per_frame	omx/gstomxamrdec.c	/^static gint gst_omx_amr_dec_get_samples_per_frame (GstOMXAudioDec * dec,$/;"	p	file:	signature:(GstOMXAudioDec * dec, GstOMXPort * port)
gst_omx_amr_dec_get_type	omx/gstomxamrdec.h	/^GType gst_omx_amr_dec_get_type (void);$/;"	p	signature:(void)
gst_omx_amr_dec_init	omx/gstomxamrdec.c	/^gst_omx_amr_dec_init (GstOMXAMRDec * self)$/;"	f	file:	signature:(GstOMXAMRDec * self)
gst_omx_amr_dec_is_format_change	omx/gstomxamrdec.c	/^gst_omx_amr_dec_is_format_change (GstOMXAudioDec * dec, GstOMXPort * port,$/;"	f	file:	signature:(GstOMXAudioDec * dec, GstOMXPort * port, GstCaps * caps)
gst_omx_amr_dec_is_format_change	omx/gstomxamrdec.c	/^static gboolean gst_omx_amr_dec_is_format_change (GstOMXAudioDec * dec,$/;"	p	file:	signature:(GstOMXAudioDec * dec, GstOMXPort * port, GstCaps * caps)
gst_omx_amr_dec_set_format	omx/gstomxamrdec.c	/^gst_omx_amr_dec_set_format (GstOMXAudioDec * dec, GstOMXPort * port,$/;"	f	file:	signature:(GstOMXAudioDec * dec, GstOMXPort * port, GstCaps * caps)
gst_omx_amr_dec_set_format	omx/gstomxamrdec.c	/^static gboolean gst_omx_amr_dec_set_format (GstOMXAudioDec * dec,$/;"	p	file:	signature:(GstOMXAudioDec * dec, GstOMXPort * port, GstCaps * caps)
gst_omx_analog_audio_sink_class_init	omx/gstomxanalogaudiosink.c	/^gst_omx_analog_audio_sink_class_init (GstOMXAnalogAudioSinkClass * klass)$/;"	f	file:	signature:(GstOMXAnalogAudioSinkClass * klass)
gst_omx_analog_audio_sink_debug_category	omx/gstomxanalogaudiosink.c	/^GST_DEBUG_CATEGORY_STATIC (gst_omx_analog_audio_sink_debug_category);$/;"	v
gst_omx_analog_audio_sink_get_type	omx/gstomxanalogaudiosink.h	/^GType gst_omx_analog_audio_sink_get_type (void);$/;"	p	signature:(void)
gst_omx_analog_audio_sink_init	omx/gstomxanalogaudiosink.c	/^gst_omx_analog_audio_sink_init (GstOMXAnalogAudioSink * self)$/;"	f	file:	signature:(GstOMXAnalogAudioSink * self)
gst_omx_audio_dec_change_state	omx/gstomxaudiodec.c	/^gst_omx_audio_dec_change_state (GstElement * element, GstStateChange transition)$/;"	f	file:	signature:(GstElement * element, GstStateChange transition)
gst_omx_audio_dec_change_state	omx/gstomxaudiodec.c	/^gst_omx_audio_dec_change_state (GstElement * element,$/;"	p	file:	signature:(GstElement * element, GstStateChange transition)
gst_omx_audio_dec_class_init	omx/gstomxaudiodec.c	/^gst_omx_audio_dec_class_init (GstOMXAudioDecClass * klass)$/;"	f	file:	signature:(GstOMXAudioDecClass * klass)
gst_omx_audio_dec_close	omx/gstomxaudiodec.c	/^gst_omx_audio_dec_close (GstAudioDecoder * decoder)$/;"	f	file:	signature:(GstAudioDecoder * decoder)
gst_omx_audio_dec_close	omx/gstomxaudiodec.c	/^static gboolean gst_omx_audio_dec_close (GstAudioDecoder * decoder);$/;"	p	file:	signature:(GstAudioDecoder * decoder)
gst_omx_audio_dec_debug_category	omx/gstomxaudiodec.c	/^GST_DEBUG_CATEGORY_STATIC (gst_omx_audio_dec_debug_category);$/;"	v
gst_omx_audio_dec_drain	omx/gstomxaudiodec.c	/^gst_omx_audio_dec_drain (GstOMXAudioDec * self)$/;"	f	file:	signature:(GstOMXAudioDec * self)
gst_omx_audio_dec_drain	omx/gstomxaudiodec.c	/^static GstFlowReturn gst_omx_audio_dec_drain (GstOMXAudioDec * self);$/;"	p	file:	signature:(GstOMXAudioDec * self)
gst_omx_audio_dec_finalize	omx/gstomxaudiodec.c	/^gst_omx_audio_dec_finalize (GObject * object)$/;"	f	file:	signature:(GObject * object)
gst_omx_audio_dec_finalize	omx/gstomxaudiodec.c	/^static void gst_omx_audio_dec_finalize (GObject * object);$/;"	p	file:	signature:(GObject * object)
gst_omx_audio_dec_flush	omx/gstomxaudiodec.c	/^gst_omx_audio_dec_flush (GstAudioDecoder * decoder, gboolean hard)$/;"	f	file:	signature:(GstAudioDecoder * decoder, gboolean hard)
gst_omx_audio_dec_flush	omx/gstomxaudiodec.c	/^static void gst_omx_audio_dec_flush (GstAudioDecoder * decoder, gboolean hard);$/;"	p	file:	signature:(GstAudioDecoder * decoder, gboolean hard)
gst_omx_audio_dec_get_type	omx/gstomxaudiodec.h	/^GType gst_omx_audio_dec_get_type (void);$/;"	p	signature:(void)
gst_omx_audio_dec_handle_frame	omx/gstomxaudiodec.c	/^gst_omx_audio_dec_handle_frame (GstAudioDecoder * decoder, GstBuffer * inbuf)$/;"	f	file:	signature:(GstAudioDecoder * decoder, GstBuffer * inbuf)
gst_omx_audio_dec_handle_frame	omx/gstomxaudiodec.c	/^static GstFlowReturn gst_omx_audio_dec_handle_frame (GstAudioDecoder * decoder,$/;"	p	file:	signature:(GstAudioDecoder * decoder, GstBuffer * buffer)
gst_omx_audio_dec_init	omx/gstomxaudiodec.c	/^gst_omx_audio_dec_init (GstOMXAudioDec * self)$/;"	f	file:	signature:(GstOMXAudioDec * self)
gst_omx_audio_dec_loop	omx/gstomxaudiodec.c	/^gst_omx_audio_dec_loop (GstOMXAudioDec * self)$/;"	f	file:	signature:(GstOMXAudioDec * self)
gst_omx_audio_dec_open	omx/gstomxaudiodec.c	/^gst_omx_audio_dec_open (GstAudioDecoder * decoder)$/;"	f	file:	signature:(GstAudioDecoder * decoder)
gst_omx_audio_dec_open	omx/gstomxaudiodec.c	/^static gboolean gst_omx_audio_dec_open (GstAudioDecoder * decoder);$/;"	p	file:	signature:(GstAudioDecoder * decoder)
gst_omx_audio_dec_set_format	omx/gstomxaudiodec.c	/^gst_omx_audio_dec_set_format (GstAudioDecoder * decoder, GstCaps * caps)$/;"	f	file:	signature:(GstAudioDecoder * decoder, GstCaps * caps)
gst_omx_audio_dec_set_format	omx/gstomxaudiodec.c	/^static gboolean gst_omx_audio_dec_set_format (GstAudioDecoder * decoder,$/;"	p	file:	signature:(GstAudioDecoder * decoder, GstCaps * caps)
gst_omx_audio_dec_shutdown	omx/gstomxaudiodec.c	/^gst_omx_audio_dec_shutdown (GstOMXAudioDec * self)$/;"	f	file:	signature:(GstOMXAudioDec * self)
gst_omx_audio_dec_start	omx/gstomxaudiodec.c	/^gst_omx_audio_dec_start (GstAudioDecoder * decoder)$/;"	f	file:	signature:(GstAudioDecoder * decoder)
gst_omx_audio_dec_start	omx/gstomxaudiodec.c	/^static gboolean gst_omx_audio_dec_start (GstAudioDecoder * decoder);$/;"	p	file:	signature:(GstAudioDecoder * decoder)
gst_omx_audio_dec_stop	omx/gstomxaudiodec.c	/^gst_omx_audio_dec_stop (GstAudioDecoder * decoder)$/;"	f	file:	signature:(GstAudioDecoder * decoder)
gst_omx_audio_dec_stop	omx/gstomxaudiodec.c	/^static gboolean gst_omx_audio_dec_stop (GstAudioDecoder * decoder);$/;"	p	file:	signature:(GstAudioDecoder * decoder)
gst_omx_audio_enc_change_state	omx/gstomxaudioenc.c	/^gst_omx_audio_enc_change_state (GstElement * element, GstStateChange transition)$/;"	f	file:	signature:(GstElement * element, GstStateChange transition)
gst_omx_audio_enc_change_state	omx/gstomxaudioenc.c	/^gst_omx_audio_enc_change_state (GstElement * element,$/;"	p	file:	signature:(GstElement * element, GstStateChange transition)
gst_omx_audio_enc_class_init	omx/gstomxaudioenc.c	/^gst_omx_audio_enc_class_init (GstOMXAudioEncClass * klass)$/;"	f	file:	signature:(GstOMXAudioEncClass * klass)
gst_omx_audio_enc_close	omx/gstomxaudioenc.c	/^gst_omx_audio_enc_close (GstAudioEncoder * encoder)$/;"	f	file:	signature:(GstAudioEncoder * encoder)
gst_omx_audio_enc_close	omx/gstomxaudioenc.c	/^static gboolean gst_omx_audio_enc_close (GstAudioEncoder * encoder);$/;"	p	file:	signature:(GstAudioEncoder * encoder)
gst_omx_audio_enc_debug_category	omx/gstomxaudioenc.c	/^GST_DEBUG_CATEGORY_STATIC (gst_omx_audio_enc_debug_category);$/;"	v
gst_omx_audio_enc_drain	omx/gstomxaudioenc.c	/^gst_omx_audio_enc_drain (GstOMXAudioEnc * self)$/;"	f	file:	signature:(GstOMXAudioEnc * self)
gst_omx_audio_enc_drain	omx/gstomxaudioenc.c	/^static GstFlowReturn gst_omx_audio_enc_drain (GstOMXAudioEnc * self);$/;"	p	file:	signature:(GstOMXAudioEnc * self)
gst_omx_audio_enc_finalize	omx/gstomxaudioenc.c	/^gst_omx_audio_enc_finalize (GObject * object)$/;"	f	file:	signature:(GObject * object)
gst_omx_audio_enc_finalize	omx/gstomxaudioenc.c	/^static void gst_omx_audio_enc_finalize (GObject * object);$/;"	p	file:	signature:(GObject * object)
gst_omx_audio_enc_flush	omx/gstomxaudioenc.c	/^gst_omx_audio_enc_flush (GstAudioEncoder * encoder)$/;"	f	file:	signature:(GstAudioEncoder * encoder)
gst_omx_audio_enc_flush	omx/gstomxaudioenc.c	/^static void gst_omx_audio_enc_flush (GstAudioEncoder * encoder);$/;"	p	file:	signature:(GstAudioEncoder * encoder)
gst_omx_audio_enc_get_type	omx/gstomxaudioenc.h	/^GType gst_omx_audio_enc_get_type (void);$/;"	p	signature:(void)
gst_omx_audio_enc_handle_frame	omx/gstomxaudioenc.c	/^gst_omx_audio_enc_handle_frame (GstAudioEncoder * encoder, GstBuffer * inbuf)$/;"	f	file:	signature:(GstAudioEncoder * encoder, GstBuffer * inbuf)
gst_omx_audio_enc_handle_frame	omx/gstomxaudioenc.c	/^static GstFlowReturn gst_omx_audio_enc_handle_frame (GstAudioEncoder *$/;"	p	file:	signature:(GstAudioEncoder * encoder, GstBuffer * buffer)
gst_omx_audio_enc_init	omx/gstomxaudioenc.c	/^gst_omx_audio_enc_init (GstOMXAudioEnc * self)$/;"	f	file:	signature:(GstOMXAudioEnc * self)
gst_omx_audio_enc_loop	omx/gstomxaudioenc.c	/^gst_omx_audio_enc_loop (GstOMXAudioEnc * self)$/;"	f	file:	signature:(GstOMXAudioEnc * self)
gst_omx_audio_enc_open	omx/gstomxaudioenc.c	/^gst_omx_audio_enc_open (GstAudioEncoder * encoder)$/;"	f	file:	signature:(GstAudioEncoder * encoder)
gst_omx_audio_enc_open	omx/gstomxaudioenc.c	/^static gboolean gst_omx_audio_enc_open (GstAudioEncoder * encoder);$/;"	p	file:	signature:(GstAudioEncoder * encoder)
gst_omx_audio_enc_set_format	omx/gstomxaudioenc.c	/^gst_omx_audio_enc_set_format (GstAudioEncoder * encoder, GstAudioInfo * info)$/;"	f	file:	signature:(GstAudioEncoder * encoder, GstAudioInfo * info)
gst_omx_audio_enc_set_format	omx/gstomxaudioenc.c	/^static gboolean gst_omx_audio_enc_set_format (GstAudioEncoder * encoder,$/;"	p	file:	signature:(GstAudioEncoder * encoder, GstAudioInfo * info)
gst_omx_audio_enc_shutdown	omx/gstomxaudioenc.c	/^gst_omx_audio_enc_shutdown (GstOMXAudioEnc * self)$/;"	f	file:	signature:(GstOMXAudioEnc * self)
gst_omx_audio_enc_start	omx/gstomxaudioenc.c	/^gst_omx_audio_enc_start (GstAudioEncoder * encoder)$/;"	f	file:	signature:(GstAudioEncoder * encoder)
gst_omx_audio_enc_start	omx/gstomxaudioenc.c	/^static gboolean gst_omx_audio_enc_start (GstAudioEncoder * encoder);$/;"	p	file:	signature:(GstAudioEncoder * encoder)
gst_omx_audio_enc_stop	omx/gstomxaudioenc.c	/^gst_omx_audio_enc_stop (GstAudioEncoder * encoder)$/;"	f	file:	signature:(GstAudioEncoder * encoder)
gst_omx_audio_enc_stop	omx/gstomxaudioenc.c	/^static gboolean gst_omx_audio_enc_stop (GstAudioEncoder * encoder);$/;"	p	file:	signature:(GstAudioEncoder * encoder)
gst_omx_audio_sink_accept_caps	omx/gstomxaudiosink.c	/^gst_omx_audio_sink_accept_caps (GstOMXAudioSink * self, GstCaps * caps)$/;"	f	file:	signature:(GstOMXAudioSink * self, GstCaps * caps)
gst_omx_audio_sink_acquire_buffer	omx/gstomxaudiosink.c	/^gst_omx_audio_sink_acquire_buffer (GstOMXAudioSink * self)$/;"	f	file:	signature:(GstOMXAudioSink * self)
gst_omx_audio_sink_change_state	omx/gstomxaudiosink.c	/^gst_omx_audio_sink_change_state (GstElement * element,$/;"	f	file:	signature:(GstElement * element, GstStateChange transition)
gst_omx_audio_sink_class_init	omx/gstomxaudiosink.c	/^gst_omx_audio_sink_class_init (GstOMXAudioSinkClass * klass)$/;"	f	file:	signature:(GstOMXAudioSinkClass * klass)
gst_omx_audio_sink_close	omx/gstomxaudiosink.c	/^gst_omx_audio_sink_close (GstAudioSink * audiosink)$/;"	f	file:	signature:(GstAudioSink * audiosink)
gst_omx_audio_sink_configure_pcm	omx/gstomxaudiosink.c	/^gst_omx_audio_sink_configure_pcm (GstOMXAudioSink * self,$/;"	f	file:	signature:(GstOMXAudioSink * self, GstAudioRingBufferSpec * spec)
gst_omx_audio_sink_debug_category	omx/gstomxaudiosink.c	/^GST_DEBUG_CATEGORY_STATIC (gst_omx_audio_sink_debug_category);$/;"	v
gst_omx_audio_sink_delay	omx/gstomxaudiosink.c	/^gst_omx_audio_sink_delay (GstAudioSink * audiosink)$/;"	f	file:	signature:(GstAudioSink * audiosink)
gst_omx_audio_sink_finalize	omx/gstomxaudiosink.c	/^gst_omx_audio_sink_finalize (GObject * object)$/;"	f	file:	signature:(GObject * object)
gst_omx_audio_sink_get_property	omx/gstomxaudiosink.c	/^gst_omx_audio_sink_get_property (GObject * object, guint prop_id,$/;"	f	file:	signature:(GObject * object, guint prop_id, GValue * value, GParamSpec * pspec)
gst_omx_audio_sink_get_type	omx/gstomxaudiosink.h	/^GType gst_omx_audio_sink_get_type (void);$/;"	p	signature:(void)
gst_omx_audio_sink_init	omx/gstomxaudiosink.c	/^gst_omx_audio_sink_init (GstOMXAudioSink * self)$/;"	f	file:	signature:(GstOMXAudioSink * self)
gst_omx_audio_sink_mute_set	omx/gstomxaudiosink.c	/^gst_omx_audio_sink_mute_set (GstOMXAudioSink * self, gboolean mute)$/;"	f	file:	signature:(GstOMXAudioSink * self, gboolean mute)
gst_omx_audio_sink_open	omx/gstomxaudiosink.c	/^gst_omx_audio_sink_open (GstAudioSink * audiosink)$/;"	f	file:	signature:(GstAudioSink * audiosink)
gst_omx_audio_sink_parent_class	omx/gstomxaudiosink.c	54;"	d	file:
gst_omx_audio_sink_parse_spec	omx/gstomxaudiosink.c	/^gst_omx_audio_sink_parse_spec (GstOMXAudioSink * self,$/;"	f	file:	signature:(GstOMXAudioSink * self, GstAudioRingBufferSpec * spec)
gst_omx_audio_sink_payload	omx/gstomxaudiosink.c	/^gst_omx_audio_sink_payload (GstAudioBaseSink * audiobasesink, GstBuffer * buf)$/;"	f	file:	signature:(GstAudioBaseSink * audiobasesink, GstBuffer * buf)
gst_omx_audio_sink_prepare	omx/gstomxaudiosink.c	/^gst_omx_audio_sink_prepare (GstAudioSink * audiosink,$/;"	f	file:	signature:(GstAudioSink * audiosink, GstAudioRingBufferSpec * spec)
gst_omx_audio_sink_query	omx/gstomxaudiosink.c	/^gst_omx_audio_sink_query (GstBaseSink * basesink, GstQuery * query)$/;"	f	file:	signature:(GstBaseSink * basesink, GstQuery * query)
gst_omx_audio_sink_reset	omx/gstomxaudiosink.c	/^gst_omx_audio_sink_reset (GstAudioSink * audiosink)$/;"	f	file:	signature:(GstAudioSink * audiosink)
gst_omx_audio_sink_set_property	omx/gstomxaudiosink.c	/^gst_omx_audio_sink_set_property (GObject * object, guint prop_id,$/;"	f	file:	signature:(GObject * object, guint prop_id, const GValue * value, GParamSpec * pspec)
gst_omx_audio_sink_unprepare	omx/gstomxaudiosink.c	/^gst_omx_audio_sink_unprepare (GstAudioSink * audiosink)$/;"	f	file:	signature:(GstAudioSink * audiosink)
gst_omx_audio_sink_volume_set	omx/gstomxaudiosink.c	/^gst_omx_audio_sink_volume_set (GstOMXAudioSink * self, gdouble volume)$/;"	f	file:	signature:(GstOMXAudioSink * self, gdouble volume)
gst_omx_audio_sink_write	omx/gstomxaudiosink.c	/^gst_omx_audio_sink_write (GstAudioSink * audiosink, gpointer data, guint length)$/;"	f	file:	signature:(GstAudioSink * audiosink, gpointer data, guint length)
gst_omx_buffer_data_quark	omx/gstomxbufferpool.c	/^static GQuark gst_omx_buffer_data_quark = 0;$/;"	v	file:
gst_omx_buffer_pool_acquire_buffer	omx/gstomxbufferpool.c	/^gst_omx_buffer_pool_acquire_buffer (GstBufferPool * bpool,$/;"	f	file:	signature:(GstBufferPool * bpool, GstBuffer ** buffer, GstBufferPoolAcquireParams * params)
gst_omx_buffer_pool_alloc_buffer	omx/gstomxbufferpool.c	/^gst_omx_buffer_pool_alloc_buffer (GstBufferPool * bpool,$/;"	f	file:	signature:(GstBufferPool * bpool, GstBuffer ** buffer, GstBufferPoolAcquireParams * params)
gst_omx_buffer_pool_class_init	omx/gstomxbufferpool.c	/^gst_omx_buffer_pool_class_init (GstOMXBufferPoolClass * klass)$/;"	f	file:	signature:(GstOMXBufferPoolClass * klass)
gst_omx_buffer_pool_debug_category	omx/gstomxbufferpool.c	/^GST_DEBUG_CATEGORY_STATIC (gst_omx_buffer_pool_debug_category);$/;"	v
gst_omx_buffer_pool_finalize	omx/gstomxbufferpool.c	/^gst_omx_buffer_pool_finalize (GObject * object)$/;"	f	file:	signature:(GObject * object)
gst_omx_buffer_pool_free_buffer	omx/gstomxbufferpool.c	/^gst_omx_buffer_pool_free_buffer (GstBufferPool * bpool, GstBuffer * buffer)$/;"	f	file:	signature:(GstBufferPool * bpool, GstBuffer * buffer)
gst_omx_buffer_pool_free_buffer	omx/gstomxbufferpool.c	/^static void gst_omx_buffer_pool_free_buffer (GstBufferPool * bpool,$/;"	p	file:	signature:(GstBufferPool * bpool, GstBuffer * buffer)
gst_omx_buffer_pool_get_options	omx/gstomxbufferpool.c	/^gst_omx_buffer_pool_get_options (GstBufferPool * bpool)$/;"	f	file:	signature:(GstBufferPool * bpool)
gst_omx_buffer_pool_get_type	omx/gstomxbufferpool.h	/^GType gst_omx_buffer_pool_get_type (void);$/;"	p	signature:(void)
gst_omx_buffer_pool_init	omx/gstomxbufferpool.c	/^gst_omx_buffer_pool_init (GstOMXBufferPool * pool)$/;"	f	file:	signature:(GstOMXBufferPool * pool)
gst_omx_buffer_pool_new	omx/gstomxbufferpool.c	/^gst_omx_buffer_pool_new (GstElement * element, GstOMXComponent * component,$/;"	f	signature:(GstElement * element, GstOMXComponent * component, GstOMXPort * port)
gst_omx_buffer_pool_new	omx/gstomxbufferpool.h	/^GstBufferPool *gst_omx_buffer_pool_new (GstElement * element, GstOMXComponent * component, GstOMXPort * port);$/;"	p	signature:(GstElement * element, GstOMXComponent * component, GstOMXPort * port)
gst_omx_buffer_pool_release_buffer	omx/gstomxbufferpool.c	/^gst_omx_buffer_pool_release_buffer (GstBufferPool * bpool, GstBuffer * buffer)$/;"	f	file:	signature:(GstBufferPool * bpool, GstBuffer * buffer)
gst_omx_buffer_pool_set_config	omx/gstomxbufferpool.c	/^gst_omx_buffer_pool_set_config (GstBufferPool * bpool, GstStructure * config)$/;"	f	file:	signature:(GstBufferPool * bpool, GstStructure * config)
gst_omx_buffer_pool_start	omx/gstomxbufferpool.c	/^gst_omx_buffer_pool_start (GstBufferPool * bpool)$/;"	f	file:	signature:(GstBufferPool * bpool)
gst_omx_buffer_pool_stop	omx/gstomxbufferpool.c	/^gst_omx_buffer_pool_stop (GstBufferPool * bpool)$/;"	f	file:	signature:(GstBufferPool * bpool)
gst_omx_calculate_uv_size	omx/gstomx.c	/^gst_omx_calculate_uv_size(int compressionFormat, int width, int height)$/;"	f	signature:(int compressionFormat, int width, int height)
gst_omx_calculate_uv_size	omx/gstomx.h	/^int gst_omx_calculate_uv_size(int compressionFormat, int width, int height);$/;"	p	signature:(int compressionFormat, int width, int height)
gst_omx_calculate_y_size	omx/gstomx.c	/^gst_omx_calculate_y_size(int compressionFormat, int width, int height)$/;"	f	signature:(int compressionFormat, int width, int height)
gst_omx_calculate_y_size	omx/gstomx.h	/^int gst_omx_calculate_y_size(int compressionFormat, int width, int height);$/;"	p	signature:(int compressionFormat, int width, int height)
gst_omx_close_tunnel	omx/gstomx.c	/^gst_omx_close_tunnel (GstOMXPort * port1, GstOMXPort * port2)$/;"	f	signature:(GstOMXPort * port1, GstOMXPort * port2)
gst_omx_close_tunnel	omx/gstomx.h	/^OMX_ERRORTYPE     gst_omx_close_tunnel (GstOMXPort * port1, GstOMXPort * port2);$/;"	p	signature:(GstOMXPort * port1, GstOMXPort * port2)
gst_omx_command_to_string	omx/gstomx.c	/^gst_omx_command_to_string (OMX_COMMANDTYPE cmd)$/;"	f	signature:(OMX_COMMANDTYPE cmd)
gst_omx_command_to_string	omx/gstomx.h	/^const gchar *     gst_omx_command_to_string (OMX_COMMANDTYPE cmd);$/;"	p	signature:(OMX_COMMANDTYPE cmd)
gst_omx_component_add_port	omx/gstomx.c	/^gst_omx_component_add_port (GstOMXComponent * comp, guint32 index)$/;"	f	signature:(GstOMXComponent * comp, guint32 index)
gst_omx_component_add_port	omx/gstomx.h	/^GstOMXPort *      gst_omx_component_add_port (GstOMXComponent * comp, guint32 index);$/;"	p	signature:(GstOMXComponent * comp, guint32 index)
gst_omx_component_flush_messages	omx/gstomx.c	/^gst_omx_component_flush_messages (GstOMXComponent * comp)$/;"	f	file:	signature:(GstOMXComponent * comp)
gst_omx_component_free	omx/gstomx.c	/^gst_omx_component_free (GstOMXComponent * comp)$/;"	f	signature:(GstOMXComponent * comp)
gst_omx_component_free	omx/gstomx.h	/^void              gst_omx_component_free (GstOMXComponent * comp);$/;"	p	signature:(GstOMXComponent * comp)
gst_omx_component_get_config	omx/gstomx.c	/^gst_omx_component_get_config (GstOMXComponent * comp, OMX_INDEXTYPE index,$/;"	f	signature:(GstOMXComponent * comp, OMX_INDEXTYPE index, gpointer config)
gst_omx_component_get_config	omx/gstomx.h	/^OMX_ERRORTYPE     gst_omx_component_get_config (GstOMXComponent * comp, OMX_INDEXTYPE index, gpointer config);$/;"	p	signature:(GstOMXComponent * comp, OMX_INDEXTYPE index, gpointer config)
gst_omx_component_get_last_error	omx/gstomx.c	/^gst_omx_component_get_last_error (GstOMXComponent * comp)$/;"	f	signature:(GstOMXComponent * comp)
gst_omx_component_get_last_error	omx/gstomx.h	/^OMX_ERRORTYPE     gst_omx_component_get_last_error (GstOMXComponent * comp);$/;"	p	signature:(GstOMXComponent * comp)
gst_omx_component_get_last_error_string	omx/gstomx.c	/^gst_omx_component_get_last_error_string (GstOMXComponent * comp)$/;"	f	signature:(GstOMXComponent * comp)
gst_omx_component_get_last_error_string	omx/gstomx.h	/^const gchar *     gst_omx_component_get_last_error_string (GstOMXComponent * comp);$/;"	p	signature:(GstOMXComponent * comp)
gst_omx_component_get_parameter	omx/gstomx.c	/^gst_omx_component_get_parameter (GstOMXComponent * comp, OMX_INDEXTYPE index,$/;"	f	signature:(GstOMXComponent * comp, OMX_INDEXTYPE index, gpointer param)
gst_omx_component_get_parameter	omx/gstomx.h	/^OMX_ERRORTYPE     gst_omx_component_get_parameter (GstOMXComponent * comp, OMX_INDEXTYPE index, gpointer param);$/;"	p	signature:(GstOMXComponent * comp, OMX_INDEXTYPE index, gpointer param)
gst_omx_component_get_port	omx/gstomx.c	/^gst_omx_component_get_port (GstOMXComponent * comp, guint32 index)$/;"	f	signature:(GstOMXComponent * comp, guint32 index)
gst_omx_component_get_port	omx/gstomx.h	/^GstOMXPort *      gst_omx_component_get_port (GstOMXComponent * comp, guint32 index);$/;"	p	signature:(GstOMXComponent * comp, guint32 index)
gst_omx_component_get_state	omx/gstomx.c	/^gst_omx_component_get_state (GstOMXComponent * comp, GstClockTime timeout)$/;"	f	signature:(GstOMXComponent * comp, GstClockTime timeout)
gst_omx_component_get_state	omx/gstomx.h	/^OMX_STATETYPE     gst_omx_component_get_state (GstOMXComponent * comp, GstClockTime timeout);$/;"	p	signature:(GstOMXComponent * comp, GstClockTime timeout)
gst_omx_component_handle_messages	omx/gstomx.c	/^gst_omx_component_handle_messages (GstOMXComponent * comp)$/;"	f	file:	signature:(GstOMXComponent * comp)
gst_omx_component_new	omx/gstomx.c	/^gst_omx_component_new (GstObject * parent, const gchar * core_name,$/;"	f	signature:(GstObject * parent, const gchar * core_name, const gchar * component_name, const gchar * component_role, guint64 hacks)
gst_omx_component_new	omx/gstomx.h	/^GstOMXComponent * gst_omx_component_new (GstObject * parent, const gchar *core_name, const gchar *component_name, const gchar * component_role, guint64 hacks);$/;"	p	signature:(GstObject * parent, const gchar *core_name, const gchar *component_name, const gchar * component_role, guint64 hacks)
gst_omx_component_send_message	omx/gstomx.c	/^gst_omx_component_send_message (GstOMXComponent * comp, GstOMXMessage * msg)$/;"	f	file:	signature:(GstOMXComponent * comp, GstOMXMessage * msg)
gst_omx_component_set_config	omx/gstomx.c	/^gst_omx_component_set_config (GstOMXComponent * comp, OMX_INDEXTYPE index,$/;"	f	signature:(GstOMXComponent * comp, OMX_INDEXTYPE index, gpointer config)
gst_omx_component_set_config	omx/gstomx.h	/^OMX_ERRORTYPE     gst_omx_component_set_config (GstOMXComponent * comp, OMX_INDEXTYPE index, gpointer config);$/;"	p	signature:(GstOMXComponent * comp, OMX_INDEXTYPE index, gpointer config)
gst_omx_component_set_parameter	omx/gstomx.c	/^gst_omx_component_set_parameter (GstOMXComponent * comp, OMX_INDEXTYPE index,$/;"	f	signature:(GstOMXComponent * comp, OMX_INDEXTYPE index, gpointer param)
gst_omx_component_set_parameter	omx/gstomx.h	/^OMX_ERRORTYPE     gst_omx_component_set_parameter (GstOMXComponent * comp, OMX_INDEXTYPE index, gpointer param);$/;"	p	signature:(GstOMXComponent * comp, OMX_INDEXTYPE index, gpointer param)
gst_omx_component_set_state	omx/gstomx.c	/^gst_omx_component_set_state (GstOMXComponent * comp, OMX_STATETYPE state)$/;"	f	signature:(GstOMXComponent * comp, OMX_STATETYPE state)
gst_omx_component_set_state	omx/gstomx.h	/^OMX_ERRORTYPE     gst_omx_component_set_state (GstOMXComponent * comp, OMX_STATETYPE state);$/;"	p	signature:(GstOMXComponent * comp, OMX_STATETYPE state)
gst_omx_component_wait_message	omx/gstomx.c	/^gst_omx_component_wait_message (GstOMXComponent * comp, GstClockTime timeout)$/;"	f	file:	signature:(GstOMXComponent * comp, GstClockTime timeout)
gst_omx_core_acquire	omx/gstomx.c	/^gst_omx_core_acquire (const gchar * filename)$/;"	f	signature:(const gchar * filename)
gst_omx_core_acquire	omx/gstomx.h	/^GstOMXCore *      gst_omx_core_acquire (const gchar * filename);$/;"	p	signature:(const gchar * filename)
gst_omx_core_release	omx/gstomx.c	/^gst_omx_core_release (GstOMXCore * core)$/;"	f	signature:(GstOMXCore * core)
gst_omx_core_release	omx/gstomx.h	/^void              gst_omx_core_release (GstOMXCore * core);$/;"	p	signature:(GstOMXCore * core)
gst_omx_error_to_string	omx/gstomx.c	/^gst_omx_error_to_string (OMX_ERRORTYPE err)$/;"	f	signature:(OMX_ERRORTYPE err)
gst_omx_error_to_string	omx/gstomx.h	/^const gchar *     gst_omx_error_to_string (OMX_ERRORTYPE err);$/;"	p	signature:(OMX_ERRORTYPE err)
gst_omx_get_configuration	omx/gstomx.c	/^gst_omx_get_configuration (void)$/;"	f	signature:(void)
gst_omx_get_configuration	omx/gstomx.h	/^GKeyFile *        gst_omx_get_configuration (void);$/;"	p	signature:(void)
gst_omx_h263_dec_class_init	omx/gstomxh263dec.c	/^gst_omx_h263_dec_class_init (GstOMXH263DecClass * klass)$/;"	f	file:	signature:(GstOMXH263DecClass * klass)
gst_omx_h263_dec_debug_category	omx/gstomxh263dec.c	/^GST_DEBUG_CATEGORY_STATIC (gst_omx_h263_dec_debug_category);$/;"	v
gst_omx_h263_dec_get_type	omx/gstomxh263dec.h	/^GType gst_omx_h263_dec_get_type (void);$/;"	p	signature:(void)
gst_omx_h263_dec_init	omx/gstomxh263dec.c	/^gst_omx_h263_dec_init (GstOMXH263Dec * self)$/;"	f	file:	signature:(GstOMXH263Dec * self)
gst_omx_h263_dec_is_format_change	omx/gstomxh263dec.c	/^gst_omx_h263_dec_is_format_change (GstOMXVideoDec * dec,$/;"	f	file:	signature:(GstOMXVideoDec * dec, GstOMXPort * port, GstVideoCodecState * state)
gst_omx_h263_dec_is_format_change	omx/gstomxh263dec.c	/^static gboolean gst_omx_h263_dec_is_format_change (GstOMXVideoDec * dec,$/;"	p	file:	signature:(GstOMXVideoDec * dec, GstOMXPort * port, GstVideoCodecState * state)
gst_omx_h263_dec_set_format	omx/gstomxh263dec.c	/^gst_omx_h263_dec_set_format (GstOMXVideoDec * dec, GstOMXPort * port,$/;"	f	file:	signature:(GstOMXVideoDec * dec, GstOMXPort * port, GstVideoCodecState * state)
gst_omx_h263_dec_set_format	omx/gstomxh263dec.c	/^static gboolean gst_omx_h263_dec_set_format (GstOMXVideoDec * dec,$/;"	p	file:	signature:(GstOMXVideoDec * dec, GstOMXPort * port, GstVideoCodecState * state)
gst_omx_h263_enc_class_init	omx/gstomxh263enc.c	/^gst_omx_h263_enc_class_init (GstOMXH263EncClass * klass)$/;"	f	file:	signature:(GstOMXH263EncClass * klass)
gst_omx_h263_enc_debug_category	omx/gstomxh263enc.c	/^GST_DEBUG_CATEGORY_STATIC (gst_omx_h263_enc_debug_category);$/;"	v
gst_omx_h263_enc_get_caps	omx/gstomxh263enc.c	/^gst_omx_h263_enc_get_caps (GstOMXVideoEnc * enc, GstOMXPort * port,$/;"	f	file:	signature:(GstOMXVideoEnc * enc, GstOMXPort * port, GstVideoCodecState * state)
gst_omx_h263_enc_get_caps	omx/gstomxh263enc.c	/^static GstCaps *gst_omx_h263_enc_get_caps (GstOMXVideoEnc * enc,$/;"	p	file:	signature:(GstOMXVideoEnc * enc, GstOMXPort * port, GstVideoCodecState * state)
gst_omx_h263_enc_get_type	omx/gstomxh263enc.h	/^GType gst_omx_h263_enc_get_type (void);$/;"	p	signature:(void)
gst_omx_h263_enc_init	omx/gstomxh263enc.c	/^gst_omx_h263_enc_init (GstOMXH263Enc * self)$/;"	f	file:	signature:(GstOMXH263Enc * self)
gst_omx_h263_enc_set_format	omx/gstomxh263enc.c	/^gst_omx_h263_enc_set_format (GstOMXVideoEnc * enc, GstOMXPort * port,$/;"	f	file:	signature:(GstOMXVideoEnc * enc, GstOMXPort * port, GstVideoCodecState * state)
gst_omx_h263_enc_set_format	omx/gstomxh263enc.c	/^static gboolean gst_omx_h263_enc_set_format (GstOMXVideoEnc * enc,$/;"	p	file:	signature:(GstOMXVideoEnc * enc, GstOMXPort * port, GstVideoCodecState * state)
gst_omx_h264_dec_class_init	omx/gstomxh264dec.c	/^gst_omx_h264_dec_class_init (GstOMXH264DecClass * klass)$/;"	f	file:	signature:(GstOMXH264DecClass * klass)
gst_omx_h264_dec_debug_category	omx/gstomxh264dec.c	/^GST_DEBUG_CATEGORY_STATIC (gst_omx_h264_dec_debug_category);$/;"	v
gst_omx_h264_dec_get_type	omx/gstomxh264dec.h	/^GType gst_omx_h264_dec_get_type (void);$/;"	p	signature:(void)
gst_omx_h264_dec_init	omx/gstomxh264dec.c	/^gst_omx_h264_dec_init (GstOMXH264Dec * self)$/;"	f	file:	signature:(GstOMXH264Dec * self)
gst_omx_h264_dec_is_format_change	omx/gstomxh264dec.c	/^gst_omx_h264_dec_is_format_change (GstOMXVideoDec * dec,$/;"	f	file:	signature:(GstOMXVideoDec * dec, GstOMXPort * port, GstVideoCodecState * state)
gst_omx_h264_dec_is_format_change	omx/gstomxh264dec.c	/^static gboolean gst_omx_h264_dec_is_format_change (GstOMXVideoDec * dec,$/;"	p	file:	signature:(GstOMXVideoDec * dec, GstOMXPort * port, GstVideoCodecState * state)
gst_omx_h264_dec_set_format	omx/gstomxh264dec.c	/^gst_omx_h264_dec_set_format (GstOMXVideoDec * dec, GstOMXPort * port,$/;"	f	file:	signature:(GstOMXVideoDec * dec, GstOMXPort * port, GstVideoCodecState * state)
gst_omx_h264_dec_set_format	omx/gstomxh264dec.c	/^static gboolean gst_omx_h264_dec_set_format (GstOMXVideoDec * dec,$/;"	p	file:	signature:(GstOMXVideoDec * dec, GstOMXPort * port, GstVideoCodecState * state)
gst_omx_h264_enc_class_init	omx/gstomxh264enc.c	/^gst_omx_h264_enc_class_init (GstOMXH264EncClass * klass)$/;"	f	file:	signature:(GstOMXH264EncClass * klass)
gst_omx_h264_enc_debug_category	omx/gstomxh264enc.c	/^GST_DEBUG_CATEGORY_STATIC (gst_omx_h264_enc_debug_category);$/;"	v
gst_omx_h264_enc_flush	omx/gstomxh264enc.c	/^gst_omx_h264_enc_flush (GstVideoEncoder * enc)$/;"	f	file:	signature:(GstVideoEncoder * enc)
gst_omx_h264_enc_flush	omx/gstomxh264enc.c	/^static gboolean gst_omx_h264_enc_flush (GstVideoEncoder * enc);$/;"	p	file:	signature:(GstVideoEncoder * enc)
gst_omx_h264_enc_get_caps	omx/gstomxh264enc.c	/^gst_omx_h264_enc_get_caps (GstOMXVideoEnc * enc, GstOMXPort * port,$/;"	f	file:	signature:(GstOMXVideoEnc * enc, GstOMXPort * port, GstVideoCodecState * state)
gst_omx_h264_enc_get_caps	omx/gstomxh264enc.c	/^static GstCaps *gst_omx_h264_enc_get_caps (GstOMXVideoEnc * enc,$/;"	p	file:	signature:(GstOMXVideoEnc * enc, GstOMXPort * port, GstVideoCodecState * state)
gst_omx_h264_enc_get_property	omx/gstomxh264enc.c	/^gst_omx_h264_enc_get_property (GObject * object, guint prop_id, GValue * value,$/;"	f	file:	signature:(GObject * object, guint prop_id, GValue * value, GParamSpec * pspec)
gst_omx_h264_enc_get_property	omx/gstomxh264enc.c	/^static void gst_omx_h264_enc_get_property (GObject * object, guint prop_id,$/;"	p	file:	signature:(GObject * object, guint prop_id, GValue * value, GParamSpec * pspec)
gst_omx_h264_enc_get_type	omx/gstomxh264enc.h	/^GType gst_omx_h264_enc_get_type (void);$/;"	p	signature:(void)
gst_omx_h264_enc_handle_output_frame	omx/gstomxh264enc.c	/^gst_omx_h264_enc_handle_output_frame (GstOMXVideoEnc * enc, GstOMXPort * port,$/;"	f	file:	signature:(GstOMXVideoEnc * enc, GstOMXPort * port, GstOMXBuffer * buf, GstVideoCodecFrame * frame)
gst_omx_h264_enc_handle_output_frame	omx/gstomxh264enc.c	/^static GstFlowReturn gst_omx_h264_enc_handle_output_frame (GstOMXVideoEnc *$/;"	p	file:	signature:(GstOMXVideoEnc * self, GstOMXPort * port, GstOMXBuffer * buf, GstVideoCodecFrame * frame)
gst_omx_h264_enc_init	omx/gstomxh264enc.c	/^gst_omx_h264_enc_init (GstOMXH264Enc * self)$/;"	f	file:	signature:(GstOMXH264Enc * self)
gst_omx_h264_enc_set_format	omx/gstomxh264enc.c	/^gst_omx_h264_enc_set_format (GstOMXVideoEnc * enc, GstOMXPort * port,$/;"	f	file:	signature:(GstOMXVideoEnc * enc, GstOMXPort * port, GstVideoCodecState * state)
gst_omx_h264_enc_set_format	omx/gstomxh264enc.c	/^static gboolean gst_omx_h264_enc_set_format (GstOMXVideoEnc * enc,$/;"	p	file:	signature:(GstOMXVideoEnc * enc, GstOMXPort * port, GstVideoCodecState * state)
gst_omx_h264_enc_set_property	omx/gstomxh264enc.c	/^gst_omx_h264_enc_set_property (GObject * object, guint prop_id,$/;"	f	file:	signature:(GObject * object, guint prop_id, const GValue * value, GParamSpec * pspec)
gst_omx_h264_enc_set_property	omx/gstomxh264enc.c	/^static void gst_omx_h264_enc_set_property (GObject * object, guint prop_id,$/;"	p	file:	signature:(GObject * object, guint prop_id, const GValue * value, GParamSpec * pspec)
gst_omx_h264_enc_stop	omx/gstomxh264enc.c	/^gst_omx_h264_enc_stop (GstVideoEncoder * enc)$/;"	f	file:	signature:(GstVideoEncoder * enc)
gst_omx_h264_enc_stop	omx/gstomxh264enc.c	/^static gboolean gst_omx_h264_enc_stop (GstVideoEncoder * enc);$/;"	p	file:	signature:(GstVideoEncoder * enc)
gst_omx_hdmi_audio_sink_class_init	omx/gstomxhdmiaudiosink.c	/^gst_omx_hdmi_audio_sink_class_init (GstOMXHdmiAudioSinkClass * klass)$/;"	f	file:	signature:(GstOMXHdmiAudioSinkClass * klass)
gst_omx_hdmi_audio_sink_debug_category	omx/gstomxhdmiaudiosink.c	/^GST_DEBUG_CATEGORY_STATIC (gst_omx_hdmi_audio_sink_debug_category);$/;"	v
gst_omx_hdmi_audio_sink_get_type	omx/gstomxhdmiaudiosink.h	/^GType gst_omx_hdmi_audio_sink_get_type (void);$/;"	p	signature:(void)
gst_omx_hdmi_audio_sink_init	omx/gstomxhdmiaudiosink.c	/^gst_omx_hdmi_audio_sink_init (GstOMXHdmiAudioSink * self)$/;"	f	file:	signature:(GstOMXHdmiAudioSink * self)
gst_omx_memory_allocator_alloc	omx/gstomxbufferpool.c	/^gst_omx_memory_allocator_alloc (GstAllocator * allocator, GstMemoryFlags flags,$/;"	f	file:	signature:(GstAllocator * allocator, GstMemoryFlags flags, GstOMXBuffer * buf)
gst_omx_memory_allocator_alloc_dummy	omx/gstomxbufferpool.c	/^gst_omx_memory_allocator_alloc_dummy (GstAllocator * allocator, gsize size,$/;"	f	file:	signature:(GstAllocator * allocator, gsize size, GstAllocationParams * params)
gst_omx_memory_allocator_class_init	omx/gstomxbufferpool.c	/^gst_omx_memory_allocator_class_init (GstOMXMemoryAllocatorClass * klass)$/;"	f	file:	signature:(GstOMXMemoryAllocatorClass * klass)
gst_omx_memory_allocator_free	omx/gstomxbufferpool.c	/^gst_omx_memory_allocator_free (GstAllocator * allocator, GstMemory * mem)$/;"	f	file:	signature:(GstAllocator * allocator, GstMemory * mem)
gst_omx_memory_allocator_get_type	omx/gstomxbufferpool.c	/^GType gst_omx_memory_allocator_get_type (void);$/;"	p	file:	signature:(void)
gst_omx_memory_allocator_init	omx/gstomxbufferpool.c	/^gst_omx_memory_allocator_init (GstOMXMemoryAllocator * allocator)$/;"	f	file:	signature:(GstOMXMemoryAllocator * allocator)
gst_omx_memory_map	omx/gstomxbufferpool.c	/^gst_omx_memory_map (GstMemory * mem, gsize maxsize, GstMapFlags flags)$/;"	f	file:	signature:(GstMemory * mem, gsize maxsize, GstMapFlags flags)
gst_omx_memory_share	omx/gstomxbufferpool.c	/^gst_omx_memory_share (GstMemory * mem, gssize offset, gssize size)$/;"	f	file:	signature:(GstMemory * mem, gssize offset, gssize size)
gst_omx_memory_unmap	omx/gstomxbufferpool.c	/^gst_omx_memory_unmap (GstMemory * mem)$/;"	f	file:	signature:(GstMemory * mem)
gst_omx_mjpeg_dec_class_init	omx/gstomxmjpegdec.c	/^gst_omx_mjpeg_dec_class_init (GstOMXMJPEGDecClass * klass)$/;"	f	file:	signature:(GstOMXMJPEGDecClass * klass)
gst_omx_mjpeg_dec_debug_category	omx/gstomxmjpegdec.c	/^GST_DEBUG_CATEGORY_STATIC (gst_omx_mjpeg_dec_debug_category);$/;"	v
gst_omx_mjpeg_dec_get_type	omx/gstomxmjpegdec.h	/^GType gst_omx_mjpeg_dec_get_type (void);$/;"	p	signature:(void)
gst_omx_mjpeg_dec_init	omx/gstomxmjpegdec.c	/^gst_omx_mjpeg_dec_init (GstOMXMJPEGDec * self)$/;"	f	file:	signature:(GstOMXMJPEGDec * self)
gst_omx_mjpeg_dec_is_format_change	omx/gstomxmjpegdec.c	/^gst_omx_mjpeg_dec_is_format_change (GstOMXVideoDec * dec,$/;"	f	file:	signature:(GstOMXVideoDec * dec, GstOMXPort * port, GstVideoCodecState * state)
gst_omx_mjpeg_dec_is_format_change	omx/gstomxmjpegdec.c	/^static gboolean gst_omx_mjpeg_dec_is_format_change (GstOMXVideoDec * dec,$/;"	p	file:	signature:(GstOMXVideoDec * dec, GstOMXPort * port, GstVideoCodecState * state)
gst_omx_mjpeg_dec_set_format	omx/gstomxmjpegdec.c	/^gst_omx_mjpeg_dec_set_format (GstOMXVideoDec * dec, GstOMXPort * port,$/;"	f	file:	signature:(GstOMXVideoDec * dec, GstOMXPort * port, GstVideoCodecState * state)
gst_omx_mjpeg_dec_set_format	omx/gstomxmjpegdec.c	/^static gboolean gst_omx_mjpeg_dec_set_format (GstOMXVideoDec * dec,$/;"	p	file:	signature:(GstOMXVideoDec * dec, GstOMXPort * port, GstVideoCodecState * state)
gst_omx_mp3_dec_class_init	omx/gstomxmp3dec.c	/^gst_omx_mp3_dec_class_init (GstOMXMP3DecClass * klass)$/;"	f	file:	signature:(GstOMXMP3DecClass * klass)
gst_omx_mp3_dec_debug_category	omx/gstomxmp3dec.c	/^GST_DEBUG_CATEGORY_STATIC (gst_omx_mp3_dec_debug_category);$/;"	v
gst_omx_mp3_dec_get_channel_positions	omx/gstomxmp3dec.c	/^gst_omx_mp3_dec_get_channel_positions (GstOMXAudioDec * dec,$/;"	f	file:	signature:(GstOMXAudioDec * dec, GstOMXPort * port, GstAudioChannelPosition position[OMX_AUDIO_MAXCHANNELS])
gst_omx_mp3_dec_get_channel_positions	omx/gstomxmp3dec.c	/^static gboolean gst_omx_mp3_dec_get_channel_positions (GstOMXAudioDec * dec,$/;"	p	file:	signature:(GstOMXAudioDec * dec, GstOMXPort * port, GstAudioChannelPosition position[OMX_AUDIO_MAXCHANNELS])
gst_omx_mp3_dec_get_samples_per_frame	omx/gstomxmp3dec.c	/^gst_omx_mp3_dec_get_samples_per_frame (GstOMXAudioDec * dec, GstOMXPort * port)$/;"	f	file:	signature:(GstOMXAudioDec * dec, GstOMXPort * port)
gst_omx_mp3_dec_get_samples_per_frame	omx/gstomxmp3dec.c	/^static gint gst_omx_mp3_dec_get_samples_per_frame (GstOMXAudioDec * dec,$/;"	p	file:	signature:(GstOMXAudioDec * dec, GstOMXPort * port)
gst_omx_mp3_dec_get_type	omx/gstomxmp3dec.h	/^GType gst_omx_mp3_dec_get_type (void);$/;"	p	signature:(void)
gst_omx_mp3_dec_init	omx/gstomxmp3dec.c	/^gst_omx_mp3_dec_init (GstOMXMP3Dec * self)$/;"	f	file:	signature:(GstOMXMP3Dec * self)
gst_omx_mp3_dec_is_format_change	omx/gstomxmp3dec.c	/^gst_omx_mp3_dec_is_format_change (GstOMXAudioDec * dec, GstOMXPort * port,$/;"	f	file:	signature:(GstOMXAudioDec * dec, GstOMXPort * port, GstCaps * caps)
gst_omx_mp3_dec_is_format_change	omx/gstomxmp3dec.c	/^static gboolean gst_omx_mp3_dec_is_format_change (GstOMXAudioDec * dec,$/;"	p	file:	signature:(GstOMXAudioDec * dec, GstOMXPort * port, GstCaps * caps)
gst_omx_mp3_dec_set_format	omx/gstomxmp3dec.c	/^gst_omx_mp3_dec_set_format (GstOMXAudioDec * dec, GstOMXPort * port,$/;"	f	file:	signature:(GstOMXAudioDec * dec, GstOMXPort * port, GstCaps * caps)
gst_omx_mp3_dec_set_format	omx/gstomxmp3dec.c	/^static gboolean gst_omx_mp3_dec_set_format (GstOMXAudioDec * dec,$/;"	p	file:	signature:(GstOMXAudioDec * dec, GstOMXPort * port, GstCaps * caps)
gst_omx_mpeg2_video_dec_class_init	omx/gstomxmpeg2videodec.c	/^gst_omx_mpeg2_video_dec_class_init (GstOMXMPEG2VideoDecClass * klass)$/;"	f	file:	signature:(GstOMXMPEG2VideoDecClass * klass)
gst_omx_mpeg2_video_dec_debug_category	omx/gstomxmpeg2videodec.c	/^GST_DEBUG_CATEGORY_STATIC (gst_omx_mpeg2_video_dec_debug_category);$/;"	v
gst_omx_mpeg2_video_dec_get_type	omx/gstomxmpeg2videodec.h	/^GType gst_omx_mpeg2_video_dec_get_type (void);$/;"	p	signature:(void)
gst_omx_mpeg2_video_dec_init	omx/gstomxmpeg2videodec.c	/^gst_omx_mpeg2_video_dec_init (GstOMXMPEG2VideoDec * self)$/;"	f	file:	signature:(GstOMXMPEG2VideoDec * self)
gst_omx_mpeg2_video_dec_is_format_change	omx/gstomxmpeg2videodec.c	/^gst_omx_mpeg2_video_dec_is_format_change (GstOMXVideoDec * dec,$/;"	f	file:	signature:(GstOMXVideoDec * dec, GstOMXPort * port, GstVideoCodecState * state)
gst_omx_mpeg2_video_dec_is_format_change	omx/gstomxmpeg2videodec.c	/^static gboolean gst_omx_mpeg2_video_dec_is_format_change (GstOMXVideoDec * dec,$/;"	p	file:	signature:(GstOMXVideoDec * dec, GstOMXPort * port, GstVideoCodecState * state)
gst_omx_mpeg2_video_dec_set_format	omx/gstomxmpeg2videodec.c	/^gst_omx_mpeg2_video_dec_set_format (GstOMXVideoDec * dec, GstOMXPort * port,$/;"	f	file:	signature:(GstOMXVideoDec * dec, GstOMXPort * port, GstVideoCodecState * state)
gst_omx_mpeg2_video_dec_set_format	omx/gstomxmpeg2videodec.c	/^static gboolean gst_omx_mpeg2_video_dec_set_format (GstOMXVideoDec * dec,$/;"	p	file:	signature:(GstOMXVideoDec * dec, GstOMXPort * port, GstVideoCodecState * state)
gst_omx_mpeg4_video_dec_class_init	omx/gstomxmpeg4videodec.c	/^gst_omx_mpeg4_video_dec_class_init (GstOMXMPEG4VideoDecClass * klass)$/;"	f	file:	signature:(GstOMXMPEG4VideoDecClass * klass)
gst_omx_mpeg4_video_dec_debug_category	omx/gstomxmpeg4videodec.c	/^GST_DEBUG_CATEGORY_STATIC (gst_omx_mpeg4_video_dec_debug_category);$/;"	v
gst_omx_mpeg4_video_dec_get_type	omx/gstomxmpeg4videodec.h	/^GType gst_omx_mpeg4_video_dec_get_type (void);$/;"	p	signature:(void)
gst_omx_mpeg4_video_dec_init	omx/gstomxmpeg4videodec.c	/^gst_omx_mpeg4_video_dec_init (GstOMXMPEG4VideoDec * self)$/;"	f	file:	signature:(GstOMXMPEG4VideoDec * self)
gst_omx_mpeg4_video_dec_is_format_change	omx/gstomxmpeg4videodec.c	/^gst_omx_mpeg4_video_dec_is_format_change (GstOMXVideoDec * dec,$/;"	f	file:	signature:(GstOMXVideoDec * dec, GstOMXPort * port, GstVideoCodecState * state)
gst_omx_mpeg4_video_dec_is_format_change	omx/gstomxmpeg4videodec.c	/^static gboolean gst_omx_mpeg4_video_dec_is_format_change (GstOMXVideoDec * dec,$/;"	p	file:	signature:(GstOMXVideoDec * dec, GstOMXPort * port, GstVideoCodecState * state)
gst_omx_mpeg4_video_dec_set_format	omx/gstomxmpeg4videodec.c	/^gst_omx_mpeg4_video_dec_set_format (GstOMXVideoDec * dec, GstOMXPort * port,$/;"	f	file:	signature:(GstOMXVideoDec * dec, GstOMXPort * port, GstVideoCodecState * state)
gst_omx_mpeg4_video_dec_set_format	omx/gstomxmpeg4videodec.c	/^static gboolean gst_omx_mpeg4_video_dec_set_format (GstOMXVideoDec * dec,$/;"	p	file:	signature:(GstOMXVideoDec * dec, GstOMXPort * port, GstVideoCodecState * state)
gst_omx_mpeg4_video_enc_class_init	omx/gstomxmpeg4videoenc.c	/^gst_omx_mpeg4_video_enc_class_init (GstOMXMPEG4VideoEncClass * klass)$/;"	f	file:	signature:(GstOMXMPEG4VideoEncClass * klass)
gst_omx_mpeg4_video_enc_debug_category	omx/gstomxmpeg4videoenc.c	/^GST_DEBUG_CATEGORY_STATIC (gst_omx_mpeg4_video_enc_debug_category);$/;"	v
gst_omx_mpeg4_video_enc_get_caps	omx/gstomxmpeg4videoenc.c	/^gst_omx_mpeg4_video_enc_get_caps (GstOMXVideoEnc * enc, GstOMXPort * port,$/;"	f	file:	signature:(GstOMXVideoEnc * enc, GstOMXPort * port, GstVideoCodecState * state)
gst_omx_mpeg4_video_enc_get_caps	omx/gstomxmpeg4videoenc.c	/^static GstCaps *gst_omx_mpeg4_video_enc_get_caps (GstOMXVideoEnc * enc,$/;"	p	file:	signature:(GstOMXVideoEnc * enc, GstOMXPort * port, GstVideoCodecState * state)
gst_omx_mpeg4_video_enc_get_type	omx/gstomxmpeg4videoenc.h	/^GType gst_omx_mpeg4_video_enc_get_type (void);$/;"	p	signature:(void)
gst_omx_mpeg4_video_enc_init	omx/gstomxmpeg4videoenc.c	/^gst_omx_mpeg4_video_enc_init (GstOMXMPEG4VideoEnc * self)$/;"	f	file:	signature:(GstOMXMPEG4VideoEnc * self)
gst_omx_mpeg4_video_enc_set_format	omx/gstomxmpeg4videoenc.c	/^gst_omx_mpeg4_video_enc_set_format (GstOMXVideoEnc * enc, GstOMXPort * port,$/;"	f	file:	signature:(GstOMXVideoEnc * enc, GstOMXPort * port, GstVideoCodecState * state)
gst_omx_mpeg4_video_enc_set_format	omx/gstomxmpeg4videoenc.c	/^static gboolean gst_omx_mpeg4_video_enc_set_format (GstOMXVideoEnc * enc,$/;"	p	file:	signature:(GstOMXVideoEnc * enc, GstOMXPort * port, GstVideoCodecState * state)
gst_omx_parse_hacks	omx/gstomx.c	/^gst_omx_parse_hacks (gchar ** hacks)$/;"	f	signature:(gchar ** hacks)
gst_omx_parse_hacks	omx/gstomx.h	/^guint64           gst_omx_parse_hacks (gchar ** hacks);$/;"	p	signature:(gchar ** hacks)
gst_omx_port_acquire_buffer	omx/gstomx.c	/^gst_omx_port_acquire_buffer (GstOMXPort * port, GstOMXBuffer ** buf)$/;"	f	signature:(GstOMXPort * port, GstOMXBuffer ** buf)
gst_omx_port_acquire_buffer	omx/gstomx.h	/^GstOMXAcquireBufferReturn gst_omx_port_acquire_buffer (GstOMXPort *port, GstOMXBuffer **buf);$/;"	p	signature:(GstOMXPort *port, GstOMXBuffer **buf)
gst_omx_port_allocate_buffers	omx/gstomx.c	/^gst_omx_port_allocate_buffers (GstOMXPort * port)$/;"	f	signature:(GstOMXPort * port)
gst_omx_port_allocate_buffers	omx/gstomx.h	/^OMX_ERRORTYPE     gst_omx_port_allocate_buffers (GstOMXPort *port);$/;"	p	signature:(GstOMXPort *port)
gst_omx_port_allocate_buffers_unlocked	omx/gstomx.c	/^gst_omx_port_allocate_buffers_unlocked (GstOMXPort * port,$/;"	f	file:	signature:(GstOMXPort * port, const GList * buffers, const GList * images, guint n)
gst_omx_port_deallocate_buffers	omx/gstomx.c	/^gst_omx_port_deallocate_buffers (GstOMXPort * port)$/;"	f	signature:(GstOMXPort * port)
gst_omx_port_deallocate_buffers	omx/gstomx.h	/^OMX_ERRORTYPE     gst_omx_port_deallocate_buffers (GstOMXPort *port);$/;"	p	signature:(GstOMXPort *port)
gst_omx_port_deallocate_buffers_unlocked	omx/gstomx.c	/^gst_omx_port_deallocate_buffers_unlocked (GstOMXPort * port)$/;"	f	file:	signature:(GstOMXPort * port)
gst_omx_port_deallocate_buffers_unlocked	omx/gstomx.c	/^static OMX_ERRORTYPE gst_omx_port_deallocate_buffers_unlocked (GstOMXPort *$/;"	p	file:	signature:(GstOMXPort * port)
gst_omx_port_get_port_definition	omx/gstomx.c	/^gst_omx_port_get_port_definition (GstOMXPort * port,$/;"	f	signature:(GstOMXPort * port, OMX_PARAM_PORTDEFINITIONTYPE * port_def)
gst_omx_port_get_port_definition	omx/gstomx.h	/^OMX_ERRORTYPE     gst_omx_port_get_port_definition (GstOMXPort * port, OMX_PARAM_PORTDEFINITIONTYPE * port_def);$/;"	p	signature:(GstOMXPort * port, OMX_PARAM_PORTDEFINITIONTYPE * port_def)
gst_omx_port_is_enabled	omx/gstomx.c	/^gst_omx_port_is_enabled (GstOMXPort * port)$/;"	f	signature:(GstOMXPort * port)
gst_omx_port_is_enabled	omx/gstomx.h	/^gboolean          gst_omx_port_is_enabled (GstOMXPort * port);$/;"	p	signature:(GstOMXPort * port)
gst_omx_port_is_flushing	omx/gstomx.c	/^gst_omx_port_is_flushing (GstOMXPort * port)$/;"	f	signature:(GstOMXPort * port)
gst_omx_port_is_flushing	omx/gstomx.h	/^gboolean          gst_omx_port_is_flushing (GstOMXPort *port);$/;"	p	signature:(GstOMXPort *port)
gst_omx_port_mark_reconfigured	omx/gstomx.c	/^gst_omx_port_mark_reconfigured (GstOMXPort * port)$/;"	f	signature:(GstOMXPort * port)
gst_omx_port_mark_reconfigured	omx/gstomx.h	/^OMX_ERRORTYPE     gst_omx_port_mark_reconfigured (GstOMXPort * port);$/;"	p	signature:(GstOMXPort * port)
gst_omx_port_populate	omx/gstomx.c	/^gst_omx_port_populate (GstOMXPort * port)$/;"	f	signature:(GstOMXPort * port)
gst_omx_port_populate	omx/gstomx.h	/^OMX_ERRORTYPE     gst_omx_port_populate (GstOMXPort *port);$/;"	p	signature:(GstOMXPort *port)
gst_omx_port_populate_unlocked	omx/gstomx.c	/^gst_omx_port_populate_unlocked (GstOMXPort * port)$/;"	f	file:	signature:(GstOMXPort * port)
gst_omx_port_release_buffer	omx/gstomx.c	/^gst_omx_port_release_buffer (GstOMXPort * port, GstOMXBuffer * buf)$/;"	f	signature:(GstOMXPort * port, GstOMXBuffer * buf)
gst_omx_port_release_buffer	omx/gstomx.h	/^OMX_ERRORTYPE     gst_omx_port_release_buffer (GstOMXPort *port, GstOMXBuffer *buf);$/;"	p	signature:(GstOMXPort *port, GstOMXBuffer *buf)
gst_omx_port_set_enabled	omx/gstomx.c	/^gst_omx_port_set_enabled (GstOMXPort * port, gboolean enabled)$/;"	f	signature:(GstOMXPort * port, gboolean enabled)
gst_omx_port_set_enabled	omx/gstomx.h	/^OMX_ERRORTYPE     gst_omx_port_set_enabled (GstOMXPort * port, gboolean enabled);$/;"	p	signature:(GstOMXPort * port, gboolean enabled)
gst_omx_port_set_enabled_unlocked	omx/gstomx.c	/^gst_omx_port_set_enabled_unlocked (GstOMXPort * port, gboolean enabled)$/;"	f	file:	signature:(GstOMXPort * port, gboolean enabled)
gst_omx_port_set_flushing	omx/gstomx.c	/^gst_omx_port_set_flushing (GstOMXPort * port, GstClockTime timeout,$/;"	f	signature:(GstOMXPort * port, GstClockTime timeout, gboolean flush)
gst_omx_port_set_flushing	omx/gstomx.h	/^OMX_ERRORTYPE     gst_omx_port_set_flushing (GstOMXPort *port, GstClockTime timeout, gboolean flush);$/;"	p	signature:(GstOMXPort *port, GstClockTime timeout, gboolean flush)
gst_omx_port_tbm_allocate_dec_buffers	omx/gstomx.c	/^gst_omx_port_tbm_allocate_dec_buffers (tbm_bufmgr bufMgr, GstOMXPort * port, int eCompressionFormat)$/;"	f	signature:(tbm_bufmgr bufMgr, GstOMXPort * port, int eCompressionFormat)
gst_omx_port_tbm_allocate_dec_buffers	omx/gstomx.h	/^OMX_ERRORTYPE     gst_omx_port_tbm_allocate_dec_buffers (tbm_bufmgr  bufMgr, GstOMXPort * port, int eCompressionFormat);$/;"	p	signature:(tbm_bufmgr bufMgr, GstOMXPort * port, int eCompressionFormat)
gst_omx_port_tbm_allocate_enc_buffers	omx/gstomx.c	/^gst_omx_port_tbm_allocate_enc_buffers (tbm_bufmgr bufMgr, GstOMXPort * port, int eCompressionFormat)$/;"	f	signature:(tbm_bufmgr bufMgr, GstOMXPort * port, int eCompressionFormat)
gst_omx_port_tbm_allocate_enc_buffers	omx/gstomx.h	/^OMX_ERRORTYPE     gst_omx_port_tbm_allocate_enc_buffers (tbm_bufmgr  bufMgr, GstOMXPort * port, int eCompressionFormat);$/;"	p	signature:(tbm_bufmgr bufMgr, GstOMXPort * port, int eCompressionFormat)
gst_omx_port_update_port_definition	omx/gstomx.c	/^gst_omx_port_update_port_definition (GstOMXPort * port,$/;"	f	signature:(GstOMXPort * port, OMX_PARAM_PORTDEFINITIONTYPE * port_def)
gst_omx_port_update_port_definition	omx/gstomx.h	/^OMX_ERRORTYPE     gst_omx_port_update_port_definition (GstOMXPort *port, OMX_PARAM_PORTDEFINITIONTYPE *port_definition);$/;"	p	signature:(GstOMXPort *port, OMX_PARAM_PORTDEFINITIONTYPE *port_definition)
gst_omx_port_use_buffers	omx/gstomx.c	/^gst_omx_port_use_buffers (GstOMXPort * port, const GList * buffers)$/;"	f	signature:(GstOMXPort * port, const GList * buffers)
gst_omx_port_use_buffers	omx/gstomx.h	/^OMX_ERRORTYPE     gst_omx_port_use_buffers (GstOMXPort *port, const GList *buffers);$/;"	p	signature:(GstOMXPort *port, const GList *buffers)
gst_omx_port_use_eglimages	omx/gstomx.c	/^gst_omx_port_use_eglimages (GstOMXPort * port, const GList * images)$/;"	f	signature:(GstOMXPort * port, const GList * images)
gst_omx_port_use_eglimages	omx/gstomx.h	/^OMX_ERRORTYPE     gst_omx_port_use_eglimages (GstOMXPort *port, const GList *images);$/;"	p	signature:(GstOMXPort *port, const GList *images)
gst_omx_port_wait_buffers_released	omx/gstomx.c	/^gst_omx_port_wait_buffers_released (GstOMXPort * port, GstClockTime timeout)$/;"	f	signature:(GstOMXPort * port, GstClockTime timeout)
gst_omx_port_wait_buffers_released	omx/gstomx.h	/^OMX_ERRORTYPE     gst_omx_port_wait_buffers_released (GstOMXPort * port, GstClockTime timeout);$/;"	p	signature:(GstOMXPort * port, GstClockTime timeout)
gst_omx_port_wait_buffers_released_unlocked	omx/gstomx.c	/^gst_omx_port_wait_buffers_released_unlocked (GstOMXPort * port,$/;"	f	file:	signature:(GstOMXPort * port, GstClockTime timeout)
gst_omx_port_wait_enabled	omx/gstomx.c	/^gst_omx_port_wait_enabled (GstOMXPort * port, GstClockTime timeout)$/;"	f	signature:(GstOMXPort * port, GstClockTime timeout)
gst_omx_port_wait_enabled	omx/gstomx.h	/^OMX_ERRORTYPE     gst_omx_port_wait_enabled (GstOMXPort * port, GstClockTime timeout);$/;"	p	signature:(GstOMXPort * port, GstClockTime timeout)
gst_omx_port_wait_enabled_unlocked	omx/gstomx.c	/^gst_omx_port_wait_enabled_unlocked (GstOMXPort * port, GstClockTime timeout)$/;"	f	file:	signature:(GstOMXPort * port, GstClockTime timeout)
gst_omx_set_default_role	omx/gstomx.c	/^gst_omx_set_default_role (GstOMXClassData * class_data,$/;"	f	signature:(GstOMXClassData * class_data, const gchar * default_role)
gst_omx_set_default_role	omx/gstomx.h	/^void              gst_omx_set_default_role (GstOMXClassData *class_data, const gchar *default_role);$/;"	p	signature:(GstOMXClassData *class_data, const gchar *default_role)
gst_omx_setup_tunnel	omx/gstomx.c	/^gst_omx_setup_tunnel (GstOMXPort * port1, GstOMXPort * port2)$/;"	f	signature:(GstOMXPort * port1, GstOMXPort * port2)
gst_omx_setup_tunnel	omx/gstomx.h	/^OMX_ERRORTYPE     gst_omx_setup_tunnel (GstOMXPort * port1, GstOMXPort * port2);$/;"	p	signature:(GstOMXPort * port1, GstOMXPort * port2)
gst_omx_state_to_string	omx/gstomx.c	/^gst_omx_state_to_string (OMX_STATETYPE state)$/;"	f	signature:(OMX_STATETYPE state)
gst_omx_state_to_string	omx/gstomx.h	/^const gchar *     gst_omx_state_to_string (OMX_STATETYPE state);$/;"	p	signature:(OMX_STATETYPE state)
gst_omx_tbm_allocate_bo	omx/gstomx.c	/^gst_omx_tbm_allocate_bo(tbm_bufmgr hBufmgr, int size)$/;"	f	signature:(tbm_bufmgr hBufmgr, int size)
gst_omx_tbm_allocate_bo	omx/gstomx.h	/^tbm_bo            gst_omx_tbm_allocate_bo(tbm_bufmgr hBufmgr, int size);$/;"	p	signature:(tbm_bufmgr hBufmgr, int size)
gst_omx_tbm_deallocate_bo	omx/gstomx.c	/^gst_omx_tbm_deallocate_bo(tbm_bo bo)$/;"	f	signature:(tbm_bo bo)
gst_omx_tbm_deallocate_bo	omx/gstomx.h	/^void              gst_omx_tbm_deallocate_bo(tbm_bo bo);$/;"	p	signature:(tbm_bo bo)
gst_omx_tbm_get_bo_fd	omx/gstomx.c	/^gst_omx_tbm_get_bo_fd(tbm_bo bo)$/;"	f	signature:(tbm_bo bo)
gst_omx_tbm_get_bo_fd	omx/gstomx.h	/^OMX_U32           gst_omx_tbm_get_bo_fd(tbm_bo bo);$/;"	p	signature:(tbm_bo bo)
gst_omx_tbm_get_bo_ptr	omx/gstomx.c	/^gst_omx_tbm_get_bo_ptr(tbm_bo bo)$/;"	f	signature:(tbm_bo bo)
gst_omx_tbm_get_bo_ptr	omx/gstomx.h	/^OMX_PTR           gst_omx_tbm_get_bo_ptr(tbm_bo bo);$/;"	p	signature:(tbm_bo bo)
gst_omx_theora_dec_class_init	omx/gstomxtheoradec.c	/^gst_omx_theora_dec_class_init (GstOMXTheoraDecClass * klass)$/;"	f	file:	signature:(GstOMXTheoraDecClass * klass)
gst_omx_theora_dec_debug_category	omx/gstomxtheoradec.c	/^GST_DEBUG_CATEGORY_STATIC (gst_omx_theora_dec_debug_category);$/;"	v
gst_omx_theora_dec_get_type	omx/gstomxtheoradec.h	/^GType gst_omx_theora_dec_get_type (void);$/;"	p	signature:(void)
gst_omx_theora_dec_handle_frame	omx/gstomxtheoradec.c	/^gst_omx_theora_dec_handle_frame (GstVideoDecoder * decoder,$/;"	f	file:	signature:(GstVideoDecoder * decoder, GstVideoCodecFrame * frame)
gst_omx_theora_dec_handle_frame	omx/gstomxtheoradec.c	/^static GstFlowReturn gst_omx_theora_dec_handle_frame (GstVideoDecoder * decoder,$/;"	p	file:	signature:(GstVideoDecoder * decoder, GstVideoCodecFrame * frame)
gst_omx_theora_dec_init	omx/gstomxtheoradec.c	/^gst_omx_theora_dec_init (GstOMXTheoraDec * self)$/;"	f	file:	signature:(GstOMXTheoraDec * self)
gst_omx_theora_dec_is_format_change	omx/gstomxtheoradec.c	/^gst_omx_theora_dec_is_format_change (GstOMXVideoDec * dec,$/;"	f	file:	signature:(GstOMXVideoDec * dec, GstOMXPort * port, GstVideoCodecState * state)
gst_omx_theora_dec_is_format_change	omx/gstomxtheoradec.c	/^static gboolean gst_omx_theora_dec_is_format_change (GstOMXVideoDec * dec,$/;"	p	file:	signature:(GstOMXVideoDec * dec, GstOMXPort * port, GstVideoCodecState * state)
gst_omx_theora_dec_set_format	omx/gstomxtheoradec.c	/^gst_omx_theora_dec_set_format (GstOMXVideoDec * dec, GstOMXPort * port,$/;"	f	file:	signature:(GstOMXVideoDec * dec, GstOMXPort * port, GstVideoCodecState * state)
gst_omx_theora_dec_set_format	omx/gstomxtheoradec.c	/^static gboolean gst_omx_theora_dec_set_format (GstOMXVideoDec * dec,$/;"	p	file:	signature:(GstOMXVideoDec * dec, GstOMXPort * port, GstVideoCodecState * state)
gst_omx_theora_dec_stop	omx/gstomxtheoradec.c	/^gst_omx_theora_dec_stop (GstVideoDecoder * decoder)$/;"	f	file:	signature:(GstVideoDecoder * decoder)
gst_omx_theora_dec_stop	omx/gstomxtheoradec.c	/^static gboolean gst_omx_theora_dec_stop (GstVideoDecoder * decoder);$/;"	p	file:	signature:(GstVideoDecoder * decoder)
gst_omx_video_debug_category	omx/gstomx.h	/^GST_DEBUG_CATEGORY_EXTERN (gst_omx_video_debug_category);$/;"	v
gst_omx_video_debug_category	omx/gstomxvideo.c	/^GST_DEBUG_CATEGORY (gst_omx_video_debug_category);$/;"	v
gst_omx_video_dec_allocate_output_buffers	omx/gstomxvideodec.c	/^gst_omx_video_dec_allocate_output_buffers (GstOMXVideoDec * self)$/;"	f	file:	signature:(GstOMXVideoDec * self)
gst_omx_video_dec_allocate_output_buffers	omx/gstomxvideodec.c	/^static OMX_ERRORTYPE gst_omx_video_dec_allocate_output_buffers (GstOMXVideoDec *$/;"	p	file:	signature:(GstOMXVideoDec * self)
gst_omx_video_dec_change_state	omx/gstomxvideodec.c	/^gst_omx_video_dec_change_state (GstElement * element, GstStateChange transition)$/;"	f	file:	signature:(GstElement * element, GstStateChange transition)
gst_omx_video_dec_change_state	omx/gstomxvideodec.c	/^gst_omx_video_dec_change_state (GstElement * element,$/;"	p	file:	signature:(GstElement * element, GstStateChange transition)
gst_omx_video_dec_class_init	omx/gstomxvideodec.c	/^gst_omx_video_dec_class_init (GstOMXVideoDecClass * klass)$/;"	f	file:	signature:(GstOMXVideoDecClass * klass)
gst_omx_video_dec_clean_older_frames	omx/gstomxvideodec.c	/^gst_omx_video_dec_clean_older_frames (GstOMXVideoDec * self,$/;"	f	file:	signature:(GstOMXVideoDec * self, GstOMXBuffer * buf, GList * frames)
gst_omx_video_dec_close	omx/gstomxvideodec.c	/^gst_omx_video_dec_close (GstVideoDecoder * decoder)$/;"	f	file:	signature:(GstVideoDecoder * decoder)
gst_omx_video_dec_close	omx/gstomxvideodec.c	/^static gboolean gst_omx_video_dec_close (GstVideoDecoder * decoder);$/;"	p	file:	signature:(GstVideoDecoder * decoder)
gst_omx_video_dec_deallocate_output_buffers	omx/gstomxvideodec.c	/^gst_omx_video_dec_deallocate_output_buffers (GstOMXVideoDec * self)$/;"	f	file:	signature:(GstOMXVideoDec * self)
gst_omx_video_dec_deallocate_output_buffers	omx/gstomxvideodec.c	/^static OMX_ERRORTYPE gst_omx_video_dec_deallocate_output_buffers (GstOMXVideoDec$/;"	p	file:	signature:(GstOMXVideoDec * self)
gst_omx_video_dec_debug_category	omx/gstomxvideodec.c	/^GST_DEBUG_CATEGORY_STATIC (gst_omx_video_dec_debug_category);$/;"	v
gst_omx_video_dec_decide_allocation	omx/gstomxvideodec.c	/^gst_omx_video_dec_decide_allocation (GstVideoDecoder * bdec, GstQuery * query)$/;"	f	file:	signature:(GstVideoDecoder * bdec, GstQuery * query)
gst_omx_video_dec_decide_allocation	omx/gstomxvideodec.c	/^static gboolean gst_omx_video_dec_decide_allocation (GstVideoDecoder * bdec,$/;"	p	file:	signature:(GstVideoDecoder * bdec, GstQuery * query)
gst_omx_video_dec_drain	omx/gstomxvideodec.c	/^gst_omx_video_dec_drain (GstOMXVideoDec * self)$/;"	f	file:	signature:(GstOMXVideoDec * self)
gst_omx_video_dec_drain	omx/gstomxvideodec.c	/^static GstFlowReturn gst_omx_video_dec_drain (GstOMXVideoDec * self);$/;"	p	file:	signature:(GstOMXVideoDec * self)
gst_omx_video_dec_fill_buffer	omx/gstomxvideodec.c	/^gst_omx_video_dec_fill_buffer (GstOMXVideoDec * self,$/;"	f	file:	signature:(GstOMXVideoDec * self, GstOMXBuffer * inbuf, GstBuffer * outbuf)
gst_omx_video_dec_finalize	omx/gstomxvideodec.c	/^gst_omx_video_dec_finalize (GObject * object)$/;"	f	file:	signature:(GObject * object)
gst_omx_video_dec_finalize	omx/gstomxvideodec.c	/^static void gst_omx_video_dec_finalize (GObject * object);$/;"	p	file:	signature:(GObject * object)
gst_omx_video_dec_finish	omx/gstomxvideodec.c	/^gst_omx_video_dec_finish (GstVideoDecoder * decoder)$/;"	f	file:	signature:(GstVideoDecoder * decoder)
gst_omx_video_dec_finish	omx/gstomxvideodec.c	/^static GstFlowReturn gst_omx_video_dec_finish (GstVideoDecoder * decoder);$/;"	p	file:	signature:(GstVideoDecoder * decoder)
gst_omx_video_dec_flush	omx/gstomxvideodec.c	/^gst_omx_video_dec_flush (GstVideoDecoder * decoder)$/;"	f	file:	signature:(GstVideoDecoder * decoder)
gst_omx_video_dec_flush	omx/gstomxvideodec.c	/^static gboolean gst_omx_video_dec_flush (GstVideoDecoder * decoder);$/;"	p	file:	signature:(GstVideoDecoder * decoder)
gst_omx_video_dec_get_type	omx/gstomxvideodec.h	/^GType gst_omx_video_dec_get_type (void);$/;"	p	signature:(void)
gst_omx_video_dec_handle_frame	omx/gstomxvideodec.c	/^gst_omx_video_dec_handle_frame (GstVideoDecoder * decoder,$/;"	f	file:	signature:(GstVideoDecoder * decoder, GstVideoCodecFrame * frame)
gst_omx_video_dec_handle_frame	omx/gstomxvideodec.c	/^static GstFlowReturn gst_omx_video_dec_handle_frame (GstVideoDecoder * decoder,$/;"	p	file:	signature:(GstVideoDecoder * decoder, GstVideoCodecFrame * frame)
gst_omx_video_dec_init	omx/gstomxvideodec.c	/^gst_omx_video_dec_init (GstOMXVideoDec * self)$/;"	f	file:	signature:(GstOMXVideoDec * self)
gst_omx_video_dec_loop	omx/gstomxvideodec.c	/^gst_omx_video_dec_loop (GstOMXVideoDec * self)$/;"	f	file:	signature:(GstOMXVideoDec * self)
gst_omx_video_dec_negotiate	omx/gstomxvideodec.c	/^gst_omx_video_dec_negotiate (GstOMXVideoDec * self)$/;"	f	file:	signature:(GstOMXVideoDec * self)
gst_omx_video_dec_open	omx/gstomxvideodec.c	/^gst_omx_video_dec_open (GstVideoDecoder * decoder)$/;"	f	file:	signature:(GstVideoDecoder * decoder)
gst_omx_video_dec_open	omx/gstomxvideodec.c	/^static gboolean gst_omx_video_dec_open (GstVideoDecoder * decoder);$/;"	p	file:	signature:(GstVideoDecoder * decoder)
gst_omx_video_dec_reconfigure_output_port	omx/gstomxvideodec.c	/^gst_omx_video_dec_reconfigure_output_port (GstOMXVideoDec * self)$/;"	f	file:	signature:(GstOMXVideoDec * self)
gst_omx_video_dec_set_format	omx/gstomxvideodec.c	/^gst_omx_video_dec_set_format (GstVideoDecoder * decoder,$/;"	f	file:	signature:(GstVideoDecoder * decoder, GstVideoCodecState * state)
gst_omx_video_dec_set_format	omx/gstomxvideodec.c	/^static gboolean gst_omx_video_dec_set_format (GstVideoDecoder * decoder,$/;"	p	file:	signature:(GstVideoDecoder * decoder, GstVideoCodecState * state)
gst_omx_video_dec_shutdown	omx/gstomxvideodec.c	/^gst_omx_video_dec_shutdown (GstOMXVideoDec * self)$/;"	f	file:	signature:(GstOMXVideoDec * self)
gst_omx_video_dec_start	omx/gstomxvideodec.c	/^gst_omx_video_dec_start (GstVideoDecoder * decoder)$/;"	f	file:	signature:(GstVideoDecoder * decoder)
gst_omx_video_dec_start	omx/gstomxvideodec.c	/^static gboolean gst_omx_video_dec_start (GstVideoDecoder * decoder);$/;"	p	file:	signature:(GstVideoDecoder * decoder)
gst_omx_video_dec_stop	omx/gstomxvideodec.c	/^gst_omx_video_dec_stop (GstVideoDecoder * decoder)$/;"	f	file:	signature:(GstVideoDecoder * decoder)
gst_omx_video_dec_stop	omx/gstomxvideodec.c	/^static gboolean gst_omx_video_dec_stop (GstVideoDecoder * decoder);$/;"	p	file:	signature:(GstVideoDecoder * decoder)
gst_omx_video_enc_change_state	omx/gstomxvideoenc.c	/^gst_omx_video_enc_change_state (GstElement * element, GstStateChange transition)$/;"	f	file:	signature:(GstElement * element, GstStateChange transition)
gst_omx_video_enc_change_state	omx/gstomxvideoenc.c	/^gst_omx_video_enc_change_state (GstElement * element,$/;"	p	file:	signature:(GstElement * element, GstStateChange transition)
gst_omx_video_enc_class_init	omx/gstomxvideoenc.c	/^gst_omx_video_enc_class_init (GstOMXVideoEncClass * klass)$/;"	f	file:	signature:(GstOMXVideoEncClass * klass)
gst_omx_video_enc_close	omx/gstomxvideoenc.c	/^gst_omx_video_enc_close (GstVideoEncoder * encoder)$/;"	f	file:	signature:(GstVideoEncoder * encoder)
gst_omx_video_enc_close	omx/gstomxvideoenc.c	/^static gboolean gst_omx_video_enc_close (GstVideoEncoder * encoder);$/;"	p	file:	signature:(GstVideoEncoder * encoder)
gst_omx_video_enc_control_rate_get_type	omx/gstomxvideoenc.c	/^gst_omx_video_enc_control_rate_get_type (void)$/;"	f	file:	signature:(void)
gst_omx_video_enc_debug_category	omx/gstomxvideoenc.c	/^GST_DEBUG_CATEGORY_STATIC (gst_omx_video_enc_debug_category);$/;"	v
gst_omx_video_enc_drain	omx/gstomxvideoenc.c	/^gst_omx_video_enc_drain (GstOMXVideoEnc * self)$/;"	f	file:	signature:(GstOMXVideoEnc * self)
gst_omx_video_enc_drain	omx/gstomxvideoenc.c	/^static GstFlowReturn gst_omx_video_enc_drain (GstOMXVideoEnc * self);$/;"	p	file:	signature:(GstOMXVideoEnc * self)
gst_omx_video_enc_fill_buffer	omx/gstomxvideoenc.c	/^gst_omx_video_enc_fill_buffer (GstOMXVideoEnc * self, GstBuffer * inbuf,$/;"	f	file:	signature:(GstOMXVideoEnc * self, GstBuffer * inbuf, GstOMXBuffer * outbuf)
gst_omx_video_enc_finalize	omx/gstomxvideoenc.c	/^gst_omx_video_enc_finalize (GObject * object)$/;"	f	file:	signature:(GObject * object)
gst_omx_video_enc_finalize	omx/gstomxvideoenc.c	/^static void gst_omx_video_enc_finalize (GObject * object);$/;"	p	file:	signature:(GObject * object)
gst_omx_video_enc_finish	omx/gstomxvideoenc.c	/^gst_omx_video_enc_finish (GstVideoEncoder * encoder)$/;"	f	file:	signature:(GstVideoEncoder * encoder)
gst_omx_video_enc_finish	omx/gstomxvideoenc.c	/^static gboolean gst_omx_video_enc_finish (GstVideoEncoder * encoder);$/;"	p	file:	signature:(GstVideoEncoder * encoder)
gst_omx_video_enc_flush	omx/gstomxvideoenc.c	/^gst_omx_video_enc_flush (GstVideoEncoder * encoder)$/;"	f	file:	signature:(GstVideoEncoder * encoder)
gst_omx_video_enc_flush	omx/gstomxvideoenc.c	/^static gboolean gst_omx_video_enc_flush (GstVideoEncoder * encoder);$/;"	p	file:	signature:(GstVideoEncoder * encoder)
gst_omx_video_enc_get_property	omx/gstomxvideoenc.c	/^gst_omx_video_enc_get_property (GObject * object, guint prop_id, GValue * value,$/;"	f	file:	signature:(GObject * object, guint prop_id, GValue * value, GParamSpec * pspec)
gst_omx_video_enc_get_property	omx/gstomxvideoenc.c	/^static void gst_omx_video_enc_get_property (GObject * object, guint prop_id,$/;"	p	file:	signature:(GObject * object, guint prop_id, GValue * value, GParamSpec * pspec)
gst_omx_video_enc_get_type	omx/gstomxvideoenc.h	/^GType gst_omx_video_enc_get_type (void);$/;"	p	signature:(void)
gst_omx_video_enc_getcaps	omx/gstomxvideoenc.c	/^gst_omx_video_enc_getcaps (GstVideoEncoder * encoder, GstCaps * filter)$/;"	f	file:	signature:(GstVideoEncoder * encoder, GstCaps * filter)
gst_omx_video_enc_getcaps	omx/gstomxvideoenc.c	/^static GstCaps *gst_omx_video_enc_getcaps (GstVideoEncoder * encoder,$/;"	p	file:	signature:(GstVideoEncoder * encoder, GstCaps * filter)
gst_omx_video_enc_handle_frame	omx/gstomxvideoenc.c	/^gst_omx_video_enc_handle_frame (GstVideoEncoder * encoder,$/;"	f	file:	signature:(GstVideoEncoder * encoder, GstVideoCodecFrame * frame)
gst_omx_video_enc_handle_frame	omx/gstomxvideoenc.c	/^static GstFlowReturn gst_omx_video_enc_handle_frame (GstVideoEncoder * encoder,$/;"	p	file:	signature:(GstVideoEncoder * encoder, GstVideoCodecFrame * frame)
gst_omx_video_enc_handle_output_frame	omx/gstomxvideoenc.c	/^gst_omx_video_enc_handle_output_frame (GstOMXVideoEnc * self, GstOMXPort * port,$/;"	f	file:	signature:(GstOMXVideoEnc * self, GstOMXPort * port, GstOMXBuffer * buf, GstVideoCodecFrame * frame)
gst_omx_video_enc_handle_output_frame	omx/gstomxvideoenc.c	/^static GstFlowReturn gst_omx_video_enc_handle_output_frame (GstOMXVideoEnc *$/;"	p	file:	signature:(GstOMXVideoEnc * self, GstOMXPort * port, GstOMXBuffer * buf, GstVideoCodecFrame * frame)
gst_omx_video_enc_init	omx/gstomxvideoenc.c	/^gst_omx_video_enc_init (GstOMXVideoEnc * self)$/;"	f	file:	signature:(GstOMXVideoEnc * self)
gst_omx_video_enc_loop	omx/gstomxvideoenc.c	/^gst_omx_video_enc_loop (GstOMXVideoEnc * self)$/;"	f	file:	signature:(GstOMXVideoEnc * self)
gst_omx_video_enc_open	omx/gstomxvideoenc.c	/^gst_omx_video_enc_open (GstVideoEncoder * encoder)$/;"	f	file:	signature:(GstVideoEncoder * encoder)
gst_omx_video_enc_open	omx/gstomxvideoenc.c	/^static gboolean gst_omx_video_enc_open (GstVideoEncoder * encoder);$/;"	p	file:	signature:(GstVideoEncoder * encoder)
gst_omx_video_enc_propose_allocation	omx/gstomxvideoenc.c	/^gst_omx_video_enc_propose_allocation (GstVideoEncoder * encoder,$/;"	f	file:	signature:(GstVideoEncoder * encoder, GstQuery * query)
gst_omx_video_enc_propose_allocation	omx/gstomxvideoenc.c	/^static gboolean gst_omx_video_enc_propose_allocation (GstVideoEncoder * encoder,$/;"	p	file:	signature:(GstVideoEncoder * encoder, GstQuery * query)
gst_omx_video_enc_set_format	omx/gstomxvideoenc.c	/^gst_omx_video_enc_set_format (GstVideoEncoder * encoder,$/;"	f	file:	signature:(GstVideoEncoder * encoder, GstVideoCodecState * state)
gst_omx_video_enc_set_format	omx/gstomxvideoenc.c	/^static gboolean gst_omx_video_enc_set_format (GstVideoEncoder * encoder,$/;"	p	file:	signature:(GstVideoEncoder * encoder, GstVideoCodecState * state)
gst_omx_video_enc_set_property	omx/gstomxvideoenc.c	/^gst_omx_video_enc_set_property (GObject * object, guint prop_id,$/;"	f	file:	signature:(GObject * object, guint prop_id, const GValue * value, GParamSpec * pspec)
gst_omx_video_enc_set_property	omx/gstomxvideoenc.c	/^static void gst_omx_video_enc_set_property (GObject * object, guint prop_id,$/;"	p	file:	signature:(GObject * object, guint prop_id, const GValue * value, GParamSpec * pspec)
gst_omx_video_enc_shutdown	omx/gstomxvideoenc.c	/^gst_omx_video_enc_shutdown (GstOMXVideoEnc * self)$/;"	f	file:	signature:(GstOMXVideoEnc * self)
gst_omx_video_enc_start	omx/gstomxvideoenc.c	/^gst_omx_video_enc_start (GstVideoEncoder * encoder)$/;"	f	file:	signature:(GstVideoEncoder * encoder)
gst_omx_video_enc_start	omx/gstomxvideoenc.c	/^static gboolean gst_omx_video_enc_start (GstVideoEncoder * encoder);$/;"	p	file:	signature:(GstVideoEncoder * encoder)
gst_omx_video_enc_stop	omx/gstomxvideoenc.c	/^gst_omx_video_enc_stop (GstVideoEncoder * encoder)$/;"	f	file:	signature:(GstVideoEncoder * encoder)
gst_omx_video_enc_stop	omx/gstomxvideoenc.c	/^static gboolean gst_omx_video_enc_stop (GstVideoEncoder * encoder);$/;"	p	file:	signature:(GstVideoEncoder * encoder)
gst_omx_video_find_nearest_frame	omx/gstomxvideo.c	/^gst_omx_video_find_nearest_frame (GstOMXBuffer * buf, GList * frames)$/;"	f	signature:(GstOMXBuffer * buf, GList * frames)
gst_omx_video_find_nearest_frame	omx/gstomxvideo.h	/^gst_omx_video_find_nearest_frame (GstOMXBuffer * buf, GList * frames);$/;"	p	signature:(GstOMXBuffer * buf, GList * frames)
gst_omx_video_get_caps_for_map	omx/gstomxvideo.c	/^gst_omx_video_get_caps_for_map (GList * map)$/;"	f	signature:(GList * map)
gst_omx_video_get_caps_for_map	omx/gstomxvideo.h	/^GstCaps * gst_omx_video_get_caps_for_map(GList * map);$/;"	p	signature:(GList * map)
gst_omx_video_get_format_from_omx	omx/gstomxvideo.c	/^gst_omx_video_get_format_from_omx (OMX_COLOR_FORMATTYPE omx_colorformat)$/;"	f	signature:(OMX_COLOR_FORMATTYPE omx_colorformat)
gst_omx_video_get_format_from_omx	omx/gstomxvideo.h	/^gst_omx_video_get_format_from_omx (OMX_COLOR_FORMATTYPE omx_colorformat);$/;"	p	signature:(OMX_COLOR_FORMATTYPE omx_colorformat)
gst_omx_video_get_supported_colorformats	omx/gstomxvideo.c	/^gst_omx_video_get_supported_colorformats (GstOMXPort * port,$/;"	f	signature:(GstOMXPort * port, GstVideoCodecState * state)
gst_omx_video_get_supported_colorformats	omx/gstomxvideo.h	/^gst_omx_video_get_supported_colorformats (GstOMXPort * port,$/;"	p	signature:(GstOMXPort * port, GstVideoCodecState * state)
gst_omx_video_negotiation_map_free	omx/gstomxvideo.c	/^gst_omx_video_negotiation_map_free (GstOMXVideoNegotiationMap * m)$/;"	f	signature:(GstOMXVideoNegotiationMap * m)
gst_omx_video_negotiation_map_free	omx/gstomxvideo.h	/^gst_omx_video_negotiation_map_free (GstOMXVideoNegotiationMap * m);$/;"	p	signature:(GstOMXVideoNegotiationMap * m)
gst_omx_vp8_dec_class_init	omx/gstomxvp8dec.c	/^gst_omx_vp8_dec_class_init (GstOMXVP8DecClass * klass)$/;"	f	file:	signature:(GstOMXVP8DecClass * klass)
gst_omx_vp8_dec_debug_category	omx/gstomxvp8dec.c	/^GST_DEBUG_CATEGORY_STATIC (gst_omx_vp8_dec_debug_category);$/;"	v
gst_omx_vp8_dec_get_type	omx/gstomxvp8dec.h	/^GType gst_omx_vp8_dec_get_type (void);$/;"	p	signature:(void)
gst_omx_vp8_dec_init	omx/gstomxvp8dec.c	/^gst_omx_vp8_dec_init (GstOMXVP8Dec * self)$/;"	f	file:	signature:(GstOMXVP8Dec * self)
gst_omx_vp8_dec_is_format_change	omx/gstomxvp8dec.c	/^gst_omx_vp8_dec_is_format_change (GstOMXVideoDec * dec,$/;"	f	file:	signature:(GstOMXVideoDec * dec, GstOMXPort * port, GstVideoCodecState * state)
gst_omx_vp8_dec_is_format_change	omx/gstomxvp8dec.c	/^static gboolean gst_omx_vp8_dec_is_format_change (GstOMXVideoDec * dec,$/;"	p	file:	signature:(GstOMXVideoDec * dec, GstOMXPort * port, GstVideoCodecState * state)
gst_omx_vp8_dec_set_format	omx/gstomxvp8dec.c	/^gst_omx_vp8_dec_set_format (GstOMXVideoDec * dec, GstOMXPort * port,$/;"	f	file:	signature:(GstOMXVideoDec * dec, GstOMXPort * port, GstVideoCodecState * state)
gst_omx_vp8_dec_set_format	omx/gstomxvp8dec.c	/^static gboolean gst_omx_vp8_dec_set_format (GstOMXVideoDec * dec,$/;"	p	file:	signature:(GstOMXVideoDec * dec, GstOMXPort * port, GstVideoCodecState * state)
gst_omx_wmv_dec_class_init	omx/gstomxwmvdec.c	/^gst_omx_wmv_dec_class_init (GstOMXWMVDecClass * klass)$/;"	f	file:	signature:(GstOMXWMVDecClass * klass)
gst_omx_wmv_dec_debug_category	omx/gstomxwmvdec.c	/^GST_DEBUG_CATEGORY_STATIC (gst_omx_wmv_dec_debug_category);$/;"	v
gst_omx_wmv_dec_get_type	omx/gstomxwmvdec.h	/^GType gst_omx_wmv_dec_get_type (void);$/;"	p	signature:(void)
gst_omx_wmv_dec_init	omx/gstomxwmvdec.c	/^gst_omx_wmv_dec_init (GstOMXWMVDec * self)$/;"	f	file:	signature:(GstOMXWMVDec * self)
gst_omx_wmv_dec_is_format_change	omx/gstomxwmvdec.c	/^gst_omx_wmv_dec_is_format_change (GstOMXVideoDec * dec,$/;"	f	file:	signature:(GstOMXVideoDec * dec, GstOMXPort * port, GstVideoCodecState * state)
gst_omx_wmv_dec_is_format_change	omx/gstomxwmvdec.c	/^static gboolean gst_omx_wmv_dec_is_format_change (GstOMXVideoDec * dec,$/;"	p	file:	signature:(GstOMXVideoDec * dec, GstOMXPort * port, GstVideoCodecState * state)
gst_omx_wmv_dec_set_format	omx/gstomxwmvdec.c	/^gst_omx_wmv_dec_set_format (GstOMXVideoDec * dec, GstOMXPort * port,$/;"	f	file:	signature:(GstOMXVideoDec * dec, GstOMXPort * port, GstVideoCodecState * state)
gst_omx_wmv_dec_set_format	omx/gstomxwmvdec.c	/^static gboolean gst_omx_wmv_dec_set_format (GstOMXVideoDec * dec,$/;"	p	file:	signature:(GstOMXVideoDec * dec, GstOMXPort * port, GstVideoCodecState * state)
gstomx_debug	omx/gstomx.c	/^GST_DEBUG_CATEGORY (gstomx_debug);$/;"	v
h	omx/gstomx.h	/^    int      h[SCMN_IMGB_MAX_PLANE];    \/* height of each image plane *\/$/;"	m	struct:__anon2	access:public
hMarkTargetComponent	omx/openmax/OMX_Core.h	/^    OMX_HANDLETYPE hMarkTargetComponent; \/**< The component that will generate a $/;"	m	struct:OMX_BUFFERHEADERTYPE	access:public
hMarkTargetComponent	omx/openmax/OMX_Types.h	/^    OMX_HANDLETYPE hMarkTargetComponent;   \/**< The component that will $/;"	m	struct:OMX_MARKTYPE	access:public
hPipe	omx/openmax/OMX_Component.h	/^    OMX_HANDLETYPE hPipe;       \/**< The pipe handle*\/$/;"	m	struct:OMX_PARAM_CONTENTPIPETYPE	access:public
hTBMBufMgr	omx/gstomxvideodec.h	/^  tbm_bufmgr hTBMBufMgr;$/;"	m	struct:_GstOMXVideoDec	access:public
hTBMBufMgr	omx/gstomxvideoenc.h	/^  tbm_bufmgr hTBMBufMgr;$/;"	m	struct:_GstOMXVideoEnc	access:public
hacks	omx/gstomx.h	/^  guint64 hacks; \/* Flags, GST_OMX_HACK_* *\/$/;"	m	struct:_GstOMXComponent	access:public
hacks	omx/gstomx.h	/^  guint64 hacks;$/;"	m	struct:_GstOMXClassData	access:public
handle	omx/gstomx.h	/^  OMX_HANDLETYPE handle;$/;"	m	struct:_GstOMXComponent	access:public
handle_keyboard	examples/egl/testegl.c	/^handle_keyboard (GIOChannel * source, GIOCondition cond, APP_STATE_T * state)$/;"	f	file:	signature:(GIOChannel * source, GIOCondition cond, APP_STATE_T * state)
handle_output_frame	omx/gstomxvideoenc.h	/^  GstFlowReturn       (*handle_output_frame) (GstOMXVideoEnc * self, GstOMXPort * port, GstOMXBuffer * buffer, GstVideoCodecFrame * frame);$/;"	m	struct:_GstOMXVideoEncClass	access:public
handle_queued_objects	examples/egl/testegl.c	/^handle_queued_objects (APP_STATE_T * state)$/;"	f	file:	signature:(APP_STATE_T * state)
header	omx/gstomxtheoradec.h	/^  GstBuffer *header;$/;"	m	struct:_GstOMXTheoraDec	access:public
headers	omx/gstomxh264enc.h	/^  GList *headers;$/;"	m	struct:_GstOMXH264Enc	access:public
iec61937	omx/gstomxaudiosink.h	/^  gboolean iec61937;$/;"	m	struct:_GstOMXAudioSink	access:public
image	omx/openmax/OMX_Component.h	/^        OMX_IMAGE_PORTDEFINITIONTYPE image;$/;"	m	union:OMX_PARAM_PORTDEFINITIONTYPE::__anon33	access:public
in_port	omx/gstomxaudiosink.h	/^  GstOMXPort *in_port, *out_port;$/;"	m	struct:_GstOMXAudioSink	access:public
in_port_index	omx/gstomx.h	/^  guint32 in_port_index, out_port_index;$/;"	m	struct:_GstOMXClassData	access:public
in_port_pool	omx/gstomxaudiodec.h	/^  GstBufferPool *in_port_pool, *out_port_pool;$/;"	m	struct:_GstOMXAudioDec	access:public
in_port_pool	omx/gstomxvideodec.h	/^  GstBufferPool *in_port_pool, *out_port_pool;$/;"	m	struct:_GstOMXVideoDec	access:public
inc_and_wrap_angle	examples/egl/testegl.c	/^inc_and_wrap_angle (GLfloat angle, GLfloat angle_inc)$/;"	f	file:	signature:(GLfloat angle, GLfloat angle_inc)
inc_and_wrap_angle	examples/egl/testegl.c	/^static GLfloat inc_and_wrap_angle (GLfloat angle, GLfloat angle_inc);$/;"	p	file:	signature:(GLfloat angle, GLfloat angle_inc)
index	omx/gstomx.h	/^  guint32 index;$/;"	m	struct:_GstOMXPort	access:public
info	omx/gstomxaudiodec.h	/^  GstAudioInfo info;$/;"	m	struct:_GstOMXAudioDec	access:public
init	omx/gstomx.h	/^  OMX_ERRORTYPE (*init) (void);$/;"	m	struct:_GstOMXCore	access:public
init_intercom	examples/egl/testegl.c	/^init_intercom (APP_STATE_T * state)$/;"	f	file:	signature:(APP_STATE_T * state)
init_model_proj	examples/egl/testegl.c	/^init_model_proj (APP_STATE_T * state)$/;"	f	file:	signature:(APP_STATE_T * state)
init_model_proj	examples/egl/testegl.c	/^static void init_model_proj (APP_STATE_T * state);$/;"	p	file:	signature:(APP_STATE_T * state)
init_ogl	examples/egl/testegl.c	/^init_ogl (APP_STATE_T * state)$/;"	f	file:	signature:(APP_STATE_T * state)
init_ogl	examples/egl/testegl.c	/^static void init_ogl (APP_STATE_T * state);$/;"	p	file:	signature:(APP_STATE_T * state)
init_parse_launch_player	examples/egl/testegl.c	/^init_parse_launch_player (APP_STATE_T * state, const gchar * spipeline)$/;"	f	file:	signature:(APP_STATE_T * state, const gchar * spipeline)
init_playbin_player	examples/egl/testegl.c	/^init_playbin_player (APP_STATE_T * state, const gchar * uri)$/;"	f	file:	signature:(APP_STATE_T * state, const gchar * uri)
init_textures	examples/egl/testegl.c	/^init_textures (APP_STATE_T * state, GstBuffer * buffer)$/;"	f	file:	signature:(APP_STATE_T * state, GstBuffer * buffer)
init_textures	examples/egl/testegl.c	/^static void init_textures (APP_STATE_T * state, GstBuffer * buffer);$/;"	p	file:	signature:(APP_STATE_T * state, GstBuffer * buffer)
inline_sps_pps_headers	omx/gstomxh264enc.h	/^  gboolean inline_sps_pps_headers;$/;"	m	struct:_GstOMXH264Enc	access:public
input_state	omx/gstomxvideodec.h	/^  GstVideoCodecState *input_state;$/;"	m	struct:_GstOMXVideoDec	access:public
input_state	omx/gstomxvideoenc.h	/^  GstVideoCodecState *input_state;$/;"	m	struct:_GstOMXVideoEnc	access:public
install_git_hooks	common/gst-autogen.sh	/^install_git_hooks ()$/;"	f
int16	omx/gstomxaudiosink.c	/^transform_3_4 (int16);$/;"	v
int16	omx/gstomxaudiosink.c	/^transform_5_8 (int16);$/;"	v
int16	omx/gstomxaudiosink.c	/^transform_6_8 (int16);$/;"	v
int16	omx/gstomxaudiosink.c	/^transform_7_8 (int16);$/;"	v
int32	omx/gstomxaudiosink.c	/^transform_3_4 (int32);$/;"	v
int32	omx/gstomxaudiosink.c	/^transform_5_8 (int32);$/;"	v
int32	omx/gstomxaudiosink.c	/^transform_6_8 (int32);$/;"	v
int32	omx/gstomxaudiosink.c	/^transform_7_8 (int32);$/;"	v
interval_intraframes	omx/gstomxh264enc.h	/^  guint32 interval_intraframes;$/;"	m	struct:_GstOMXH264Enc	access:public
is_float	omx/gstomxaudiosink.h	/^  gboolean is_float;$/;"	m	struct:_GstOMXAudioSink	access:public
is_format_change	omx/gstomxaudiodec.h	/^  gboolean (*is_format_change) (GstOMXAudioDec * self, GstOMXPort * port, GstCaps * caps);$/;"	m	struct:_GstOMXAudioDecClass	access:public
is_format_change	omx/gstomxvideodec.h	/^  gboolean (*is_format_change) (GstOMXVideoDec * self, GstOMXPort * port, GstVideoCodecState * state);$/;"	m	struct:_GstOMXVideoDecClass	access:public
is_signed	omx/gstomxaudiosink.h	/^  gboolean is_signed;$/;"	m	struct:_GstOMXAudioSink	access:public
jpeg_data	omx/gstomx.h	/^    void *jpeg_data;                    \/* JPEG data *\/$/;"	m	struct:__anon2	access:public
jpeg_size	omx/gstomx.h	/^    int jpeg_size;                      \/* JPEG size *\/$/;"	m	struct:__anon2	access:public
last_buffer	examples/egl/testegl.c	/^  GstBuffer *last_buffer;$/;"	m	struct:__anon37	file:	access:public
last_error	omx/gstomx.h	/^  OMX_ERRORTYPE last_error;$/;"	m	struct:_GstOMXComponent	access:public
last_upstream_ts	omx/gstomxaudiodec.h	/^  GstClockTime last_upstream_ts;$/;"	m	struct:_GstOMXAudioDec	access:public
last_upstream_ts	omx/gstomxaudioenc.h	/^  GstClockTime last_upstream_ts;$/;"	m	struct:_GstOMXAudioEnc	access:public
last_upstream_ts	omx/gstomxvideodec.h	/^  GstClockTime last_upstream_ts;$/;"	m	struct:_GstOMXVideoDec	access:public
last_upstream_ts	omx/gstomxvideoenc.h	/^  GstClockTime last_upstream_ts;$/;"	m	struct:_GstOMXVideoEnc	access:public
lock	omx/gstomx.h	/^  GMutex lock;$/;"	m	struct:_GstOMXComponent	access:public
lock	omx/gstomx.h	/^  GMutex lock;$/;"	m	struct:_GstOMXCore	access:public
lock	omx/gstomxaudiosink.h	/^  GMutex lock;$/;"	m	struct:_GstOMXAudioSink	access:public
m	examples/egl/testegl.c	/^  GLfloat m[4][4];$/;"	m	struct:__anon36	file:	access:public
mBo	omx/gstomx.h	/^   tbm_bo  mBo;$/;"	m	struct:_TBMBuffer	access:public
mBufFD	omx/gstomx.h	/^   OMX_U32 mBufFD;$/;"	m	struct:_TBMBuffer	access:public
mPtr	omx/gstomx.h	/^   OMX_PTR mPtr;$/;"	m	struct:_TBMBuffer	access:public
main	examples/egl/testegl.c	/^main (int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	tools/listcomponents.c	/^main (gint argc, gchar ** argv)$/;"	f	signature:(gint argc, gchar ** argv)
main_loop	examples/egl/testegl.c	/^  GMainLoop *main_loop;$/;"	m	struct:__anon37	file:	access:public
map_adts_sample_index	omx/gstomxaacenc.c	/^map_adts_sample_index (guint32 srate)$/;"	f	file:	signature:(guint32 srate)
mem	omx/gstomxbufferpool.c	/^  GstMemory mem;$/;"	m	struct:_GstOMXMemory	file:	access:public
messages	omx/gstomx.h	/^  GQueue messages; \/* Queue of GstOMXMessages *\/$/;"	m	struct:_GstOMXComponent	access:public
messages_cond	omx/gstomx.h	/^  GCond messages_cond;$/;"	m	struct:_GstOMXComponent	access:public
messages_lock	omx/gstomx.h	/^  GMutex messages_lock;$/;"	m	struct:_GstOMXComponent	access:public
modelview	examples/egl/testegl.c	/^  GstGLMatrix modelview;$/;"	m	struct:__anon37	file:	access:public
module	omx/gstomx.h	/^  GModule *module;$/;"	m	struct:_GstOMXCore	access:public
mute	omx/gstomxaudiosink.h	/^  gboolean mute;$/;"	m	struct:_GstOMXAudioSink	access:public
nAACERtools	omx/openmax/OMX_Audio.h	/^    OMX_U32 nAACERtools;           \/**< MPEG-4 AAC error resilience tool usage *\/$/;"	m	struct:OMX_AUDIO_PARAM_AACPROFILETYPE	access:public
nAACtools	omx/openmax/OMX_Audio.h	/^    OMX_U32 nAACtools;             \/**< AAC tool usage *\/$/;"	m	struct:OMX_AUDIO_PARAM_AACPROFILETYPE	access:public
nARGBColor	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nARGBColor;$/;"	m	struct:OMX_CONFIG_COLORKEYTYPE	access:public
nARGBMask	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nARGBMask;$/;"	m	struct:OMX_CONFIG_COLORKEYTYPE	access:public
nAirMBs	omx/openmax/OMX_Video.h	/^    OMX_U32 nAirMBs;$/;"	m	struct:OMX_VIDEO_PARAM_INTRAREFRESHTYPE	access:public
nAirRef	omx/openmax/OMX_Video.h	/^    OMX_U32 nAirRef;$/;"	m	struct:OMX_VIDEO_PARAM_INTRAREFRESHTYPE	access:public
nAllocLen	omx/gstomx.h	/^   OMX_U32 nAllocLen;$/;"	m	struct:_TBMBuffer	access:public
nAllocLen	omx/openmax/OMX_Core.h	/^    OMX_U32 nAllocLen;          \/**< size of the buffer allocated, in bytes *\/$/;"	m	struct:OMX_BUFFERHEADERTYPE	access:public
nAllowedPictureTypes	omx/openmax/OMX_Video.h	/^    OMX_U32 nAllowedPictureTypes;  $/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE	access:public
nAllowedPictureTypes	omx/openmax/OMX_Video.h	/^    OMX_U32 nAllowedPictureTypes;$/;"	m	struct:OMX_VIDEO_PARAM_H263TYPE	access:public
nAllowedPictureTypes	omx/openmax/OMX_Video.h	/^    OMX_U32 nAllowedPictureTypes;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG4TYPE	access:public
nAlpha	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nAlpha;$/;"	m	struct:OMX_CONFIG_PLANEBLENDTYPE	access:public
nApertureFNumber	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nApertureFNumber;     \/**< e.g. nApertureFNumber = 2 implies "f\/2" - Q16 format *\/$/;"	m	struct:OMX_CONFIG_EXPOSUREVALUETYPE	access:public
nAudioBandWidth	omx/openmax/OMX_Audio.h	/^    OMX_U32 nAudioBandWidth;       \/**< Audio band width (in Hz) to which an encoder should$/;"	m	struct:OMX_AUDIO_PARAM_AACPROFILETYPE	access:public
nAudioBandWidth	omx/openmax/OMX_Audio.h	/^    OMX_U32 nAudioBandWidth;       \/**< Audio band width (in Hz) to which an encoder should$/;"	m	struct:OMX_AUDIO_PARAM_MP3TYPE	access:public
nAudioBandWidth	omx/openmax/OMX_Audio.h	/^    OMX_U32 nAudioBandWidth;  \/**< Audio band width (in Hz) to which an encoder should$/;"	m	struct:OMX_AUDIO_PARAM_VORBISTYPE	access:public
nBFrames	omx/openmax/OMX_Video.h	/^    OMX_U32 nBFrames;        $/;"	m	struct:OMX_VIDEO_PARAM_MPEG2TYPE	access:public
nBFrames	omx/openmax/OMX_Video.h	/^    OMX_U32 nBFrames;     $/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE	access:public
nBFrames	omx/openmax/OMX_Video.h	/^    OMX_U32 nBFrames;$/;"	m	struct:OMX_VIDEO_PARAM_H263TYPE	access:public
nBFrames	omx/openmax/OMX_Video.h	/^    OMX_U32 nBFrames;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG4TYPE	access:public
nBacklight	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nBacklight;$/;"	m	struct:OMX_CONFIG_BACKLIGHTTYPE	access:public
nBalance	omx/openmax/OMX_Audio.h	/^    OMX_S32 nBalance;           \/**< balance setting for this port $/;"	m	struct:OMX_AUDIO_CONFIG_BALANCETYPE	access:public
nBass	omx/openmax/OMX_Audio.h	/^    OMX_S32 nBass;             \/**< bass setting for the port, as a $/;"	m	struct:OMX_AUDIO_CONFIG_BASSTYPE	access:public
nBitPerSample	omx/openmax/OMX_Audio.h	/^    OMX_U32 nBitPerSample;            \/**< Bit per sample *\/ $/;"	m	struct:OMX_AUDIO_PARAM_PCMMODETYPE	access:public
nBitPool	omx/openmax/OMX_Audio.h	/^    OMX_U32 nBitPool;          \/**< Bitpool value *\/$/;"	m	struct:OMX_AUDIO_PARAM_SBCTYPE	access:public
nBitRate	omx/openmax/OMX_Audio.h	/^    OMX_U32 nBitRate;                       \/**< Bit rate read only field *\/$/;"	m	struct:OMX_AUDIO_PARAM_AMRTYPE	access:public
nBitRate	omx/openmax/OMX_Audio.h	/^    OMX_U32 nBitRate;              \/**< Bit rate of the input data.  Use 0 for variable$/;"	m	struct:OMX_AUDIO_PARAM_AACPROFILETYPE	access:public
nBitRate	omx/openmax/OMX_Audio.h	/^    OMX_U32 nBitRate;              \/**< Bit rate of the input data.  Use 0 for variable$/;"	m	struct:OMX_AUDIO_PARAM_MP3TYPE	access:public
nBitRate	omx/openmax/OMX_Audio.h	/^    OMX_U32 nBitRate;             \/**< Bit rate of the input data.  Use 0 for variable$/;"	m	struct:OMX_AUDIO_PARAM_QCELP8TYPE	access:public
nBitRate	omx/openmax/OMX_Audio.h	/^    OMX_U32 nBitRate;          \/**< Bit rate of the input data.  Use 0 for variable$/;"	m	struct:OMX_AUDIO_PARAM_SBCTYPE	access:public
nBitRate	omx/openmax/OMX_Audio.h	/^    OMX_U32 nBitRate;         \/**< Bit rate of the encoded data data.  Use 0 for variable$/;"	m	struct:OMX_AUDIO_PARAM_VORBISTYPE	access:public
nBitRate	omx/openmax/OMX_Audio.h	/^    OMX_U32 nBitRate;         \/**< Bit rate of the input data.  Use 0 for variable$/;"	m	struct:OMX_AUDIO_PARAM_WMATYPE	access:public
nBitrate	omx/openmax/OMX_Video.h	/^    OMX_U32 nBitrate;$/;"	m	struct:OMX_VIDEO_PORTDEFINITIONTYPE	access:public
nBitsPerFrame	omx/openmax/OMX_Audio.h	/^    OMX_U32 nBitsPerFrame;      \/**< is the value for bits per frame  *\/ $/;"	m	struct:OMX_AUDIO_PARAM_RATYPE	access:public
nBitsPerPixel	omx/openmax/OMX_Video.h	/^    OMX_U16 nBitsPerPixel;$/;"	m	struct:OMX_VIDEO_PARAM_RVTYPE	access:public
nBitsPerSample	omx/openmax/OMX_Audio.h	/^    OMX_U32 nBitsPerSample;     \/**< Number of bits in each sample *\/ $/;"	m	struct:OMX_AUDIO_PARAM_ADPCMTYPE	access:public
nBitstreamFlags	omx/openmax/OMX_Video.h	/^    OMX_U32 nBitstreamFlags;$/;"	m	struct:OMX_VIDEO_PARAM_RVTYPE	access:public
nBitstreamVersion	omx/openmax/OMX_Video.h	/^    OMX_U32 nBitstreamVersion;$/;"	m	struct:OMX_VIDEO_PARAM_RVTYPE	access:public
nBlockAlign	omx/openmax/OMX_Audio.h	/^    OMX_U16 nBlockAlign;      \/**< is the block alignment, or block size, in bytes of the audio codec *\/$/;"	m	struct:OMX_AUDIO_PARAM_WMATYPE	access:public
nBlocks	omx/openmax/OMX_Audio.h	/^    OMX_U32 nBlocks;           \/**< Number of blocks *\/$/;"	m	struct:OMX_AUDIO_PARAM_SBCTYPE	access:public
nBrightness	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nBrightness;$/;"	m	struct:OMX_CONFIG_BRIGHTNESSTYPE	access:public
nBufferAlignment	omx/openmax/OMX_Component.h	/^    OMX_U32 nBufferAlignment;$/;"	m	struct:OMX_PARAM_PORTDEFINITIONTYPE	access:public
nBufferCountActual	omx/openmax/OMX_Component.h	/^    OMX_U32 nBufferCountActual;    \/**< The actual number of buffers allocated on this port *\/$/;"	m	struct:OMX_PARAM_PORTDEFINITIONTYPE	access:public
nBufferCountMin	omx/openmax/OMX_Component.h	/^    OMX_U32 nBufferCountMin;       \/**< The minimum number of buffers this port requires *\/$/;"	m	struct:OMX_PARAM_PORTDEFINITIONTYPE	access:public
nBufferSize	omx/openmax/OMX_Component.h	/^    OMX_U32 nBufferSize;           \/**< Size, in bytes, for buffers to be used for this channel *\/$/;"	m	struct:OMX_PARAM_PORTDEFINITIONTYPE	access:public
nCabacInitIdc	omx/openmax/OMX_Video.h	/^	OMX_U32 nCabacInitIdc;$/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE	access:public
nChannel	omx/openmax/OMX_Audio.h	/^    OMX_U32 nChannel;           \/**< Valid channel values range from 1 to 16 *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDISOUNDBANKPROGRAMTYPE	access:public
nChannel	omx/openmax/OMX_Audio.h	/^    OMX_U32 nChannel;           \/**< channel to select from 0 to N-1, $/;"	m	struct:OMX_AUDIO_CONFIG_CHANNELMUTETYPE	access:public
nChannel	omx/openmax/OMX_Audio.h	/^    OMX_U32 nChannel;           \/**< channel to select from 0 to N-1, $/;"	m	struct:OMX_AUDIO_CONFIG_CHANNELVOLUMETYPE	access:public
nChannelMuteMask	omx/openmax/OMX_Audio.h	/^    OMX_U16 nChannelMuteMask;     \/**< 16 bit mask for channel mute status *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDICONTROLTYPE	access:public
nChannelSoloMask	omx/openmax/OMX_Audio.h	/^    OMX_U16 nChannelSoloMask;     \/**< 16 bit mask for channel solo status *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDICONTROLTYPE	access:public
nChannels	omx/openmax/OMX_Audio.h	/^    OMX_U16 nChannels;        \/**< Number of channels *\/$/;"	m	struct:OMX_AUDIO_PARAM_WMATYPE	access:public
nChannels	omx/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;                      \/**< Number of channels *\/$/;"	m	struct:OMX_AUDIO_PARAM_AMRTYPE	access:public
nChannels	omx/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;                \/**< Number of channels (e.g. 2 for stereo) *\/ $/;"	m	struct:OMX_AUDIO_PARAM_PCMMODETYPE	access:public
nChannels	omx/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;             \/**< Number of channels *\/$/;"	m	struct:OMX_AUDIO_PARAM_AACPROFILETYPE	access:public
nChannels	omx/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;             \/**< Number of channels *\/$/;"	m	struct:OMX_AUDIO_PARAM_MP3TYPE	access:public
nChannels	omx/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;            \/**< Number of channels in the data stream (not $/;"	m	struct:OMX_AUDIO_PARAM_G723TYPE	access:public
nChannels	omx/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;            \/**< Number of channels in the data stream (not$/;"	m	struct:OMX_AUDIO_PARAM_EVRCTYPE	access:public
nChannels	omx/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;            \/**< Number of channels in the data stream (not$/;"	m	struct:OMX_AUDIO_PARAM_PDCEFRTYPE	access:public
nChannels	omx/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;            \/**< Number of channels in the data stream (not$/;"	m	struct:OMX_AUDIO_PARAM_PDCFRTYPE	access:public
nChannels	omx/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;            \/**< Number of channels in the data stream (not$/;"	m	struct:OMX_AUDIO_PARAM_PDCHRTYPE	access:public
nChannels	omx/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;            \/**< Number of channels in the data stream (not$/;"	m	struct:OMX_AUDIO_PARAM_QCELP13TYPE	access:public
nChannels	omx/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;            \/**< Number of channels in the data stream (not$/;"	m	struct:OMX_AUDIO_PARAM_QCELP8TYPE	access:public
nChannels	omx/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;            \/**< Number of channels in the data stream (not$/;"	m	struct:OMX_AUDIO_PARAM_SMVTYPE	access:public
nChannels	omx/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;            \/**< Number of channels in the data stream (not$/;"	m	struct:OMX_AUDIO_PARAM_TDMAEFRTYPE	access:public
nChannels	omx/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;            \/**< Number of channels in the data stream (not$/;"	m	struct:OMX_AUDIO_PARAM_TDMAFRTYPE	access:public
nChannels	omx/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;          \/**< Number of channels *\/ $/;"	m	struct:OMX_AUDIO_PARAM_RATYPE	access:public
nChannels	omx/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;          \/**< Number of channels in the data stream (not $/;"	m	struct:OMX_AUDIO_PARAM_ADPCMTYPE	access:public
nChannels	omx/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;          \/**< Number of channels in the data stream (not $/;"	m	struct:OMX_AUDIO_PARAM_G726TYPE	access:public
nChannels	omx/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;         \/**< Number of channels *\/$/;"	m	struct:OMX_AUDIO_PARAM_SBCTYPE	access:public
nChannels	omx/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;        \/**< Number of channels *\/$/;"	m	struct:OMX_AUDIO_PARAM_VORBISTYPE	access:public
nChannels	omx/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;        \/**< Number of channels in the data stream (not$/;"	m	struct:OMX_AUDIO_PARAM_G729TYPE	access:public
nCirMBs	omx/openmax/OMX_Video.h	/^    OMX_U32 nCirMBs;$/;"	m	struct:OMX_VIDEO_PARAM_INTRAREFRESHTYPE	access:public
nClientPrivate	omx/openmax/OMX_Other.h	/^    OMX_U32 nClientPrivate;         \/**< Client private data to disabiguate this media time $/;"	m	struct:OMX_TIME_MEDIATIMETYPE	access:public
nContrast	omx/openmax/OMX_IVCommon.h	/^    OMX_S32 nContrast;$/;"	m	struct:OMX_CONFIG_CONTRASTTYPE	access:public
nCouplingQuantBits	omx/openmax/OMX_Audio.h	/^    OMX_U32 nCouplingQuantBits; \/**< is the number of coupling quantization bits in the stream *\/ $/;"	m	struct:OMX_AUDIO_PARAM_RATYPE	access:public
nCouplingStartRegion	omx/openmax/OMX_Audio.h	/^    OMX_U32 nCouplingStartRegion;   \/**< is the coupling start region in the stream  *\/ $/;"	m	struct:OMX_AUDIO_PARAM_RATYPE	access:public
nCustomizedU	omx/openmax/OMX_IVCommon.h	/^    OMX_U8 nCustomizedU;$/;"	m	struct:OMX_CONFIG_COLORENHANCEMENTTYPE	access:public
nCustomizedV	omx/openmax/OMX_IVCommon.h	/^    OMX_U8 nCustomizedV;$/;"	m	struct:OMX_CONFIG_COLORENHANCEMENTTYPE	access:public
nDLSIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nDLSIndex;        \/**< DLS file index to be loaded *\/$/;"	m	struct:OMX_AUDIO_PARAM_MIDILOADUSERSOUNDTYPE	access:public
nDLSSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nDLSSize;         \/**< Size in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_MIDILOADUSERSOUNDTYPE	access:public
nData	omx/openmax/OMX_Audio.h	/^    OMX_U8 nData[1];          \/**< array of one or more bytes of meta data $/;"	m	struct:OMX_AUDIO_CONFIG_MIDIMETAEVENTDATATYPE	access:public
nDataSize	omx/openmax/OMX_Core.h	/^    OMX_U32 nDataSize;   \/* Size of the supporting data to follow *\/$/;"	m	struct:OMX_OTHER_EXTRADATATYPE	access:public
nDecayHighFreqRatio	omx/openmax/OMX_Audio.h	/^    OMX_BU32 nDecayHighFreqRatio; \/**< Ratio of high frequency decay time relative $/;"	m	struct:OMX_AUDIO_CONFIG_REVERBERATIONTYPE	access:public
nDensity	omx/openmax/OMX_Audio.h	/^    OMX_U32 nDensity;             \/**< Modal density in the late reverberation decay,$/;"	m	struct:OMX_AUDIO_CONFIG_REVERBERATIONTYPE	access:public
nDepth	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nDepth;$/;"	m	struct:OMX_CONFIG_PLANEBLENDTYPE	access:public
nDiffusion	omx/openmax/OMX_Audio.h	/^    OMX_U32 nDiffusion;           \/**< Echo density in the late reverberation decay,$/;"	m	struct:OMX_AUDIO_CONFIG_REVERBERATIONTYPE	access:public
nDuration	omx/openmax/OMX_Audio.h	/^    OMX_U32 nDuration;          \/**< The length of the currently open MIDI resource $/;"	m	struct:OMX_AUDIO_CONFIG_MIDISTATUSTYPE	access:public
nEncodeBitrate	omx/openmax/OMX_Video.h	/^    OMX_U32 nEncodeBitrate;                 $/;"	m	struct:OMX_VIDEO_CONFIG_BITRATETYPE	access:public
nEncodeOptions	omx/openmax/OMX_Audio.h	/^    OMX_U16 nEncodeOptions;   \/**< WMA Type-specific data *\/$/;"	m	struct:OMX_AUDIO_PARAM_WMATYPE	access:public
nErrMapSize	omx/openmax/OMX_Video.h	/^    OMX_U32 nErrMapSize;           \/* Size of the Error Map in bytes *\/$/;"	m	struct:OMX_CONFIG_MACROBLOCKERRORMAPTYPE	access:public
nFeedback	omx/openmax/OMX_Audio.h	/^    OMX_BU32 nFeedback;        \/**< Feedback from chorus output to input in percentage *\/$/;"	m	struct:OMX_AUDIO_CONFIG_CHORUSTYPE	access:public
nFileSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nFileSize;             \/**< size of the MIDI file in bytes, where the entire $/;"	m	struct:OMX_AUDIO_PARAM_MIDITYPE	access:public
nFilledLen	omx/openmax/OMX_Core.h	/^    OMX_U32 nFilledLen;         \/**< number of bytes currently in the $/;"	m	struct:OMX_BUFFERHEADERTYPE	access:public
nFirstGOB	omx/openmax/OMX_Video.h	/^    OMX_U32 nFirstGOB;                            $/;"	m	struct:OMX_VIDEO_PARAM_VIDEOFASTUPDATETYPE	access:public
nFirstMB	omx/openmax/OMX_Video.h	/^    OMX_U32 nFirstMB;                            $/;"	m	struct:OMX_VIDEO_PARAM_VIDEOFASTUPDATETYPE	access:public
nFlags	omx/openmax/OMX_Core.h	/^  OMX_U32     nFlags;           \/**< buffer specific flags *\/$/;"	m	struct:OMX_BUFFERHEADERTYPE	access:public
nFocusStepIndex	omx/openmax/OMX_Image.h	/^    OMX_U32 nFocusStepIndex;$/;"	m	struct:OMX_IMAGE_CONFIG_FOCUSCONTROLTYPE	access:public
nFocusSteps	omx/openmax/OMX_Image.h	/^    OMX_U32 nFocusSteps;$/;"	m	struct:OMX_IMAGE_CONFIG_FOCUSCONTROLTYPE	access:public
nFrameHeight	omx/openmax/OMX_Image.h	/^    OMX_U32 nFrameHeight;$/;"	m	struct:OMX_IMAGE_PORTDEFINITIONTYPE	access:public
nFrameHeight	omx/openmax/OMX_Video.h	/^    OMX_U32 nFrameHeight;$/;"	m	struct:OMX_VIDEO_PORTDEFINITIONTYPE	access:public
nFrameLength	omx/openmax/OMX_Audio.h	/^    OMX_U32 nFrameLength;          \/**< Frame length (in audio samples per channel) of the codec.$/;"	m	struct:OMX_AUDIO_PARAM_AACPROFILETYPE	access:public
nFrameLimit	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nFrameLimit;      \/**< Limit on number of frames emitted during a capture (only$/;"	m	struct:OMX_CONFIG_CAPTUREMODETYPE	access:public
nFrameRate	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nFrameRate;$/;"	m	struct:OMX_PARAM_SENSORMODETYPE	access:public
nFrameRate	omx/openmax/OMX_Video.h	/^    OMX_U32 nFrameRate;$/;"	m	struct:OMX_VIDEO_PARAM_RVTYPE	access:public
nFrameWidth	omx/openmax/OMX_Image.h	/^    OMX_U32 nFrameWidth; $/;"	m	struct:OMX_IMAGE_PORTDEFINITIONTYPE	access:public
nFrameWidth	omx/openmax/OMX_Video.h	/^    OMX_U32 nFrameWidth;$/;"	m	struct:OMX_VIDEO_PORTDEFINITIONTYPE	access:public
nGOBHeaderInterval	omx/openmax/OMX_Video.h	/^    OMX_U32 nGOBHeaderInterval;$/;"	m	struct:OMX_VIDEO_PARAM_H263TYPE	access:public
nGamma	omx/openmax/OMX_IVCommon.h	/^    OMX_S32 nGamma;$/;"	m	struct:OMX_CONFIG_GAMMATYPE	access:public
nGroupID	omx/openmax/OMX_Core.h	/^ OMX_U32 nGroupID;                  \/**< ID of the component group *\/$/;"	m	struct:OMX_PRIORITYMGMTTYPE	access:public
nGroupPriority	omx/openmax/OMX_Core.h	/^ OMX_U32 nGroupPriority;            \/**< Priority of the component group *\/$/;"	m	struct:OMX_PRIORITYMGMTTYPE	access:public
nHeaderExtension	omx/openmax/OMX_Video.h	/^    OMX_U32 nHeaderExtension;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG4TYPE	access:public
nHeight	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nHeight;$/;"	m	struct:OMX_CONFIG_RECTTYPE	access:public
nHeight	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nHeight;$/;"	m	struct:OMX_FRAMESIZETYPE	access:public
nHighPart	omx/openmax/OMX_Types.h	/^    OMX_U32 nHighPart;   \/** high bits of the signed 64 bit tick value *\/$/;"	m	struct:OMX_TICKS	access:public
nHuffmanTable	omx/openmax/OMX_Image.h	/^    OMX_U8 nHuffmanTable[256];$/;"	m	struct:OMX_IMAGE_PARAM_HUFFMANTTABLETYPE	access:public
nIDCVLCThreshold	omx/openmax/OMX_Video.h	/^    OMX_U32 nIDCVLCThreshold;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG4TYPE	access:public
nIDProgram	omx/openmax/OMX_Audio.h	/^    OMX_U16 nIDProgram;         \/**< Valid program ID range is 1 to 128 *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDISOUNDBANKPROGRAMTYPE	access:public
nIDRPeriod	omx/openmax/OMX_Video.h	/^    OMX_U32 nIDRPeriod;$/;"	m	struct:OMX_VIDEO_CONFIG_AVCINTRAPERIOD	access:public
nIDSoundBank	omx/openmax/OMX_Audio.h	/^    OMX_U16 nIDSoundBank;       \/**< Sound bank ID *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDISOUNDBANKPROGRAMTYPE	access:public
nIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nIndex;                 \/**< Indicates the enumeration index for the format from 0x0 to N-1 *\/$/;"	m	struct:OMX_AUDIO_PARAM_PORTFORMATTYPE	access:public
nIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nIndex;           \/**< Index of Meta Event *\/ $/;"	m	struct:OMX_AUDIO_CONFIG_MIDIMETAEVENTDATATYPE	access:public
nIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nIndex;           \/**< Index of Meta Event *\/ $/;"	m	struct:OMX_AUDIO_CONFIG_MIDIMETAEVENTTYPE	access:public
nIndex	omx/openmax/OMX_CoreExt.h	/^    OMX_INDEXTYPE nIndex;       \/**< the index the callback is requested for *\/$/;"	m	struct:OMX_CONFIG_CALLBACKREQUESTTYPE	access:public
nIndex	omx/openmax/OMX_Image.h	/^    OMX_U32 nIndex;$/;"	m	struct:OMX_IMAGE_PARAM_PORTFORMATTYPE	access:public
nIndex	omx/openmax/OMX_Other.h	/^    OMX_U32 nIndex; \/**< Indicates the enumeration index for the format from 0x0 to N-1 *\/$/;"	m	struct:OMX_OTHER_PARAM_PORTFORMATTYPE	access:public
nIndex	omx/openmax/OMX_Video.h	/^    OMX_U32 nIndex;$/;"	m	struct:OMX_VIDEO_PARAM_PORTFORMATTYPE	access:public
nInputPortIndex	omx/openmax/OMX_Core.h	/^  OMX_U32 nInputPortIndex;      \/**< The index of the input port (if any) using$/;"	m	struct:OMX_BUFFERHEADERTYPE	access:public
nInterleavePortIndex	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nInterleavePortIndex;$/;"	m	struct:OMX_PARAM_INTERLEAVETYPE	access:public
nKey	omx/openmax/OMX_Component.h	/^    OMX_U8   nKey [128]; $/;"	m	struct:OMX_PARAM_METADATAFILTERTYPE	access:public
nKey	omx/openmax/OMX_Component.h	/^    OMX_U8 nKey[128];$/;"	m	struct:OMX_CONFIG_METADATAITEMTYPE	access:public
nKeySizeUsed	omx/openmax/OMX_Component.h	/^    OMX_U32 nKeySizeUsed; $/;"	m	struct:OMX_PARAM_METADATAFILTERTYPE	access:public
nKeySizeUsed	omx/openmax/OMX_Component.h	/^    OMX_U8 nKeySizeUsed;$/;"	m	struct:OMX_CONFIG_METADATAITEMTYPE	access:public
nLanguageCountry	omx/openmax/OMX_Component.h	/^    OMX_U8 nLanguageCountry[128];$/;"	m	struct:OMX_PARAM_METADATAFILTERTYPE	access:public
nLanguageCountrySizeUsed	omx/openmax/OMX_Component.h	/^    OMX_U32 nLanguageCountrySizeUsed;$/;"	m	struct:OMX_PARAM_METADATAFILTERTYPE	access:public
nLeft	omx/openmax/OMX_IVCommon.h	/^    OMX_S32 nLeft; $/;"	m	struct:OMX_CONFIG_RECTTYPE	access:public
nLightness	omx/openmax/OMX_IVCommon.h	/^    OMX_S32 nLightness;$/;"	m	struct:OMX_CONFIG_LIGHTNESSTYPE	access:public
nLowPart	omx/openmax/OMX_Types.h	/^    OMX_U32 nLowPart;    \/** low bits of the signed 64 bit tick value *\/$/;"	m	struct:OMX_TICKS	access:public
nMacroblocks	omx/openmax/OMX_Video.h	/^    OMX_U32 nMacroblocks;$/;"	m	struct:OMX_PARAM_MACROBLOCKSTYPE	access:public
nMax	omx/openmax/OMX_Types.h	/^    OMX_S32 nMax;   \/**< maximum for value (i.e. nValue <= nMax) *\/$/;"	m	struct:OMX_BS32	access:public
nMax	omx/openmax/OMX_Types.h	/^    OMX_U32 nMax;   \/**< maximum for value (i.e. nValue <= nMax) *\/$/;"	m	struct:OMX_BU32	access:public
nMaxBitRate	omx/openmax/OMX_Audio.h	/^    OMX_U32 nMaxBitRate;          \/**< maximal rate for the encoder = 1,2,3,4, default = 4 *\/$/;"	m	struct:OMX_AUDIO_PARAM_EVRCTYPE	access:public
nMaxBitRate	omx/openmax/OMX_Audio.h	/^    OMX_U32 nMaxBitRate;          \/**< maximal rate for the encoder = 1,2,3,4, default = 4 *\/$/;"	m	struct:OMX_AUDIO_PARAM_QCELP13TYPE	access:public
nMaxBitRate	omx/openmax/OMX_Audio.h	/^    OMX_U32 nMaxBitRate;          \/**< maximal rate for the encoder = 1,2,3,4, default = 4 *\/$/;"	m	struct:OMX_AUDIO_PARAM_QCELP8TYPE	access:public
nMaxBitRate	omx/openmax/OMX_Audio.h	/^    OMX_U32 nMaxBitRate;          \/**< maximal rate for the encoder = 1,2,3,4, default = 4 ??*\/$/;"	m	struct:OMX_AUDIO_PARAM_SMVTYPE	access:public
nMaxBitRate	omx/openmax/OMX_Audio.h	/^    OMX_U32 nMaxBitRate;      \/**< Sets maximum bitrate (in bps). *\/$/;"	m	struct:OMX_AUDIO_PARAM_VORBISTYPE	access:public
nMaxEncodeFrameSize	omx/openmax/OMX_Video.h	/^    OMX_U32 nMaxEncodeFrameSize;$/;"	m	struct:OMX_VIDEO_PARAM_RVTYPE	access:public
nMaxPacketSize	omx/openmax/OMX_Video.h	/^    OMX_U32 nMaxPacketSize;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG4TYPE	access:public
nMaxPolyphony	omx/openmax/OMX_Audio.h	/^    OMX_U32 nMaxPolyphony;        \/**< Specifies the maximum simultaneous polyphonic $/;"	m	struct:OMX_AUDIO_CONFIG_MIDICONTROLTYPE	access:public
nMediaTimestamp	omx/openmax/OMX_Other.h	/^    OMX_TICKS nMediaTimestamp;      \/**< Media time requested. If no media time was $/;"	m	struct:OMX_TIME_MEDIATIMETYPE	access:public
nMediaTimestamp	omx/openmax/OMX_Other.h	/^    OMX_TICKS nMediaTimestamp;  \/**< Media timestamp requested.*\/ $/;"	m	struct:OMX_TIME_CONFIG_MEDIATIMEREQUESTTYPE	access:public
nMetaEventSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nMetaEventSize;   \/**< size of the Meta Event in bytes *\/ $/;"	m	struct:OMX_AUDIO_CONFIG_MIDIMETAEVENTDATATYPE	access:public
nMetaEventSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nMetaEventSize;   \/**< size of the Meta Event in bytes *\/ $/;"	m	struct:OMX_AUDIO_CONFIG_MIDIMETAEVENTTYPE	access:public
nMetaEventType	omx/openmax/OMX_Audio.h	/^    OMX_U8 nMetaEventType;    \/**< Meta Event Type, 7bits (i.e. 0 - 127) *\/ $/;"	m	struct:OMX_AUDIO_CONFIG_MIDIMETAEVENTTYPE	access:public
nMetadataItemCount	omx/openmax/OMX_Component.h	/^    OMX_U32 nMetadataItemCount;$/;"	m	struct:OMX_CONFIG_METADATAITEMCOUNTTYPE	access:public
nMetadataItemIndex	omx/openmax/OMX_Component.h	/^    OMX_U32 nMetadataItemIndex;  $/;"	m	struct:OMX_CONFIG_METADATAITEMTYPE	access:public
nMidiEventSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nMidiEventSize;   \/**< Size of immediate MIDI events or MIP message in bytes  *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDIIMMEDIATEEVENTTYPE	access:public
nMidiEvents	omx/openmax/OMX_Audio.h	/^    OMX_U8 nMidiEvents[1];    \/**< MIDI event array to be rendered immediately, or an$/;"	m	struct:OMX_AUDIO_CONFIG_MIDIIMMEDIATEEVENTTYPE	access:public
nMin	omx/openmax/OMX_Types.h	/^    OMX_S32 nMin;   \/**< minimum for value (i.e. nValue >= nMin) *\/$/;"	m	struct:OMX_BS32	access:public
nMin	omx/openmax/OMX_Types.h	/^    OMX_U32 nMin;   \/**< minimum for value (i.e. nValue >= nMin) *\/$/;"	m	struct:OMX_BU32	access:public
nMinBitRate	omx/openmax/OMX_Audio.h	/^    OMX_U32 nMinBitRate;          \/**< minmal rate for the encoder = 1,2,3,4, default = 1 *\/$/;"	m	struct:OMX_AUDIO_PARAM_EVRCTYPE	access:public
nMinBitRate	omx/openmax/OMX_Audio.h	/^    OMX_U32 nMinBitRate;          \/**< minmal rate for the encoder = 1,2,3,4, default = 1 *\/$/;"	m	struct:OMX_AUDIO_PARAM_QCELP13TYPE	access:public
nMinBitRate	omx/openmax/OMX_Audio.h	/^    OMX_U32 nMinBitRate;          \/**< minmal rate for the encoder = 1,2,3,4, default = 1 *\/$/;"	m	struct:OMX_AUDIO_PARAM_QCELP8TYPE	access:public
nMinBitRate	omx/openmax/OMX_Audio.h	/^    OMX_U32 nMinBitRate;          \/**< minmal rate for the encoder = 1,2,3,4, default = 1 ??*\/$/;"	m	struct:OMX_AUDIO_PARAM_SMVTYPE	access:public
nMinBitRate	omx/openmax/OMX_Audio.h	/^    OMX_U32 nMinBitRate;      \/**< Sets minimum bitrate (in bps). *\/$/;"	m	struct:OMX_AUDIO_PARAM_VORBISTYPE	access:public
nModulationDepth	omx/openmax/OMX_Audio.h	/^    OMX_U32 nModulationDepth;  \/**< depth of modulation as a percentage of $/;"	m	struct:OMX_AUDIO_CONFIG_CHORUSTYPE	access:public
nNaluBytes	omx/openmax/OMX_Video.h	/^    OMX_U32 nNaluBytes;$/;"	m	struct:OMX_VIDEO_CONFIG_NALSIZE	access:public
nNodeID	omx/openmax/OMX_Component.h	/^    OMX_U32 nNodeID; $/;"	m	struct:OMX_CONFIG_CONTAINERNODEIDTYPE	access:public
nNodeIndex	omx/openmax/OMX_Component.h	/^    OMX_U32 nNodeIndex; $/;"	m	struct:OMX_CONFIG_CONTAINERNODEIDTYPE	access:public
nNumActiveVoices	omx/openmax/OMX_Audio.h	/^    OMX_U32 nNumActiveVoices;   \/**< Number of active voices in the currently playing $/;"	m	struct:OMX_AUDIO_CONFIG_MIDISTATUSTYPE	access:public
nNumMBs	omx/openmax/OMX_Video.h	/^    OMX_U32 nNumMBs;                                  $/;"	m	struct:OMX_VIDEO_PARAM_VIDEOFASTUPDATETYPE	access:public
nNumMetaEvents	omx/openmax/OMX_Audio.h	/^    OMX_U32 nNumMetaEvents;     \/**< Total number of MIDI Meta Events in the currently $/;"	m	struct:OMX_AUDIO_CONFIG_MIDISTATUSTYPE	access:public
nNumNodes	omx/openmax/OMX_Component.h	/^    OMX_U32 nNumNodes;$/;"	m	struct:OMX_CONFIG_CONTAINERNODECOUNTTYPE	access:public
nNumRegions	omx/openmax/OMX_Audio.h	/^    OMX_U32 nNumRegions;        \/**< is the number of regions value *\/ $/;"	m	struct:OMX_AUDIO_PARAM_RATYPE	access:public
nNumRepeat	omx/openmax/OMX_Audio.h	/^    OMX_U32 nNumRepeat;           \/**< Number of times to repeat playback *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDICONTROLTYPE	access:public
nNumSliceGroups	omx/openmax/OMX_Video.h	/^    OMX_U8 nNumSliceGroups;$/;"	m	struct:OMX_VIDEO_PARAM_AVCSLICEFMO	access:public
nNumTracks	omx/openmax/OMX_Audio.h	/^    OMX_U16 nNumTracks;         \/**< Number of MIDI tracks in the file, read only field. $/;"	m	struct:OMX_AUDIO_CONFIG_MIDISTATUSTYPE	access:public
nNumberOfHuffmanCodeOfLength	omx/openmax/OMX_Image.h	/^    OMX_U8 nNumberOfHuffmanCodeOfLength[16];$/;"	m	struct:OMX_IMAGE_PARAM_HUFFMANTTABLETYPE	access:public
nOffset	omx/openmax/OMX_Core.h	/^    OMX_U32 nOffset;            \/**< start offset of valid data in bytes from$/;"	m	struct:OMX_BUFFERHEADERTYPE	access:public
nOffset	omx/openmax/OMX_Other.h	/^    OMX_TICKS nOffset;              \/**< Amount of wall clock time by which this$/;"	m	struct:OMX_TIME_MEDIATIMETYPE	access:public
nOffset	omx/openmax/OMX_Other.h	/^    OMX_TICKS nOffset;          \/**< Amount of wall clock time by which this$/;"	m	struct:OMX_TIME_CONFIG_MEDIATIMEREQUESTTYPE	access:public
nOffset	omx/openmax/OMX_Other.h	/^    OMX_TICKS nOffset;          \/**< Time to offset the media time by $/;"	m	struct:OMX_TIME_CONFIG_CLOCKSTATETYPE	access:public
nOutputPortIndex	omx/openmax/OMX_Core.h	/^  OMX_U32 nOutputPortIndex;     \/**< The index of the output port (if any) using $/;"	m	struct:OMX_BUFFERHEADERTYPE	access:public
nPFrames	omx/openmax/OMX_Video.h	/^    OMX_U32 nPFrames;        $/;"	m	struct:OMX_VIDEO_PARAM_MPEG2TYPE	access:public
nPFrames	omx/openmax/OMX_Video.h	/^    OMX_U32 nPFrames;     $/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE	access:public
nPFrames	omx/openmax/OMX_Video.h	/^    OMX_U32 nPFrames;$/;"	m	struct:OMX_VIDEO_CONFIG_AVCINTRAPERIOD	access:public
nPFrames	omx/openmax/OMX_Video.h	/^    OMX_U32 nPFrames;$/;"	m	struct:OMX_VIDEO_PARAM_H263TYPE	access:public
nPFrames	omx/openmax/OMX_Video.h	/^    OMX_U32 nPFrames;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG4TYPE	access:public
nPaddedHeight	omx/openmax/OMX_Video.h	/^    OMX_U16 nPaddedHeight;$/;"	m	struct:OMX_VIDEO_PARAM_RVTYPE	access:public
nPaddedWidth	omx/openmax/OMX_Video.h	/^    OMX_U16 nPaddedWidth;$/;"	m	struct:OMX_VIDEO_PARAM_RVTYPE	access:public
nParentNodeID	omx/openmax/OMX_Component.h	/^    OMX_U32 nParentNodeID;$/;"	m	struct:OMX_CONFIG_CONTAINERNODECOUNTTYPE	access:public
nParentNodeID	omx/openmax/OMX_Component.h	/^    OMX_U32 nParentNodeID;$/;"	m	struct:OMX_CONFIG_CONTAINERNODEIDTYPE	access:public
nPictureHeaderRepetition	omx/openmax/OMX_Video.h	/^    OMX_U32 nPictureHeaderRepetition;$/;"	m	struct:OMX_VIDEO_PARAM_H263TYPE	access:public
nPortIndex	omx/gstomx.h	/^  OMX_U32 nPortIndex;$/;"	m	struct:_EnableGemBuffersParams	access:public
nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;                     \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_AMRTYPE	access:public
nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;               \/**< port that this structure applies to *\/ $/;"	m	struct:OMX_AUDIO_PARAM_PCMMODETYPE	access:public
nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;             \/**< Indicates which port to set *\/$/;"	m	struct:OMX_AUDIO_PARAM_PORTFORMATTYPE	access:public
nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;            \/**< Port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_AACPROFILETYPE	access:public
nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;            \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_MIDITYPE	access:public
nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;            \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_MP3TYPE	access:public
nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;           \/**< port that this structure applies to *\/ $/;"	m	struct:OMX_AUDIO_PARAM_G723TYPE	access:public
nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;           \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDICONTROLTYPE	access:public
nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;           \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_CONFIG_REVERBERATIONTYPE	access:public
nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;           \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_EVRCTYPE	access:public
nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;           \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_PDCEFRTYPE	access:public
nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;           \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_PDCFRTYPE	access:public
nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;           \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_PDCHRTYPE	access:public
nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;           \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_QCELP13TYPE	access:public
nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;           \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_QCELP8TYPE	access:public
nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;           \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_SMVTYPE	access:public
nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;           \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_TDMAEFRTYPE	access:public
nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;           \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_TDMAFRTYPE	access:public
nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;         \/**< Port index indicating which port to $/;"	m	struct:OMX_AUDIO_CONFIG_BALANCETYPE	access:public
nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;         \/**< Port index indicating which port to $/;"	m	struct:OMX_AUDIO_CONFIG_CHANNELVOLUMETYPE	access:public
nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;         \/**< Port index indicating which port to $/;"	m	struct:OMX_AUDIO_CONFIG_MUTETYPE	access:public
nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;         \/**< Port index indicating which port to $/;"	m	struct:OMX_AUDIO_CONFIG_VOLUMETYPE	access:public
nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;         \/**< Port that this structure applies to *\/ $/;"	m	struct:OMX_AUDIO_PARAM_RATYPE	access:public
nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;         \/**< Port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDISOUNDBANKPROGRAMTYPE	access:public
nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;         \/**< port that this structure applies to *\/ $/;"	m	struct:OMX_AUDIO_PARAM_ADPCMTYPE	access:public
nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;         \/**< port that this structure applies to *\/ $/;"	m	struct:OMX_AUDIO_PARAM_G726TYPE	access:public
nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;         \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_CONFIG_CHANNELMUTETYPE	access:public
nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;         \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDISTATUSTYPE	access:public
nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;        \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_CONFIG_BASSTYPE	access:public
nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;        \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_CONFIG_CHORUSTYPE	access:public
nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;        \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_CONFIG_ECHOCANCELATIONTYPE	access:public
nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;        \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_CONFIG_EQUALIZERTYPE	access:public
nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;        \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_CONFIG_LOUDNESSTYPE	access:public
nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;        \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_CONFIG_NOISEREDUCTIONTYPE	access:public
nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;        \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_CONFIG_STEREOWIDENINGTYPE	access:public
nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;        \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_CONFIG_TREBLETYPE	access:public
nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;        \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_SBCTYPE	access:public
nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;       \/**< Port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDIIMMEDIATEEVENTTYPE	access:public
nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;       \/**< port that this structure applies to *\/ $/;"	m	struct:OMX_AUDIO_CONFIG_MIDIMETAEVENTDATATYPE	access:public
nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;       \/**< port that this structure applies to *\/ $/;"	m	struct:OMX_AUDIO_CONFIG_MIDIMETAEVENTTYPE	access:public
nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;       \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_G729TYPE	access:public
nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;       \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_GSMEFRTYPE	access:public
nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;       \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_GSMFRTYPE	access:public
nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;       \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_GSMHRTYPE	access:public
nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;       \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_MIDILOADUSERSOUNDTYPE	access:public
nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;       \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_VORBISTYPE	access:public
nPortIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;       \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_WMATYPE	access:public
nPortIndex	omx/openmax/OMX_Component.h	/^    OMX_U32 nPortIndex;               \/**< port that this structure applies to *\/ $/;"	m	struct:OMX_PARAM_U32TYPE	access:public
nPortIndex	omx/openmax/OMX_Component.h	/^    OMX_U32 nPortIndex;            \/**< Port number the structure applies to *\/$/;"	m	struct:OMX_PARAM_PORTDEFINITIONTYPE	access:public
nPortIndex	omx/openmax/OMX_Core.h	/^    OMX_U32 nPortIndex; \/**< port that this structure applies to *\/$/;"	m	struct:OMX_PARAM_BUFFERSUPPLIERTYPE	access:public
nPortIndex	omx/openmax/OMX_Core.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_OTHER_EXTRADATATYPE	access:public
nPortIndex	omx/openmax/OMX_CoreExt.h	/^    OMX_U32 nPortIndex;         \/**< port that this structure applies to *\/$/;"	m	struct:OMX_CONFIG_CALLBACKREQUESTTYPE	access:public
nPortIndex	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;         \/**< Port that this struct applies to *\/$/;"	m	struct:OMX_CONFIG_COLORCONVERSIONTYPE	access:public
nPortIndex	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;       \/**< Port that this struct applies to *\/$/;"	m	struct:OMX_CONFIG_SCALEFACTORTYPE	access:public
nPortIndex	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;       \/**< Port that this structure applies to *\/$/;"	m	struct:OMX_CONFIG_DITHERTYPE	access:public
nPortIndex	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;       \/**< Port that this structure applies to *\/$/;"	m	struct:OMX_PARAM_DATAUNITTYPE	access:public
nPortIndex	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;     \/**< Port that this structure applies to *\/$/;"	m	struct:OMX_CONFIG_CAPTUREMODETYPE	access:public
nPortIndex	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex; $/;"	m	struct:OMX_CONFIG_RECTTYPE	access:public
nPortIndex	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_BACKLIGHTTYPE	access:public
nPortIndex	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_BRIGHTNESSTYPE	access:public
nPortIndex	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_COLORBLENDTYPE	access:public
nPortIndex	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_COLORENHANCEMENTTYPE	access:public
nPortIndex	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_COLORKEYTYPE	access:public
nPortIndex	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_CONTRASTTYPE	access:public
nPortIndex	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_EXPOSURECONTROLTYPE	access:public
nPortIndex	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_EXPOSUREVALUETYPE	access:public
nPortIndex	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_FOCUSREGIONTYPE	access:public
nPortIndex	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_FRAMESTABTYPE	access:public
nPortIndex	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_GAMMATYPE	access:public
nPortIndex	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_IMAGEFILTERTYPE	access:public
nPortIndex	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_LIGHTNESSTYPE	access:public
nPortIndex	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_MIRRORTYPE	access:public
nPortIndex	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_PLANEBLENDTYPE	access:public
nPortIndex	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_POINTTYPE	access:public
nPortIndex	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_ROTATIONTYPE	access:public
nPortIndex	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_SATURATIONTYPE	access:public
nPortIndex	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_TRANSITIONEFFECTTYPE	access:public
nPortIndex	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_WHITEBALCONTROLTYPE	access:public
nPortIndex	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_FRAMESIZETYPE	access:public
nPortIndex	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_PARAM_DEBLOCKINGTYPE	access:public
nPortIndex	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_PARAM_FOCUSSTATUSTYPE	access:public
nPortIndex	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_PARAM_INTERLEAVETYPE	access:public
nPortIndex	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_PARAM_SENSORMODETYPE	access:public
nPortIndex	omx/openmax/OMX_Image.h	/^    OMX_U32 nPortIndex;       $/;"	m	struct:OMX_IMAGE_PARAM_QFACTORTYPE	access:public
nPortIndex	omx/openmax/OMX_Image.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_IMAGE_CONFIG_FOCUSCONTROLTYPE	access:public
nPortIndex	omx/openmax/OMX_Image.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_IMAGE_PARAM_FLASHCONTROLTYPE	access:public
nPortIndex	omx/openmax/OMX_Image.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_IMAGE_PARAM_HUFFMANTTABLETYPE	access:public
nPortIndex	omx/openmax/OMX_Image.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_IMAGE_PARAM_PORTFORMATTYPE	access:public
nPortIndex	omx/openmax/OMX_Image.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_IMAGE_PARAM_QUANTIZATIONTABLETYPE	access:public
nPortIndex	omx/openmax/OMX_Other.h	/^    OMX_U32 nPortIndex;         \/**< port that this structure applies to *\/$/;"	m	struct:OMX_TIME_CONFIG_MEDIATIMEREQUESTTYPE	access:public
nPortIndex	omx/openmax/OMX_Other.h	/^    OMX_U32 nPortIndex;     \/**< port that this structure applies to *\/$/;"	m	struct:OMX_TIME_CONFIG_TIMESTAMPTYPE	access:public
nPortIndex	omx/openmax/OMX_Other.h	/^    OMX_U32 nPortIndex; \/**< Indicates which port to set *\/$/;"	m	struct:OMX_OTHER_PARAM_PORTFORMATTYPE	access:public
nPortIndex	omx/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;                     $/;"	m	struct:OMX_VIDEO_CONFIG_BITRATETYPE	access:public
nPortIndex	omx/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;                     $/;"	m	struct:OMX_VIDEO_PARAM_BITRATETYPE	access:public
nPortIndex	omx/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;            $/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE	access:public
nPortIndex	omx/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;       $/;"	m	struct:OMX_VIDEO_PARAM_VBSMCTYPE	access:public
nPortIndex	omx/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;       $/;"	m	struct:OMX_VIDEO_PARAM_VIDEOFASTUPDATETYPE	access:public
nPortIndex	omx/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;      $/;"	m	struct:OMX_VIDEO_PARAM_MPEG2TYPE	access:public
nPortIndex	omx/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_FRAMERATETYPE	access:public
nPortIndex	omx/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_INTRAREFRESHVOPTYPE	access:public
nPortIndex	omx/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_MACROBLOCKERRORMAPTYPE	access:public
nPortIndex	omx/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_MBERRORREPORTINGTYPE	access:public
nPortIndex	omx/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_PARAM_MACROBLOCKSTYPE	access:public
nPortIndex	omx/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_VIDEO_CONFIG_AVCINTRAPERIOD	access:public
nPortIndex	omx/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_VIDEO_CONFIG_NALSIZE	access:public
nPortIndex	omx/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_VIDEO_PARAM_AVCSLICEFMO	access:public
nPortIndex	omx/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_VIDEO_PARAM_ERRORCORRECTIONTYPE	access:public
nPortIndex	omx/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_VIDEO_PARAM_H263TYPE	access:public
nPortIndex	omx/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_VIDEO_PARAM_INTRAREFRESHTYPE	access:public
nPortIndex	omx/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_VIDEO_PARAM_MOTIONVECTORTYPE	access:public
nPortIndex	omx/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG4TYPE	access:public
nPortIndex	omx/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_VIDEO_PARAM_PORTFORMATTYPE	access:public
nPortIndex	omx/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_VIDEO_PARAM_QUANTIZATIONTYPE	access:public
nPortIndex	omx/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_VIDEO_PARAM_RVTYPE	access:public
nPortIndex	omx/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_VIDEO_PARAM_WMVTYPE	access:public
nPortIndex	omx/openmax/OMX_Video.h	/^   OMX_U32 nPortIndex;            $/;"	m	struct:OMX_VIDEO_PARAM_PROFILELEVELTYPE	access:public
nPortIndex	omx/openmax/OMX_VideoExt.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_NALSTREAMFORMATTYPE	access:public
nPorts	omx/openmax/OMX_Core.h	/^    OMX_U32 nPorts;             \/**< The number of ports for this component *\/$/;"	m	struct:OMX_PORT_PARAM_TYPE	access:public
nPosition	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPosition;          \/**< Current Position of the MIDI resource being played $/;"	m	struct:OMX_AUDIO_CONFIG_MIDISTATUSTYPE	access:public
nPosition	omx/openmax/OMX_Audio.h	/^    OMX_U32 nPosition;        \/**< Position of the meta-event in milliseconds *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDIMETAEVENTTYPE	access:public
nProfileIndex	omx/openmax/OMX_Video.h	/^   OMX_U32 nProfileIndex; \/**< Used to query for individual profile support information,$/;"	m	struct:OMX_VIDEO_PARAM_PROFILELEVELTYPE	access:public
nQFactor	omx/openmax/OMX_Image.h	/^    OMX_U32 nQFactor;                                        $/;"	m	struct:OMX_IMAGE_PARAM_QFACTORTYPE	access:public
nQpB	omx/openmax/OMX_Video.h	/^    OMX_U32 nQpB;$/;"	m	struct:OMX_VIDEO_PARAM_QUANTIZATIONTYPE	access:public
nQpI	omx/openmax/OMX_Video.h	/^    OMX_U32 nQpI;$/;"	m	struct:OMX_VIDEO_PARAM_QUANTIZATIONTYPE	access:public
nQpP	omx/openmax/OMX_Video.h	/^    OMX_U32 nQpP;$/;"	m	struct:OMX_VIDEO_PARAM_QUANTIZATIONTYPE	access:public
nQuality	omx/openmax/OMX_Audio.h	/^    OMX_S32 nQuality;		  \/**< Sets encoding quality to n, between -1 (low) and 10 (high).$/;"	m	struct:OMX_AUDIO_PARAM_VORBISTYPE	access:public
nQuantizationMatrix	omx/openmax/OMX_Image.h	/^    OMX_U8 nQuantizationMatrix[64];$/;"	m	struct:OMX_IMAGE_PARAM_QUANTIZATIONTABLETYPE	access:public
nRGBAlphaConstant	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nRGBAlphaConstant;$/;"	m	struct:OMX_CONFIG_COLORBLENDTYPE	access:public
nRefFrames	omx/openmax/OMX_Video.h	/^    OMX_U32 nRefFrames;  $/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE	access:public
nRefIdx10ActiveMinus1	omx/openmax/OMX_Video.h	/^	OMX_U32 nRefIdx10ActiveMinus1;$/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE	access:public
nRefIdx11ActiveMinus1	omx/openmax/OMX_Video.h	/^	OMX_U32 nRefIdx11ActiveMinus1;$/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE	access:public
nResynchMarkerSpacing	omx/openmax/OMX_Video.h	/^    OMX_U32  nResynchMarkerSpacing;$/;"	m	struct:OMX_VIDEO_PARAM_ERRORCORRECTIONTYPE	access:public
nRevision	omx/openmax/OMX_Types.h	/^        OMX_U8 nRevision;       \/**< Revision version accessor element *\/$/;"	m	struct:OMX_VERSIONTYPE::__anon34	access:public
nRotation	omx/openmax/OMX_IVCommon.h	/^    OMX_S32 nRotation; $/;"	m	struct:OMX_CONFIG_ROTATIONTYPE	access:public
nSamplePerFrame	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSamplePerFrame;    \/**< is the value for samples per frame *\/ $/;"	m	struct:OMX_AUDIO_PARAM_RATYPE	access:public
nSampleRate	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSampleRate;           \/**< Sampling rate of the source data.  Use 0 for$/;"	m	struct:OMX_AUDIO_PARAM_AACPROFILETYPE	access:public
nSampleRate	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSampleRate;           \/**< Sampling rate of the source data.  Use 0 for$/;"	m	struct:OMX_AUDIO_PARAM_MP3TYPE	access:public
nSampleRate	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSampleRate;        \/**< Sampling rate of the source data.  Use 0 for $/;"	m	struct:OMX_AUDIO_PARAM_ADPCMTYPE	access:public
nSampleRate	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSampleRate;       \/**< Sampling rate of the source data.  Use 0 for$/;"	m	struct:OMX_AUDIO_PARAM_SBCTYPE	access:public
nSampleRate	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSampleRate;      \/**< Sampling rate of the source data.  Use 0 for$/;"	m	struct:OMX_AUDIO_PARAM_VORBISTYPE	access:public
nSamplingRate	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSamplingRate;            \/**< Sampling rate of the source data.  Use 0 for $/;"	m	struct:OMX_AUDIO_PARAM_PCMMODETYPE	access:public
nSamplingRate	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSamplingRate;      \/**< is the sampling rate of the source data *\/ $/;"	m	struct:OMX_AUDIO_PARAM_RATYPE	access:public
nSamplingRate	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSamplingRate;    \/**< Sampling rate of the source data *\/$/;"	m	struct:OMX_AUDIO_PARAM_WMATYPE	access:public
nSaturation	omx/openmax/OMX_IVCommon.h	/^    OMX_S32 nSaturation;$/;"	m	struct:OMX_CONFIG_SATURATIONTYPE	access:public
nScopeSpecifier	omx/openmax/OMX_Component.h	/^    OMX_U32 nScopeSpecifier;$/;"	m	struct:OMX_CONFIG_METADATAITEMCOUNTTYPE	access:public
nScopeSpecifier	omx/openmax/OMX_Component.h	/^    OMX_U32 nScopeSpecifier;$/;"	m	struct:OMX_CONFIG_METADATAITEMTYPE	access:public
nSensitivity	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nSensitivity;         \/**< e.g. nSensitivity = 100 implies "ISO 100" *\/$/;"	m	struct:OMX_CONFIG_EXPOSUREVALUETYPE	access:public
nShutterSpeedMsec	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nShutterSpeedMsec;    \/**< Shutterspeed in milliseconds *\/ $/;"	m	struct:OMX_CONFIG_EXPOSUREVALUETYPE	access:public
nSize	omx/gstomx.h	/^  OMX_U32 nSize;$/;"	m	struct:_EnableGemBuffersParams	access:public
nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;                          \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_AMRTYPE	access:public
nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;                    \/**< Size of this structure, in Bytes *\/ $/;"	m	struct:OMX_AUDIO_PARAM_PCMMODETYPE	access:public
nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;                  \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_PORTFORMATTYPE	access:public
nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;                 \/**< Size of this structure, in Bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_AACPROFILETYPE	access:public
nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;                 \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_MIDITYPE	access:public
nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;                 \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_MP3TYPE	access:public
nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;                \/**< size of the structure in bytes *\/ $/;"	m	struct:OMX_AUDIO_PARAM_G723TYPE	access:public
nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;                \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDICONTROLTYPE	access:public
nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;                \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_CONFIG_REVERBERATIONTYPE	access:public
nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;                \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_EVRCTYPE	access:public
nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;                \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_PDCEFRTYPE	access:public
nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;                \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_PDCFRTYPE	access:public
nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;                \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_PDCHRTYPE	access:public
nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;                \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_QCELP13TYPE	access:public
nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;                \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_QCELP8TYPE	access:public
nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;                \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_SMVTYPE	access:public
nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;                \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_TDMAEFRTYPE	access:public
nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;                \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_TDMAFRTYPE	access:public
nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;              \/**< Size of this structure, in Bytes *\/ $/;"	m	struct:OMX_AUDIO_PARAM_RATYPE	access:public
nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;              \/**< size of the structure in bytes *\/ $/;"	m	struct:OMX_AUDIO_PARAM_ADPCMTYPE	access:public
nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;              \/**< size of the structure in bytes *\/ $/;"	m	struct:OMX_AUDIO_PARAM_G726TYPE	access:public
nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;              \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_CONFIG_BALANCETYPE	access:public
nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;              \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_CONFIG_CHANNELMUTETYPE	access:public
nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;              \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_CONFIG_CHANNELVOLUMETYPE	access:public
nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;              \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDISOUNDBANKPROGRAMTYPE	access:public
nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;              \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDISTATUSTYPE	access:public
nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;              \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MUTETYPE	access:public
nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;              \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_CONFIG_VOLUMETYPE	access:public
nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;             \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_CONFIG_BASSTYPE	access:public
nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;             \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_CONFIG_CHORUSTYPE	access:public
nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;             \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_CONFIG_ECHOCANCELATIONTYPE	access:public
nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;             \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_CONFIG_EQUALIZERTYPE	access:public
nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;             \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_CONFIG_LOUDNESSTYPE	access:public
nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;             \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_CONFIG_NOISEREDUCTIONTYPE	access:public
nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;             \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_CONFIG_STEREOWIDENINGTYPE	access:public
nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;             \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_CONFIG_TREBLETYPE	access:public
nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;             \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_SBCTYPE	access:public
nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;            \/**< size of the structure in bytes *\/ $/;"	m	struct:OMX_AUDIO_CONFIG_MIDIMETAEVENTDATATYPE	access:public
nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;            \/**< size of the structure in bytes *\/ $/;"	m	struct:OMX_AUDIO_CONFIG_MIDIMETAEVENTTYPE	access:public
nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;            \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDIIMMEDIATEEVENTTYPE	access:public
nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;            \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_G729TYPE	access:public
nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;            \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_GSMEFRTYPE	access:public
nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;            \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_GSMFRTYPE	access:public
nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;            \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_GSMHRTYPE	access:public
nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;            \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_MIDILOADUSERSOUNDTYPE	access:public
nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;            \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_VORBISTYPE	access:public
nSize	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSize;            \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_WMATYPE	access:public
nSize	omx/openmax/OMX_Component.h	/^    OMX_U32 nSize;                      \/**< size of the structure in bytes, including$/;"	m	struct:OMX_PARAM_CONTENTURITYPE	access:public
nSize	omx/openmax/OMX_Component.h	/^    OMX_U32 nSize;                    \/**< Size of this structure, in Bytes *\/ $/;"	m	struct:OMX_PARAM_U32TYPE	access:public
nSize	omx/openmax/OMX_Component.h	/^    OMX_U32 nSize;                  $/;"	m	struct:OMX_PARAM_SUSPENSIONPOLICYTYPE	access:public
nSize	omx/openmax/OMX_Component.h	/^    OMX_U32 nSize;                  $/;"	m	struct:OMX_PARAM_SUSPENSIONTYPE	access:public
nSize	omx/openmax/OMX_Component.h	/^    OMX_U32 nSize;                 \/**< Size of the structure in bytes *\/$/;"	m	struct:OMX_PARAM_PORTDEFINITIONTYPE	access:public
nSize	omx/openmax/OMX_Component.h	/^    OMX_U32 nSize;              \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_PARAM_CONTENTPIPETYPE	access:public
nSize	omx/openmax/OMX_Component.h	/^    OMX_U32 nSize;             \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_RESOURCECONCEALMENTTYPE	access:public
nSize	omx/openmax/OMX_Component.h	/^    OMX_U32 nSize; $/;"	m	struct:OMX_PARAM_METADATAFILTERTYPE	access:public
nSize	omx/openmax/OMX_Component.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_COMPONENTTYPE	access:public
nSize	omx/openmax/OMX_Component.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_BOOLEANTYPE	access:public
nSize	omx/openmax/OMX_Component.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_CONTAINERNODECOUNTTYPE	access:public
nSize	omx/openmax/OMX_Component.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_CONTAINERNODEIDTYPE	access:public
nSize	omx/openmax/OMX_Component.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_METADATAITEMCOUNTTYPE	access:public
nSize	omx/openmax/OMX_Component.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_METADATAITEMTYPE	access:public
nSize	omx/openmax/OMX_ComponentExt.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_COMMITMODETYPE	access:public
nSize	omx/openmax/OMX_ComponentExt.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_COMMITTYPE	access:public
nSize	omx/openmax/OMX_Core.h	/^    OMX_U32 nSize;              \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_BUFFERHEADERTYPE	access:public
nSize	omx/openmax/OMX_Core.h	/^    OMX_U32 nSize;              \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_PARAM_COMPONENTROLETYPE	access:public
nSize	omx/openmax/OMX_Core.h	/^    OMX_U32 nSize;              \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_PORT_PARAM_TYPE	access:public
nSize	omx/openmax/OMX_Core.h	/^    OMX_U32 nSize; \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_PARAM_BUFFERSUPPLIERTYPE	access:public
nSize	omx/openmax/OMX_Core.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_OTHER_EXTRADATATYPE	access:public
nSize	omx/openmax/OMX_Core.h	/^ OMX_U32 nSize;             \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_PRIORITYMGMTTYPE	access:public
nSize	omx/openmax/OMX_CoreExt.h	/^    OMX_U32 nSize;              \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_CONFIG_CALLBACKREQUESTTYPE	access:public
nSize	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;              \/**< Size of the structure in bytes *\/$/;"	m	struct:OMX_CONFIG_COLORCONVERSIONTYPE	access:public
nSize	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;            \/**< Size of the structure in bytes *\/$/;"	m	struct:OMX_CONFIG_DITHERTYPE	access:public
nSize	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;            \/**< Size of the structure in bytes *\/$/;"	m	struct:OMX_CONFIG_SCALEFACTORTYPE	access:public
nSize	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;            \/**< Size of the structure in bytes *\/$/;"	m	struct:OMX_PARAM_DATAUNITTYPE	access:public
nSize	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_BACKLIGHTTYPE	access:public
nSize	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_BRIGHTNESSTYPE	access:public
nSize	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_CAPTUREMODETYPE	access:public
nSize	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_COLORBLENDTYPE	access:public
nSize	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_COLORENHANCEMENTTYPE	access:public
nSize	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_COLORKEYTYPE	access:public
nSize	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_CONTRASTTYPE	access:public
nSize	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_EXPOSURECONTROLTYPE	access:public
nSize	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_EXPOSUREVALUETYPE	access:public
nSize	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_FOCUSREGIONTYPE	access:public
nSize	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_FRAMESTABTYPE	access:public
nSize	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_GAMMATYPE	access:public
nSize	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_IMAGEFILTERTYPE	access:public
nSize	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_LIGHTNESSTYPE	access:public
nSize	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_MIRRORTYPE	access:public
nSize	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_PLANEBLENDTYPE	access:public
nSize	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_POINTTYPE	access:public
nSize	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_RECTTYPE	access:public
nSize	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_ROTATIONTYPE	access:public
nSize	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_SATURATIONTYPE	access:public
nSize	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_TRANSITIONEFFECTTYPE	access:public
nSize	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_WHITEBALCONTROLTYPE	access:public
nSize	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_FRAMESIZETYPE	access:public
nSize	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_PARAM_DEBLOCKINGTYPE	access:public
nSize	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_PARAM_FOCUSSTATUSTYPE	access:public
nSize	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_PARAM_INTERLEAVETYPE	access:public
nSize	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_PARAM_SENSORMODETYPE	access:public
nSize	omx/openmax/OMX_Image.h	/^    OMX_U32 nSize;            $/;"	m	struct:OMX_IMAGE_PARAM_QFACTORTYPE	access:public
nSize	omx/openmax/OMX_Image.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_IMAGE_CONFIG_FOCUSCONTROLTYPE	access:public
nSize	omx/openmax/OMX_Image.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_IMAGE_PARAM_FLASHCONTROLTYPE	access:public
nSize	omx/openmax/OMX_Image.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_IMAGE_PARAM_HUFFMANTTABLETYPE	access:public
nSize	omx/openmax/OMX_Image.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_IMAGE_PARAM_PORTFORMATTYPE	access:public
nSize	omx/openmax/OMX_Image.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_IMAGE_PARAM_QUANTIZATIONTABLETYPE	access:public
nSize	omx/openmax/OMX_Other.h	/^    OMX_U32 nSize;                  \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_TIME_CONFIG_ACTIVEREFCLOCKTYPE	access:public
nSize	omx/openmax/OMX_Other.h	/^    OMX_U32 nSize;                  \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_TIME_CONFIG_SCALETYPE	access:public
nSize	omx/openmax/OMX_Other.h	/^    OMX_U32 nSize;                  \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_TIME_CONFIG_SEEKMODETYPE	access:public
nSize	omx/openmax/OMX_Other.h	/^    OMX_U32 nSize;                  \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_TIME_MEDIATIMETYPE	access:public
nSize	omx/openmax/OMX_Other.h	/^    OMX_U32 nSize;               \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_TIME_CONFIG_TIMESTAMPTYPE	access:public
nSize	omx/openmax/OMX_Other.h	/^    OMX_U32 nSize;              \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_TIME_CONFIG_CLOCKSTATETYPE	access:public
nSize	omx/openmax/OMX_Other.h	/^    OMX_U32 nSize;              \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_TIME_CONFIG_MEDIATIMEREQUESTTYPE	access:public
nSize	omx/openmax/OMX_Other.h	/^    OMX_U32 nSize;            \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_OTHER_CONFIG_POWERTYPE	access:public
nSize	omx/openmax/OMX_Other.h	/^    OMX_U32 nSize;            \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_OTHER_CONFIG_STATSTYPE	access:public
nSize	omx/openmax/OMX_Other.h	/^    OMX_U32 nSize; \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_OTHER_PARAM_PORTFORMATTYPE	access:public
nSize	omx/openmax/OMX_Video.h	/^    OMX_U32 nSize;                          $/;"	m	struct:OMX_VIDEO_CONFIG_BITRATETYPE	access:public
nSize	omx/openmax/OMX_Video.h	/^    OMX_U32 nSize;                          $/;"	m	struct:OMX_VIDEO_PARAM_BITRATETYPE	access:public
nSize	omx/openmax/OMX_Video.h	/^    OMX_U32 nSize;                 $/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE	access:public
nSize	omx/openmax/OMX_Video.h	/^    OMX_U32 nSize;            $/;"	m	struct:OMX_VIDEO_PARAM_QUANTIZATIONTYPE	access:public
nSize	omx/openmax/OMX_Video.h	/^    OMX_U32 nSize;            $/;"	m	struct:OMX_VIDEO_PARAM_VIDEOFASTUPDATETYPE	access:public
nSize	omx/openmax/OMX_Video.h	/^    OMX_U32 nSize;           $/;"	m	struct:OMX_VIDEO_PARAM_MPEG2TYPE	access:public
nSize	omx/openmax/OMX_Video.h	/^    OMX_U32 nSize; $/;"	m	struct:OMX_VIDEO_CONFIG_AVCINTRAPERIOD	access:public
nSize	omx/openmax/OMX_Video.h	/^    OMX_U32 nSize; $/;"	m	struct:OMX_VIDEO_CONFIG_NALSIZE	access:public
nSize	omx/openmax/OMX_Video.h	/^    OMX_U32 nSize; $/;"	m	struct:OMX_VIDEO_PARAM_AVCSLICEFMO	access:public
nSize	omx/openmax/OMX_Video.h	/^    OMX_U32 nSize; $/;"	m	struct:OMX_VIDEO_PARAM_VBSMCTYPE	access:public
nSize	omx/openmax/OMX_Video.h	/^    OMX_U32 nSize; $/;"	m	struct:OMX_VIDEO_PARAM_WMVTYPE	access:public
nSize	omx/openmax/OMX_Video.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_FRAMERATETYPE	access:public
nSize	omx/openmax/OMX_Video.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_INTRAREFRESHVOPTYPE	access:public
nSize	omx/openmax/OMX_Video.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_MACROBLOCKERRORMAPTYPE	access:public
nSize	omx/openmax/OMX_Video.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_MBERRORREPORTINGTYPE	access:public
nSize	omx/openmax/OMX_Video.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_PARAM_MACROBLOCKSTYPE	access:public
nSize	omx/openmax/OMX_Video.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_VIDEO_PARAM_ERRORCORRECTIONTYPE	access:public
nSize	omx/openmax/OMX_Video.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_VIDEO_PARAM_H263TYPE	access:public
nSize	omx/openmax/OMX_Video.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_VIDEO_PARAM_INTRAREFRESHTYPE	access:public
nSize	omx/openmax/OMX_Video.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_VIDEO_PARAM_MOTIONVECTORTYPE	access:public
nSize	omx/openmax/OMX_Video.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG4TYPE	access:public
nSize	omx/openmax/OMX_Video.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_VIDEO_PARAM_PORTFORMATTYPE	access:public
nSize	omx/openmax/OMX_Video.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_VIDEO_PARAM_RVTYPE	access:public
nSize	omx/openmax/OMX_Video.h	/^   OMX_U32 nSize;                 $/;"	m	struct:OMX_VIDEO_PARAM_PROFILELEVELTYPE	access:public
nSize	omx/openmax/OMX_VideoExt.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_NALSTREAMFORMATTYPE	access:public
nSliceGroupMapType	omx/openmax/OMX_Video.h	/^    OMX_U8 nSliceGroupMapType;$/;"	m	struct:OMX_VIDEO_PARAM_AVCSLICEFMO	access:public
nSliceHeaderSpacing	omx/openmax/OMX_Video.h	/^    OMX_U32 nSliceHeaderSpacing;  $/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE	access:public
nSliceHeaderSpacing	omx/openmax/OMX_Video.h	/^    OMX_U32 nSliceHeaderSpacing;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG4TYPE	access:public
nSliceHeight	omx/openmax/OMX_Image.h	/^    OMX_U32 nSliceHeight;$/;"	m	struct:OMX_IMAGE_PORTDEFINITIONTYPE	access:public
nSliceHeight	omx/openmax/OMX_Video.h	/^    OMX_U32 nSliceHeight;$/;"	m	struct:OMX_VIDEO_PORTDEFINITIONTYPE	access:public
nStartPortNumber	omx/openmax/OMX_Core.h	/^    OMX_U32 nStartPortNumber;   \/** first port number for this type of port *\/$/;"	m	struct:OMX_PORT_PARAM_TYPE	access:public
nStartTime	omx/openmax/OMX_Other.h	/^    OMX_TICKS nStartTime;       \/**< Start time of the media time. *\/$/;"	m	struct:OMX_TIME_CONFIG_CLOCKSTATETYPE	access:public
nStep	omx/openmax/OMX_Types.h	/^        OMX_U8 nStep;           \/**< Step version accessor element *\/$/;"	m	struct:OMX_VERSIONTYPE::__anon34	access:public
nStereoWidening	omx/openmax/OMX_Audio.h	/^    OMX_U32  nStereoWidening;  \/**< stereo widening setting for the port,$/;"	m	struct:OMX_AUDIO_CONFIG_STEREOWIDENINGTYPE	access:public
nStopTime	omx/openmax/OMX_Audio.h	/^    OMX_U32 nStopTime;            \/**< Time in milliseconds to indicate when playback $/;"	m	struct:OMX_AUDIO_CONFIG_MIDICONTROLTYPE	access:public
nStride	omx/openmax/OMX_Image.h	/^    OMX_S32 nStride;     $/;"	m	struct:OMX_IMAGE_PORTDEFINITIONTYPE	access:public
nStride	omx/openmax/OMX_Video.h	/^    OMX_S32 nStride;$/;"	m	struct:OMX_VIDEO_PORTDEFINITIONTYPE	access:public
nSubbands	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSubbands;         \/**< Number of subbands *\/$/;"	m	struct:OMX_AUDIO_PARAM_SBCTYPE	access:public
nSuperBlockAlign	omx/openmax/OMX_Audio.h	/^    OMX_U32 nSuperBlockAlign; \/**< WMA Type-specific data *\/$/;"	m	struct:OMX_AUDIO_PARAM_WMATYPE	access:public
nTargetBitrate	omx/openmax/OMX_Video.h	/^    OMX_U32 nTargetBitrate;                 $/;"	m	struct:OMX_VIDEO_PARAM_BITRATETYPE	access:public
nTickCount	omx/openmax/OMX_Core.h	/^    OMX_U32 nTickCount;         \/**< Optional entry that the component and$/;"	m	struct:OMX_BUFFERHEADERTYPE	access:public
nTimeIncRes	omx/openmax/OMX_Video.h	/^    OMX_U32 nTimeIncRes;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG4TYPE	access:public
nTimeStamp	omx/openmax/OMX_Core.h	/^ OMX_TICKS nTimeStamp;          \/**< Timestamp corresponding to the sample $/;"	m	struct:OMX_BUFFERHEADERTYPE	access:public
nTimeout	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nTimeout;$/;"	m	struct:OMX_CONFIG_BACKLIGHTTYPE	access:public
nTimestamp	omx/openmax/OMX_Other.h	/^    OMX_TICKS nTimestamp;  	     \/**< timestamp .*\/ $/;"	m	struct:OMX_TIME_CONFIG_TIMESTAMPTYPE	access:public
nTop	omx/openmax/OMX_IVCommon.h	/^    OMX_S32 nTop;$/;"	m	struct:OMX_CONFIG_RECTTYPE	access:public
nTrack	omx/openmax/OMX_Audio.h	/^    OMX_U32 nTrack;           \/**< track number for the meta event *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDIMETAEVENTTYPE	access:public
nTrack0031MuteMask	omx/openmax/OMX_Audio.h	/^    OMX_U32 nTrack0031MuteMask;   \/**< 32 bit mask for track mute status. Note: This is for tracks 0-31 *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDICONTROLTYPE	access:public
nTrack0031SoloMask	omx/openmax/OMX_Audio.h	/^    OMX_U32 nTrack0031SoloMask;   \/**< 32 bit mask for track solo status. Note: This is for tracks 0-31 *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDICONTROLTYPE	access:public
nTrack3263MuteMask	omx/openmax/OMX_Audio.h	/^    OMX_U32 nTrack3263MuteMask;   \/**< 32 bit mask for track mute status. Note: This is for tracks 32-63 *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDICONTROLTYPE	access:public
nTrack3263SoloMask	omx/openmax/OMX_Audio.h	/^    OMX_U32 nTrack3263SoloMask;   \/**< 32 bit mask for track solo status. Note: This is for tracks 32-63 *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDICONTROLTYPE	access:public
nTreble	omx/openmax/OMX_Audio.h	/^    OMX_S32  nTreble;          \/**< treble setting for the port, as a$/;"	m	struct:OMX_AUDIO_CONFIG_TREBLETYPE	access:public
nTunnelFlags	omx/openmax/OMX_Core.h	/^    OMX_U32 nTunnelFlags;             \/**< bit flags for tunneling *\/$/;"	m	struct:OMX_TUNNELSETUPTYPE	access:public
nU32	omx/openmax/OMX_Component.h	/^    OMX_U32 nU32;                     \/**< U32 value *\/$/;"	m	struct:OMX_PARAM_U32TYPE	access:public
nUserSoundBankIndex	omx/openmax/OMX_Audio.h	/^    OMX_U32 nUserSoundBankIndex;\/**< User soundbank index, easier to access soundbanks $/;"	m	struct:OMX_AUDIO_CONFIG_MIDISOUNDBANKPROGRAMTYPE	access:public
nValue	omx/openmax/OMX_Component.h	/^    OMX_U8 nValue[1];$/;"	m	struct:OMX_CONFIG_METADATAITEMTYPE	access:public
nValue	omx/openmax/OMX_Types.h	/^    OMX_S32 nValue; \/**< actual value *\/$/;"	m	struct:OMX_BS32	access:public
nValue	omx/openmax/OMX_Types.h	/^    OMX_U32 nValue; \/**< actual value *\/$/;"	m	struct:OMX_BU32	access:public
nValueMaxSize	omx/openmax/OMX_Component.h	/^    OMX_U32 nValueMaxSize;$/;"	m	struct:OMX_CONFIG_METADATAITEMTYPE	access:public
nValueSizeUsed	omx/openmax/OMX_Component.h	/^    OMX_U32 nValueSizeUsed;$/;"	m	struct:OMX_CONFIG_METADATAITEMTYPE	access:public
nVersion	omx/gstomx.h	/^  OMX_VERSIONTYPE nVersion;$/;"	m	struct:_EnableGemBuffersParams	access:public
nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;               \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_AMRTYPE	access:public
nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;         \/**< OMX specification version information *\/ $/;"	m	struct:OMX_AUDIO_PARAM_PCMMODETYPE	access:public
nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;       \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_PORTFORMATTYPE	access:public
nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;      \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_AACPROFILETYPE	access:public
nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;      \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_MIDITYPE	access:public
nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;      \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_MP3TYPE	access:public
nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;     \/**< OMX specification version information *\/ $/;"	m	struct:OMX_AUDIO_PARAM_G723TYPE	access:public
nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;     \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDICONTROLTYPE	access:public
nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;     \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_CONFIG_REVERBERATIONTYPE	access:public
nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;     \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_EVRCTYPE	access:public
nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;     \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_PDCEFRTYPE	access:public
nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;     \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_PDCFRTYPE	access:public
nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;     \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_PDCHRTYPE	access:public
nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;     \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_QCELP13TYPE	access:public
nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;     \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_QCELP8TYPE	access:public
nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;     \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_SMVTYPE	access:public
nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;     \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_TDMAEFRTYPE	access:public
nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;     \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_TDMAFRTYPE	access:public
nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;   \/**< OMX specification version information *\/ $/;"	m	struct:OMX_AUDIO_PARAM_ADPCMTYPE	access:public
nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;   \/**< OMX specification version information *\/ $/;"	m	struct:OMX_AUDIO_PARAM_G726TYPE	access:public
nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;   \/**< OMX specification version information *\/ $/;"	m	struct:OMX_AUDIO_PARAM_RATYPE	access:public
nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;   \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_CONFIG_BALANCETYPE	access:public
nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;   \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_CONFIG_CHANNELMUTETYPE	access:public
nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;   \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_CONFIG_CHANNELVOLUMETYPE	access:public
nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;   \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDISOUNDBANKPROGRAMTYPE	access:public
nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;   \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDISTATUSTYPE	access:public
nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;   \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MUTETYPE	access:public
nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;   \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_CONFIG_VOLUMETYPE	access:public
nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;  \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_CONFIG_BASSTYPE	access:public
nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;  \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_CONFIG_CHORUSTYPE	access:public
nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;  \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_CONFIG_ECHOCANCELATIONTYPE	access:public
nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;  \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_CONFIG_EQUALIZERTYPE	access:public
nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;  \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_CONFIG_LOUDNESSTYPE	access:public
nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;  \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_CONFIG_NOISEREDUCTIONTYPE	access:public
nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;  \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_CONFIG_STEREOWIDENINGTYPE	access:public
nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;  \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_CONFIG_TREBLETYPE	access:public
nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;  \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_SBCTYPE	access:public
nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion; \/**< OMX specification version information *\/ $/;"	m	struct:OMX_AUDIO_CONFIG_MIDIMETAEVENTDATATYPE	access:public
nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion; \/**< OMX specification version information *\/ $/;"	m	struct:OMX_AUDIO_CONFIG_MIDIMETAEVENTTYPE	access:public
nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion; \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDIIMMEDIATEEVENTTYPE	access:public
nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion; \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_G729TYPE	access:public
nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion; \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_GSMEFRTYPE	access:public
nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion; \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_GSMFRTYPE	access:public
nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion; \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_GSMHRTYPE	access:public
nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion; \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_MIDILOADUSERSOUNDTYPE	access:public
nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion; \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_VORBISTYPE	access:public
nVersion	omx/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion; \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_WMATYPE	access:public
nVersion	omx/openmax/OMX_Component.h	/^    OMX_VERSIONTYPE nVersion;           \/**< OMX specification version information *\/$/;"	m	struct:OMX_PARAM_CONTENTURITYPE	access:public
nVersion	omx/openmax/OMX_Component.h	/^    OMX_VERSIONTYPE nVersion;         \/**< OMX specification version information *\/ $/;"	m	struct:OMX_PARAM_U32TYPE	access:public
nVersion	omx/openmax/OMX_Component.h	/^    OMX_VERSIONTYPE nVersion;        $/;"	m	struct:OMX_PARAM_SUSPENSIONPOLICYTYPE	access:public
nVersion	omx/openmax/OMX_Component.h	/^    OMX_VERSIONTYPE nVersion;       $/;"	m	struct:OMX_PARAM_SUSPENSIONTYPE	access:public
nVersion	omx/openmax/OMX_Component.h	/^    OMX_VERSIONTYPE nVersion;      \/**< OMX specification version information *\/$/;"	m	struct:OMX_PARAM_PORTDEFINITIONTYPE	access:public
nVersion	omx/openmax/OMX_Component.h	/^    OMX_VERSIONTYPE nVersion;   \/**< OMX specification version information *\/$/;"	m	struct:OMX_PARAM_CONTENTPIPETYPE	access:public
nVersion	omx/openmax/OMX_Component.h	/^    OMX_VERSIONTYPE nVersion;  \/**< OMX specification version information *\/$/;"	m	struct:OMX_RESOURCECONCEALMENTTYPE	access:public
nVersion	omx/openmax/OMX_Component.h	/^    OMX_VERSIONTYPE nVersion; $/;"	m	struct:OMX_PARAM_METADATAFILTERTYPE	access:public
nVersion	omx/openmax/OMX_Component.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_COMPONENTTYPE	access:public
nVersion	omx/openmax/OMX_Component.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_BOOLEANTYPE	access:public
nVersion	omx/openmax/OMX_Component.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_CONTAINERNODECOUNTTYPE	access:public
nVersion	omx/openmax/OMX_Component.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_CONTAINERNODEIDTYPE	access:public
nVersion	omx/openmax/OMX_Component.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_METADATAITEMCOUNTTYPE	access:public
nVersion	omx/openmax/OMX_Component.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_METADATAITEMTYPE	access:public
nVersion	omx/openmax/OMX_ComponentExt.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_COMMITMODETYPE	access:public
nVersion	omx/openmax/OMX_ComponentExt.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_COMMITTYPE	access:public
nVersion	omx/openmax/OMX_Core.h	/^    OMX_VERSIONTYPE nVersion;               $/;"	m	struct:OMX_OTHER_EXTRADATATYPE	access:public
nVersion	omx/openmax/OMX_Core.h	/^    OMX_VERSIONTYPE nVersion;   \/**< OMX specification version information *\/$/;"	m	struct:OMX_BUFFERHEADERTYPE	access:public
nVersion	omx/openmax/OMX_Core.h	/^    OMX_VERSIONTYPE nVersion;   \/**< OMX specification version information *\/$/;"	m	struct:OMX_PARAM_COMPONENTROLETYPE	access:public
nVersion	omx/openmax/OMX_Core.h	/^    OMX_VERSIONTYPE nVersion;   \/**< OMX specification version information *\/$/;"	m	struct:OMX_PORT_PARAM_TYPE	access:public
nVersion	omx/openmax/OMX_Core.h	/^    OMX_VERSIONTYPE nVersion; \/**< OMX specification version information *\/$/;"	m	struct:OMX_PARAM_BUFFERSUPPLIERTYPE	access:public
nVersion	omx/openmax/OMX_Core.h	/^ OMX_VERSIONTYPE nVersion;  \/**< OMX specification version information *\/$/;"	m	struct:OMX_PRIORITYMGMTTYPE	access:public
nVersion	omx/openmax/OMX_CoreExt.h	/^    OMX_VERSIONTYPE nVersion;   \/**< OMX specification version information *\/$/;"	m	struct:OMX_CONFIG_CALLBACKREQUESTTYPE	access:public
nVersion	omx/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;   \/**< OMX specification version info *\/ $/;"	m	struct:OMX_CONFIG_COLORCONVERSIONTYPE	access:public
nVersion	omx/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;  $/;"	m	struct:OMX_CONFIG_RECTTYPE	access:public
nVersion	omx/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion; $/;"	m	struct:OMX_CONFIG_COLORENHANCEMENTTYPE	access:public
nVersion	omx/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion; $/;"	m	struct:OMX_CONFIG_MIRRORTYPE	access:public
nVersion	omx/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion; \/**< OMX specification version info *\/ $/;"	m	struct:OMX_CONFIG_SCALEFACTORTYPE	access:public
nVersion	omx/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion; \/**< OMX specification version information *\/ $/;"	m	struct:OMX_CONFIG_DITHERTYPE	access:public
nVersion	omx/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion; \/**< OMX specification version information *\/ $/;"	m	struct:OMX_PARAM_DATAUNITTYPE	access:public
nVersion	omx/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_BACKLIGHTTYPE	access:public
nVersion	omx/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_BRIGHTNESSTYPE	access:public
nVersion	omx/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_CAPTUREMODETYPE	access:public
nVersion	omx/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_COLORBLENDTYPE	access:public
nVersion	omx/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_COLORKEYTYPE	access:public
nVersion	omx/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_CONTRASTTYPE	access:public
nVersion	omx/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_EXPOSURECONTROLTYPE	access:public
nVersion	omx/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_EXPOSUREVALUETYPE	access:public
nVersion	omx/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_FOCUSREGIONTYPE	access:public
nVersion	omx/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_FRAMESTABTYPE	access:public
nVersion	omx/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_GAMMATYPE	access:public
nVersion	omx/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_IMAGEFILTERTYPE	access:public
nVersion	omx/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_LIGHTNESSTYPE	access:public
nVersion	omx/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_PLANEBLENDTYPE	access:public
nVersion	omx/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_POINTTYPE	access:public
nVersion	omx/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_ROTATIONTYPE	access:public
nVersion	omx/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_SATURATIONTYPE	access:public
nVersion	omx/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_TRANSITIONEFFECTTYPE	access:public
nVersion	omx/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_WHITEBALCONTROLTYPE	access:public
nVersion	omx/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_FRAMESIZETYPE	access:public
nVersion	omx/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_PARAM_DEBLOCKINGTYPE	access:public
nVersion	omx/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_PARAM_FOCUSSTATUSTYPE	access:public
nVersion	omx/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_PARAM_INTERLEAVETYPE	access:public
nVersion	omx/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_PARAM_SENSORMODETYPE	access:public
nVersion	omx/openmax/OMX_Image.h	/^    OMX_VERSIONTYPE nVersion; $/;"	m	struct:OMX_IMAGE_PARAM_QFACTORTYPE	access:public
nVersion	omx/openmax/OMX_Image.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_IMAGE_CONFIG_FOCUSCONTROLTYPE	access:public
nVersion	omx/openmax/OMX_Image.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_IMAGE_PARAM_FLASHCONTROLTYPE	access:public
nVersion	omx/openmax/OMX_Image.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_IMAGE_PARAM_HUFFMANTTABLETYPE	access:public
nVersion	omx/openmax/OMX_Image.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_IMAGE_PARAM_PORTFORMATTYPE	access:public
nVersion	omx/openmax/OMX_Image.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_IMAGE_PARAM_QUANTIZATIONTABLETYPE	access:public
nVersion	omx/openmax/OMX_Other.h	/^    OMX_VERSIONTYPE nVersion;       \/**< OMX specification version information *\/$/;"	m	struct:OMX_TIME_CONFIG_ACTIVEREFCLOCKTYPE	access:public
nVersion	omx/openmax/OMX_Other.h	/^    OMX_VERSIONTYPE nVersion;       \/**< OMX specification version information *\/$/;"	m	struct:OMX_TIME_CONFIG_SCALETYPE	access:public
nVersion	omx/openmax/OMX_Other.h	/^    OMX_VERSIONTYPE nVersion;       \/**< OMX specification version information *\/$/;"	m	struct:OMX_TIME_CONFIG_SEEKMODETYPE	access:public
nVersion	omx/openmax/OMX_Other.h	/^    OMX_VERSIONTYPE nVersion;       \/**< OMX specification version information *\/$/;"	m	struct:OMX_TIME_MEDIATIMETYPE	access:public
nVersion	omx/openmax/OMX_Other.h	/^    OMX_VERSIONTYPE nVersion;    \/**< OMX specification version$/;"	m	struct:OMX_TIME_CONFIG_TIMESTAMPTYPE	access:public
nVersion	omx/openmax/OMX_Other.h	/^    OMX_VERSIONTYPE nVersion;   \/**< OMX specification version $/;"	m	struct:OMX_TIME_CONFIG_CLOCKSTATETYPE	access:public
nVersion	omx/openmax/OMX_Other.h	/^    OMX_VERSIONTYPE nVersion;   \/**< OMX specification version information *\/$/;"	m	struct:OMX_TIME_CONFIG_MEDIATIMEREQUESTTYPE	access:public
nVersion	omx/openmax/OMX_Other.h	/^    OMX_VERSIONTYPE nVersion; \/**< OMX specification version information *\/$/;"	m	struct:OMX_OTHER_CONFIG_POWERTYPE	access:public
nVersion	omx/openmax/OMX_Other.h	/^    OMX_VERSIONTYPE nVersion; \/**< OMX specification version information *\/$/;"	m	struct:OMX_OTHER_CONFIG_STATSTYPE	access:public
nVersion	omx/openmax/OMX_Other.h	/^    OMX_VERSIONTYPE nVersion; \/**< OMX specification version information *\/$/;"	m	struct:OMX_OTHER_PARAM_PORTFORMATTYPE	access:public
nVersion	omx/openmax/OMX_Types.h	/^    OMX_U32 nVersion;           \/**< 32 bit value to make accessing the$/;"	m	union:OMX_VERSIONTYPE	access:public
nVersion	omx/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;               $/;"	m	struct:OMX_VIDEO_CONFIG_BITRATETYPE	access:public
nVersion	omx/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;               $/;"	m	struct:OMX_VIDEO_PARAM_BITRATETYPE	access:public
nVersion	omx/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;      $/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE	access:public
nVersion	omx/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion; $/;"	m	struct:OMX_VIDEO_PARAM_VBSMCTYPE	access:public
nVersion	omx/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion; $/;"	m	struct:OMX_VIDEO_PARAM_VIDEOFASTUPDATETYPE	access:public
nVersion	omx/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_FRAMERATETYPE	access:public
nVersion	omx/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_INTRAREFRESHVOPTYPE	access:public
nVersion	omx/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_MACROBLOCKERRORMAPTYPE	access:public
nVersion	omx/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_MBERRORREPORTINGTYPE	access:public
nVersion	omx/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_PARAM_MACROBLOCKSTYPE	access:public
nVersion	omx/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_VIDEO_CONFIG_AVCINTRAPERIOD	access:public
nVersion	omx/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_VIDEO_CONFIG_NALSIZE	access:public
nVersion	omx/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_VIDEO_PARAM_AVCSLICEFMO	access:public
nVersion	omx/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_VIDEO_PARAM_ERRORCORRECTIONTYPE	access:public
nVersion	omx/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_VIDEO_PARAM_H263TYPE	access:public
nVersion	omx/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_VIDEO_PARAM_INTRAREFRESHTYPE	access:public
nVersion	omx/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_VIDEO_PARAM_MOTIONVECTORTYPE	access:public
nVersion	omx/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG2TYPE	access:public
nVersion	omx/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG4TYPE	access:public
nVersion	omx/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_VIDEO_PARAM_PORTFORMATTYPE	access:public
nVersion	omx/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_VIDEO_PARAM_QUANTIZATIONTYPE	access:public
nVersion	omx/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_VIDEO_PARAM_RVTYPE	access:public
nVersion	omx/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_VIDEO_PARAM_WMVTYPE	access:public
nVersion	omx/openmax/OMX_Video.h	/^   OMX_VERSIONTYPE nVersion;      $/;"	m	struct:OMX_VIDEO_PARAM_PROFILELEVELTYPE	access:public
nVersion	omx/openmax/OMX_VideoExt.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_NALSTREAMFORMATTYPE	access:public
nVersionMajor	omx/openmax/OMX_Types.h	/^        OMX_U8 nVersionMajor;   \/**< Major version accessor element *\/$/;"	m	struct:OMX_VERSIONTYPE::__anon34	access:public
nVersionMinor	omx/openmax/OMX_Types.h	/^        OMX_U8 nVersionMinor;   \/**< Minor version accessor element *\/$/;"	m	struct:OMX_VERSIONTYPE::__anon34	access:public
nWaitMask	omx/openmax/OMX_Other.h	/^    OMX_U32 nWaitMask;          \/**< Mask of OMX_CLOCKPORT values. *\/$/;"	m	struct:OMX_TIME_CONFIG_CLOCKSTATETYPE	access:public
nWallTimeAtMediaTime	omx/openmax/OMX_Other.h	/^    OMX_TICKS nWallTimeAtMediaTime; \/**< Wall time corresponding to nMediaTimeStamp.$/;"	m	struct:OMX_TIME_MEDIATIMETYPE	access:public
nWeightedBipredicitonMode	omx/openmax/OMX_Video.h	/^    OMX_U32 nWeightedBipredicitonMode; $/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE	access:public
nWidth	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nWidth;$/;"	m	struct:OMX_CONFIG_RECTTYPE	access:public
nWidth	omx/openmax/OMX_IVCommon.h	/^    OMX_U32 nWidth;$/;"	m	struct:OMX_FRAMESIZETYPE	access:public
nX	omx/openmax/OMX_IVCommon.h	/^    OMX_S32 nX;$/;"	m	struct:OMX_CONFIG_POINTTYPE	access:public
nY	omx/openmax/OMX_IVCommon.h	/^    OMX_S32 nY;$/;"	m	struct:OMX_CONFIG_POINTTYPE	access:public
n_in_ports	omx/gstomx.h	/^  gint n_in_ports, n_out_ports;$/;"	m	struct:_GstOMXComponent	access:public
n_out_ports	omx/gstomx.h	/^  gint n_in_ports, n_out_ports;$/;"	m	struct:_GstOMXComponent	access:public
name	omx/gstomx.h	/^  gchar *name; \/* for debugging mostly *\/$/;"	m	struct:_GstOMXComponent	access:public
need_copy	omx/gstomxbufferpool.h	/^  gboolean need_copy;$/;"	m	struct:_GstOMXBufferPool	access:public
needs_reorder	omx/gstomxaudiodec.h	/^  gboolean needs_reorder;$/;"	m	struct:_GstOMXAudioDec	access:public
new_calc_plane	omx/gstomx.c	/^int new_calc_plane(int width, int height)$/;"	f	signature:(int width, int height)
new_calc_plane	omx/gstomx.h	/^int new_calc_plane(int width, int height);$/;"	p	signature:(int width, int height)
new_calc_uvplane	omx/gstomx.c	/^int new_calc_uvplane(int width, int height)$/;"	f	signature:(int width, int height)
new_calc_uvplane	omx/gstomx.h	/^int new_calc_uvplane(int width, int height);$/;"	p	signature:(int width, int height)
new_calc_yplane	omx/gstomx.c	/^int new_calc_yplane(int width, int height)$/;"	f	signature:(int width, int height)
new_calc_yplane	omx/gstomx.h	/^int new_calc_yplane(int width, int height);$/;"	p	signature:(int width, int height)
offset	omx/gstomx.c	/^  glong offset;$/;"	m	struct:TypeOffest	file:	access:public
omx_buf	omx/gstomx.h	/^  OMX_BUFFERHEADERTYPE *omx_buf;$/;"	m	struct:_GstOMXBuffer	access:public
open_ogl	examples/egl/testegl.c	/^open_ogl (void)$/;"	f	file:	signature:(void)
other	omx/openmax/OMX_Component.h	/^        OMX_OTHER_PORTDEFINITIONTYPE other;$/;"	m	union:OMX_PARAM_PORTDEFINITIONTYPE::__anon33	access:public
other_pool	omx/gstomxbufferpool.h	/^  GstBufferPool *other_pool;$/;"	m	struct:_GstOMXBufferPool	access:public
out_port	omx/gstomxaudiosink.h	/^  GstOMXPort *in_port, *out_port;$/;"	m	struct:_GstOMXAudioSink	access:public
out_port_index	omx/gstomx.h	/^  guint32 in_port_index, out_port_index;$/;"	m	struct:_GstOMXClassData	access:public
out_port_pool	omx/gstomxaudiodec.h	/^  GstBufferPool *in_port_pool, *out_port_pool;$/;"	m	struct:_GstOMXAudioDec	access:public
out_port_pool	omx/gstomxvideodec.h	/^  GstBufferPool *in_port_pool, *out_port_pool;$/;"	m	struct:_GstOMXVideoDec	access:public
output_adapter	omx/gstomxaudiodec.h	/^  GstAdapter *output_adapter;$/;"	m	struct:_GstOMXAudioDec	access:public
p	omx/gstomx.h	/^    void   * p[SCMN_IMGB_MAX_PLANE];    \/* physical address of each image plane, if needs *\/$/;"	m	struct:__anon2	access:public
pAppPrivate	omx/openmax/OMX_Core.h	/^    OMX_PTR pAppPrivate;        \/**< pointer to any data the application$/;"	m	struct:OMX_BUFFERHEADERTYPE	access:public
pApplicationPrivate	omx/openmax/OMX_Component.h	/^    OMX_PTR pApplicationPrivate;$/;"	m	struct:OMX_COMPONENTTYPE	access:public
pBuffer	omx/openmax/OMX_Core.h	/^    OMX_U8* pBuffer;            \/**< Pointer to actual block of memory $/;"	m	struct:OMX_BUFFERHEADERTYPE	access:public
pClientPrivate	omx/openmax/OMX_Other.h	/^    OMX_PTR pClientPrivate;     \/**< Client private data to disabiguate this media time $/;"	m	struct:OMX_TIME_CONFIG_MEDIATIMEREQUESTTYPE	access:public
pComponentPrivate	omx/openmax/OMX_Component.h	/^    OMX_PTR pComponentPrivate;$/;"	m	struct:OMX_COMPONENTTYPE	access:public
pDLSData	omx/openmax/OMX_Audio.h	/^    OMX_PTR pDLSData;         \/**< Pointer to DLS file data *\/$/;"	m	struct:OMX_AUDIO_PARAM_MIDILOADUSERSOUNDTYPE	access:public
pInitialize	omx/openmax/OMX_Core.h	/^  OMX_COMPONENTINITTYPE pInitialize; \/* Component instance initialization function *\/$/;"	m	struct:OMX_COMPONENTREGISTERTYPE	access:public
pInputPortPrivate	omx/openmax/OMX_Core.h	/^    OMX_PTR pInputPortPrivate;  \/**< pointer to any data the input port$/;"	m	struct:OMX_BUFFERHEADERTYPE	access:public
pMarkData	omx/openmax/OMX_Core.h	/^    OMX_PTR pMarkData;          \/**< Application specific data associated with $/;"	m	struct:OMX_BUFFERHEADERTYPE	access:public
pMarkData	omx/openmax/OMX_Types.h	/^    OMX_PTR pMarkData;   \/**< Application specific data associated with $/;"	m	struct:OMX_MARKTYPE	access:public
pName	omx/openmax/OMX_Core.h	/^  const char          * pName;       \/* Component name, 128 byte limit (including '\\0') applies *\/$/;"	m	struct:OMX_COMPONENTREGISTERTYPE	access:public
pNativeRender	omx/openmax/OMX_Audio.h	/^    OMX_NATIVE_DEVICETYPE pNativeRender; \/** < platform specific reference$/;"	m	struct:OMX_AUDIO_PORTDEFINITIONTYPE	access:public
pNativeRender	omx/openmax/OMX_Image.h	/^    OMX_NATIVE_DEVICETYPE pNativeRender;$/;"	m	struct:OMX_IMAGE_PORTDEFINITIONTYPE	access:public
pNativeRender	omx/openmax/OMX_Video.h	/^    OMX_NATIVE_DEVICETYPE pNativeRender;$/;"	m	struct:OMX_VIDEO_PORTDEFINITIONTYPE	access:public
pNativeWindow	omx/openmax/OMX_Image.h	/^    OMX_NATIVE_WINDOWTYPE pNativeWindow;$/;"	m	struct:OMX_IMAGE_PORTDEFINITIONTYPE	access:public
pNativeWindow	omx/openmax/OMX_Video.h	/^    OMX_NATIVE_WINDOWTYPE pNativeWindow;$/;"	m	struct:OMX_VIDEO_PORTDEFINITIONTYPE	access:public
pOutputPortPrivate	omx/openmax/OMX_Core.h	/^    OMX_PTR pOutputPortPrivate; \/**< pointer to any data the output port$/;"	m	struct:OMX_BUFFERHEADERTYPE	access:public
pPlatformPrivate	omx/openmax/OMX_Core.h	/^    OMX_PTR pPlatformPrivate;   \/**< pointer to any data the platform$/;"	m	struct:OMX_BUFFERHEADERTYPE	access:public
parent	omx/gstomx.h	/^  GstObject *parent;$/;"	m	struct:_GstOMXComponent	access:public
parent	omx/gstomxaacdec.h	/^  GstOMXAudioDec parent;$/;"	m	struct:_GstOMXAACDec	access:public
parent	omx/gstomxaacenc.h	/^  GstOMXAudioEnc parent;$/;"	m	struct:_GstOMXAACEnc	access:public
parent	omx/gstomxamrdec.h	/^  GstOMXAudioDec parent;$/;"	m	struct:_GstOMXAMRDec	access:public
parent	omx/gstomxanalogaudiosink.h	/^  GstOMXAudioSink parent;$/;"	m	struct:_GstOMXAnalogAudioSink	access:public
parent	omx/gstomxaudiodec.h	/^  GstAudioDecoder parent;$/;"	m	struct:_GstOMXAudioDec	access:public
parent	omx/gstomxaudioenc.h	/^  GstAudioEncoder parent;$/;"	m	struct:_GstOMXAudioEnc	access:public
parent	omx/gstomxaudiosink.h	/^  GstAudioSink parent;$/;"	m	struct:_GstOMXAudioSink	access:public
parent	omx/gstomxbufferpool.c	/^  GstAllocator parent;$/;"	m	struct:_GstOMXMemoryAllocator	file:	access:public
parent	omx/gstomxbufferpool.h	/^  GstVideoBufferPool parent;$/;"	m	struct:_GstOMXBufferPool	access:public
parent	omx/gstomxh263dec.h	/^  GstOMXVideoDec parent;$/;"	m	struct:_GstOMXH263Dec	access:public
parent	omx/gstomxh263enc.h	/^  GstOMXVideoEnc parent;$/;"	m	struct:_GstOMXH263Enc	access:public
parent	omx/gstomxh264dec.h	/^  GstOMXVideoDec parent;$/;"	m	struct:_GstOMXH264Dec	access:public
parent	omx/gstomxh264enc.h	/^  GstOMXVideoEnc parent;$/;"	m	struct:_GstOMXH264Enc	access:public
parent	omx/gstomxhdmiaudiosink.h	/^  GstOMXAudioSink parent;$/;"	m	struct:_GstOMXHdmiAudioSink	access:public
parent	omx/gstomxmjpegdec.h	/^  GstOMXVideoDec parent;$/;"	m	struct:_GstOMXMJPEGDec	access:public
parent	omx/gstomxmp3dec.h	/^  GstOMXAudioDec parent;$/;"	m	struct:_GstOMXMP3Dec	access:public
parent	omx/gstomxmpeg2videodec.h	/^  GstOMXVideoDec parent;$/;"	m	struct:_GstOMXMPEG2VideoDec	access:public
parent	omx/gstomxmpeg4videodec.h	/^  GstOMXVideoDec parent;$/;"	m	struct:_GstOMXMPEG4VideoDec	access:public
parent	omx/gstomxmpeg4videoenc.h	/^  GstOMXVideoEnc parent;$/;"	m	struct:_GstOMXMPEG4VideoEnc	access:public
parent	omx/gstomxtheoradec.h	/^  GstOMXVideoDec parent;$/;"	m	struct:_GstOMXTheoraDec	access:public
parent	omx/gstomxvideodec.h	/^  GstVideoDecoder parent;$/;"	m	struct:_GstOMXVideoDec	access:public
parent	omx/gstomxvideoenc.h	/^  GstVideoEncoder parent;$/;"	m	struct:_GstOMXVideoEnc	access:public
parent	omx/gstomxvp8dec.h	/^  GstOMXVideoDec parent;$/;"	m	struct:_GstOMXVP8Dec	access:public
parent	omx/gstomxwmvdec.h	/^  GstOMXVideoDec parent;$/;"	m	struct:_GstOMXWMVDec	access:public
parent_class	omx/gstomxaacdec.h	/^  GstOMXAudioDecClass parent_class;$/;"	m	struct:_GstOMXAACDecClass	access:public
parent_class	omx/gstomxaacenc.h	/^  GstOMXAudioEncClass parent_class;$/;"	m	struct:_GstOMXAACEncClass	access:public
parent_class	omx/gstomxamrdec.h	/^  GstOMXAudioDecClass parent_class;$/;"	m	struct:_GstOMXAMRDecClass	access:public
parent_class	omx/gstomxanalogaudiosink.h	/^  GstOMXAudioSinkClass parent_class;$/;"	m	struct:_GstOMXAnalogAudioSinkClass	access:public
parent_class	omx/gstomxaudiodec.h	/^  GstAudioDecoderClass parent_class;$/;"	m	struct:_GstOMXAudioDecClass	access:public
parent_class	omx/gstomxaudioenc.h	/^  GstAudioEncoderClass parent_class;$/;"	m	struct:_GstOMXAudioEncClass	access:public
parent_class	omx/gstomxaudiosink.h	/^  GstAudioSinkClass parent_class;$/;"	m	struct:_GstOMXAudioSinkClass	access:public
parent_class	omx/gstomxbufferpool.c	/^  GstAllocatorClass parent_class;$/;"	m	struct:_GstOMXMemoryAllocatorClass	file:	access:public
parent_class	omx/gstomxbufferpool.h	/^  GstVideoBufferPoolClass parent_class;$/;"	m	struct:_GstOMXBufferPoolClass	access:public
parent_class	omx/gstomxh263dec.h	/^  GstOMXVideoDecClass parent_class;$/;"	m	struct:_GstOMXH263DecClass	access:public
parent_class	omx/gstomxh263enc.h	/^  GstOMXVideoEncClass parent_class;$/;"	m	struct:_GstOMXH263EncClass	access:public
parent_class	omx/gstomxh264dec.h	/^  GstOMXVideoDecClass parent_class;$/;"	m	struct:_GstOMXH264DecClass	access:public
parent_class	omx/gstomxh264enc.c	74;"	d	file:
parent_class	omx/gstomxh264enc.h	/^  GstOMXVideoEncClass parent_class;$/;"	m	struct:_GstOMXH264EncClass	access:public
parent_class	omx/gstomxhdmiaudiosink.h	/^  GstOMXAudioSinkClass parent_class;$/;"	m	struct:_GstOMXHdmiAudioSinkClass	access:public
parent_class	omx/gstomxmjpegdec.h	/^  GstOMXVideoDecClass parent_class;$/;"	m	struct:_GstOMXMJPEGDecClass	access:public
parent_class	omx/gstomxmp3dec.h	/^  GstOMXAudioDecClass parent_class;$/;"	m	struct:_GstOMXMP3DecClass	access:public
parent_class	omx/gstomxmpeg2videodec.h	/^  GstOMXVideoDecClass parent_class;$/;"	m	struct:_GstOMXMPEG2VideoDecClass	access:public
parent_class	omx/gstomxmpeg4videodec.h	/^  GstOMXVideoDecClass parent_class;$/;"	m	struct:_GstOMXMPEG4VideoDecClass	access:public
parent_class	omx/gstomxmpeg4videoenc.h	/^  GstOMXVideoEncClass parent_class;$/;"	m	struct:_GstOMXMPEG4VideoEncClass	access:public
parent_class	omx/gstomxtheoradec.h	/^  GstOMXVideoDecClass parent_class;$/;"	m	struct:_GstOMXTheoraDecClass	access:public
parent_class	omx/gstomxvideodec.h	/^  GstVideoDecoderClass parent_class;$/;"	m	struct:_GstOMXVideoDecClass	access:public
parent_class	omx/gstomxvideoenc.h	/^  GstVideoEncoderClass parent_class;$/;"	m	struct:_GstOMXVideoEncClass	access:public
parent_class	omx/gstomxvp8dec.h	/^  GstOMXVideoDecClass parent_class;$/;"	m	struct:_GstOMXVP8DecClass	access:public
parent_class	omx/gstomxwmvdec.h	/^  GstOMXVideoDecClass parent_class;$/;"	m	struct:_GstOMXWMVDecClass	access:public
pending_buffers	omx/gstomx.h	/^  GQueue pending_buffers; \/* Contains GstOMXBuffer* *\/$/;"	m	struct:_GstOMXPort	access:public
pending_reconfigure_outports	omx/gstomx.h	/^  GList *pending_reconfigure_outports;$/;"	m	struct:_GstOMXComponent	access:public
pending_state	omx/gstomx.h	/^  OMX_STATETYPE pending_state;$/;"	m	struct:_GstOMXComponent	access:public
periodicty_idr	omx/gstomxh264enc.h	/^  guint32 periodicty_idr;$/;"	m	struct:_GstOMXH264Enc	access:public
pipeline	examples/egl/testegl.c	/^  GstElement *pipeline;$/;"	m	struct:__anon37	file:	access:public
pipeline_get_duration	examples/egl/testegl.c	/^pipeline_get_duration (APP_STATE_T * state)$/;"	f	file:	signature:(APP_STATE_T * state)
pipeline_get_position	examples/egl/testegl.c	/^pipeline_get_position (APP_STATE_T * state)$/;"	f	file:	signature:(APP_STATE_T * state)
pipeline_pause	examples/egl/testegl.c	/^pipeline_pause (APP_STATE_T * state)$/;"	f	file:	signature:(APP_STATE_T * state)
pipeline_play	examples/egl/testegl.c	/^pipeline_play (APP_STATE_T * state)$/;"	f	file:	signature:(APP_STATE_T * state)
pipeline_seek	examples/egl/testegl.c	/^pipeline_seek (APP_STATE_T * state, gint64 position)$/;"	f	file:	signature:(APP_STATE_T * state, gint64 position)
plugin_init	omx/gstomx.c	/^plugin_init (GstPlugin * plugin)$/;"	f	file:	signature:(GstPlugin * plugin)
popped_obj	examples/egl/testegl.c	/^  GstMiniObject *popped_obj;$/;"	m	struct:__anon37	file:	access:public
port	omx/gstomx.h	/^      OMX_U32 port;$/;"	m	struct:_GstOMXMessage::__anon9::__anon11	access:public
port	omx/gstomx.h	/^      OMX_U32 port;$/;"	m	struct:_GstOMXMessage::__anon9::__anon13	access:public
port	omx/gstomx.h	/^      OMX_U32 port;$/;"	m	struct:_GstOMXMessage::__anon9::__anon14	access:public
port	omx/gstomx.h	/^      OMX_U32 port;$/;"	m	struct:_GstOMXMessage::__anon9::__anon15	access:public
port	omx/gstomx.h	/^  GstOMXPort *port;$/;"	m	struct:_GstOMXBuffer	access:public
port	omx/gstomxbufferpool.h	/^  GstOMXPort *port;$/;"	m	struct:_GstOMXBufferPool	access:public
port_def	omx/gstomx.h	/^  OMX_PARAM_PORTDEFINITIONTYPE port_def;$/;"	m	struct:_GstOMXPort	access:public
port_enable	omx/gstomx.h	/^    } port_enable;$/;"	m	union:_GstOMXMessage::__anon9	typeref:struct:_GstOMXMessage::__anon9::__anon13	access:public
port_settings_changed	omx/gstomx.h	/^    } port_settings_changed;$/;"	m	union:_GstOMXMessage::__anon9	typeref:struct:_GstOMXMessage::__anon9::__anon14	access:public
ports	omx/gstomx.h	/^  GPtrArray *ports; \/* Contains GstOMXPort* *\/$/;"	m	struct:_GstOMXComponent	access:public
position	omx/gstomxaudiodec.h	/^  GstAudioChannelPosition position[OMX_AUDIO_MAXCHANNELS];$/;"	m	struct:_GstOMXAudioDec	access:public
prepare_frame	omx/gstomxvideodec.h	/^  GstFlowReturn (*prepare_frame)   (GstOMXVideoDec * self, GstVideoCodecFrame *frame);$/;"	m	struct:_GstOMXVideoDecClass	access:public
preroll_cb	examples/egl/testegl.c	/^preroll_cb (GstElement * fakesink, GstBuffer * buffer, GstPad * pad,$/;"	f	file:	signature:(GstElement * fakesink, GstBuffer * buffer, GstPad * pad, gpointer user_data)
program	examples/egl/testegl.c	/^  GLint program;$/;"	m	struct:__anon37	file:	access:public
projection	examples/egl/testegl.c	/^  GstGLMatrix projection;$/;"	m	struct:__anon37	file:	access:public
qos_cb	examples/egl/testegl.c	/^qos_cb (GstBus * bus, GstMessage * msg, APP_STATE_T * state)$/;"	f	file:	signature:(GstBus * bus, GstMessage * msg, APP_STATE_T * state)
quadx	examples/egl/cube_texture_and_coords.h	/^static const GLfloat quadx[6*4*3] = {$/;"	v
quant_b_frames	omx/gstomxvideoenc.h	/^  guint32 quant_b_frames;$/;"	m	struct:_GstOMXVideoEnc	access:public
quant_i_frames	omx/gstomxvideoenc.h	/^  guint32 quant_i_frames;$/;"	m	struct:_GstOMXVideoEnc	access:public
quant_p_frames	omx/gstomxvideoenc.h	/^  guint32 quant_p_frames;$/;"	m	struct:_GstOMXVideoEnc	access:public
query_cb	examples/egl/testegl.c	/^query_cb (GstPad * pad, GstPadProbeInfo * info, gpointer user_data)$/;"	f	file:	signature:(GstPad * pad, GstPadProbeInfo * info, gpointer user_data)
queue	examples/egl/testegl.c	/^  GAsyncQueue *queue;$/;"	m	struct:__anon37	file:	access:public
queue_lock	examples/egl/testegl.c	/^  GMutex queue_lock;$/;"	m	struct:__anon37	file:	access:public
queue_object	examples/egl/testegl.c	/^queue_object (APP_STATE_T * state, GstMiniObject * obj, gboolean synchronous)$/;"	f	file:	signature:(APP_STATE_T * state, GstMiniObject * obj, gboolean synchronous)
queue_object	examples/egl/testegl.c	/^static gboolean queue_object (APP_STATE_T * state, GstMiniObject * obj,$/;"	p	file:	signature:(APP_STATE_T * state, GstMiniObject * obj, gboolean synchronous)
rate	omx/gstomxamrdec.h	/^  gint rate;$/;"	m	struct:_GstOMXAMRDec	access:public
rate	omx/gstomxaudiosink.h	/^  guint rate;$/;"	m	struct:_GstOMXAudioSink	access:public
redraw_scene	examples/egl/testegl.c	/^redraw_scene (APP_STATE_T * state)$/;"	f	file:	signature:(APP_STATE_T * state)
redraw_scene	examples/egl/testegl.c	/^static void redraw_scene (APP_STATE_T * state);$/;"	p	file:	signature:(APP_STATE_T * state)
render_func	examples/egl/testegl.c	/^render_func (gpointer data)$/;"	f	file:	signature:(gpointer data)
render_scene	examples/egl/testegl.c	/^render_scene (APP_STATE_T * state)$/;"	f	file:	signature:(APP_STATE_T * state)
rendered	examples/egl/testegl.c	/^  guint64 rendered;$/;"	m	struct:__anon37	file:	access:public
reorder_map	omx/gstomxaudiodec.h	/^  gint reorder_map[OMX_AUDIO_MAXCHANNELS];$/;"	m	struct:_GstOMXAudioDec	access:public
report_position_duration	examples/egl/testegl.c	/^report_position_duration (APP_STATE_T * state)$/;"	f	file:	signature:(APP_STATE_T * state)
reset_model	examples/egl/testegl.c	/^reset_model (APP_STATE_T * state)$/;"	f	file:	signature:(APP_STATE_T * state)
reset_model	examples/egl/testegl.c	/^static void reset_model (APP_STATE_T * state);$/;"	p	file:	signature:(APP_STATE_T * state)
rot_angle_x	examples/egl/testegl.c	/^  GLfloat rot_angle_x;$/;"	m	struct:__anon37	file:	access:public
rot_angle_x_inc	examples/egl/testegl.c	/^  GLfloat rot_angle_x_inc;$/;"	m	struct:__anon37	file:	access:public
rot_angle_y	examples/egl/testegl.c	/^  GLfloat rot_angle_y;$/;"	m	struct:__anon37	file:	access:public
rot_angle_y_inc	examples/egl/testegl.c	/^  GLfloat rot_angle_y_inc;$/;"	m	struct:__anon37	file:	access:public
rot_angle_z	examples/egl/testegl.c	/^  GLfloat rot_angle_z;$/;"	m	struct:__anon37	file:	access:public
rot_angle_z_inc	examples/egl/testegl.c	/^  GLfloat rot_angle_z_inc;$/;"	m	struct:__anon37	file:	access:public
running	examples/egl/testegl.c	/^  gboolean running;$/;"	m	struct:__anon37	file:	access:public
s	omx/gstomx.h	/^    int      s[SCMN_IMGB_MAX_PLANE];    \/* stride of each image plane *\/$/;"	m	struct:__anon2	access:public
s	omx/openmax/OMX_Types.h	/^    } s;$/;"	m	union:OMX_VERSIONTYPE	typeref:struct:OMX_VERSIONTYPE::__anon34	access:public
sBandIndex	omx/openmax/OMX_Audio.h	/^    OMX_BU32 sBandIndex;       \/**< Band number to be set.  Upper Limit is $/;"	m	struct:OMX_AUDIO_CONFIG_EQUALIZERTYPE	access:public
sBandLevel	omx/openmax/OMX_Audio.h	/^    OMX_BS32 sBandLevel;       \/**< band level in millibels *\/$/;"	m	struct:OMX_AUDIO_CONFIG_EQUALIZERTYPE	access:public
sCenterFreq	omx/openmax/OMX_Audio.h	/^    OMX_BU32 sCenterFreq;      \/**< Center frequecies in Hz.  This is a$/;"	m	struct:OMX_AUDIO_CONFIG_EQUALIZERTYPE	access:public
sDecayTime	omx/openmax/OMX_Audio.h	/^    OMX_BU32 sDecayTime;          \/**< Late reverberation decay time at low$/;"	m	struct:OMX_AUDIO_CONFIG_REVERBERATIONTYPE	access:public
sDelay	omx/openmax/OMX_Audio.h	/^    OMX_BU32 sDelay;           \/**< average delay in milliseconds *\/$/;"	m	struct:OMX_AUDIO_CONFIG_CHORUSTYPE	access:public
sFrameSize	omx/openmax/OMX_IVCommon.h	/^    OMX_FRAMESIZETYPE sFrameSize;$/;"	m	struct:OMX_PARAM_SENSORMODETYPE	access:public
sLanguageCountry	omx/openmax/OMX_Component.h	/^    OMX_STRING sLanguageCountry;$/;"	m	struct:OMX_CONFIG_METADATAITEMTYPE	access:public
sMaxPolyphony	omx/openmax/OMX_Audio.h	/^    OMX_BU32 sMaxPolyphony;        \/**< Specifies the maximum simultaneous polyphonic $/;"	m	struct:OMX_AUDIO_PARAM_MIDITYPE	access:public
sModulationRate	omx/openmax/OMX_Audio.h	/^    OMX_BU32 sModulationRate;  \/**< rate of modulation in millihertz *\/$/;"	m	struct:OMX_AUDIO_CONFIG_CHORUSTYPE	access:public
sPitchTransposition	omx/openmax/OMX_Audio.h	/^    OMX_BS32 sPitchTransposition; \/**< Pitch transposition in semitones, stored as Q22.10 $/;"	m	struct:OMX_AUDIO_CONFIG_MIDICONTROLTYPE	access:public
sPlayBackRate	omx/openmax/OMX_Audio.h	/^    OMX_BU32 sPlayBackRate;       \/**< Relative playback rate, stored as Q14.17 fixed-point$/;"	m	struct:OMX_AUDIO_CONFIG_MIDICONTROLTYPE	access:public
sReferenceHighFreq	omx/openmax/OMX_Audio.h	/^    OMX_BU32 sReferenceHighFreq;  \/**< Reference high frequency in Hertz. This is $/;"	m	struct:OMX_AUDIO_CONFIG_REVERBERATIONTYPE	access:public
sReflectionsDelay	omx/openmax/OMX_Audio.h	/^    OMX_BU32 sReflectionsDelay;   \/**< Delay time of the first reflection relative $/;"	m	struct:OMX_AUDIO_CONFIG_REVERBERATIONTYPE	access:public
sReflectionsLevel	omx/openmax/OMX_Audio.h	/^    OMX_BS32 sReflectionsLevel;   \/**< Intensity level of early reflections$/;"	m	struct:OMX_AUDIO_CONFIG_REVERBERATIONTYPE	access:public
sReverbDelay	omx/openmax/OMX_Audio.h	/^    OMX_BU32 sReverbDelay;        \/**< Time delay from the first early reflection $/;"	m	struct:OMX_AUDIO_CONFIG_REVERBERATIONTYPE	access:public
sReverbLevel	omx/openmax/OMX_Audio.h	/^    OMX_BS32 sReverbLevel;        \/**< Intensity level of late reverberation$/;"	m	struct:OMX_AUDIO_CONFIG_REVERBERATIONTYPE	access:public
sRoomHighFreqLevel	omx/openmax/OMX_Audio.h	/^    OMX_BS32 sRoomHighFreqLevel;  \/**< Attenuation at high frequencies$/;"	m	struct:OMX_AUDIO_CONFIG_REVERBERATIONTYPE	access:public
sRoomLevel	omx/openmax/OMX_Audio.h	/^    OMX_BS32 sRoomLevel;          \/**< Intensity level for the whole room effect $/;"	m	struct:OMX_AUDIO_CONFIG_REVERBERATIONTYPE	access:public
sTempo	omx/openmax/OMX_Audio.h	/^    OMX_BU32 sTempo ;             \/**< Tempo in beats per minute (BPM), stored as Q22.10 $/;"	m	struct:OMX_AUDIO_CONFIG_MIDICONTROLTYPE	access:public
sVolume	omx/openmax/OMX_Audio.h	/^    OMX_BS32 sVolume;           \/**< Volume linear setting in the 0..100 range, OR$/;"	m	struct:OMX_AUDIO_CONFIG_CHANNELVOLUMETYPE	access:public
sVolume	omx/openmax/OMX_Audio.h	/^    OMX_BS32 sVolume;           \/**< Volume linear setting in the 0..100 range, OR$/;"	m	struct:OMX_AUDIO_CONFIG_VOLUMETYPE	access:public
sXSearchRange	omx/openmax/OMX_Video.h	/^    OMX_S32 sXSearchRange;$/;"	m	struct:OMX_VIDEO_PARAM_MOTIONVECTORTYPE	access:public
sYSearchRange	omx/openmax/OMX_Video.h	/^    OMX_S32 sYSearchRange;$/;"	m	struct:OMX_VIDEO_PARAM_MOTIONVECTORTYPE	access:public
s_texture	examples/egl/testegl.c	/^  GLint s_texture;$/;"	m	struct:__anon37	file:	access:public
samples	omx/gstomxaudiosink.h	/^  guint samples;$/;"	m	struct:_GstOMXAudioSink	access:public
scmn_buffer	omx/gstomx.h	/^   MMVideoBuffer *scmn_buffer;$/;"	m	struct:_GstOMXBuffer	access:public
scmn_buffer	omx/gstomx.h	/^  SCMN_IMGB *scmn_buffer;$/;"	m	struct:_GstOMXBuffer	access:public
screen_height	examples/egl/testegl.c	/^  uint32_t screen_height;$/;"	m	struct:__anon37	file:	access:public
screen_width	examples/egl/testegl.c	/^  uint32_t screen_width;$/;"	m	struct:__anon37	file:	access:public
secure	omx/gstomx.h	/^  gboolean secure; \/* trust zone *\/$/;"	m	struct:_GstOMXCore	access:public
seek_backward	examples/egl/testegl.c	/^seek_backward (APP_STATE_T * state)$/;"	f	file:	signature:(APP_STATE_T * state)
seek_forward	examples/egl/testegl.c	/^seek_forward (APP_STATE_T * state)$/;"	f	file:	signature:(APP_STATE_T * state)
set_format	omx/gstomxaudiodec.h	/^  gboolean (*set_format)       (GstOMXAudioDec * self, GstOMXPort * port, GstCaps * caps);$/;"	m	struct:_GstOMXAudioDecClass	access:public
set_format	omx/gstomxaudioenc.h	/^  gboolean (*set_format)       (GstOMXAudioEnc * self, GstOMXPort * port, GstAudioInfo * info);$/;"	m	struct:_GstOMXAudioEncClass	access:public
set_format	omx/gstomxvideodec.h	/^  gboolean (*set_format)       (GstOMXVideoDec * self, GstOMXPort * port, GstVideoCodecState * state);$/;"	m	struct:_GstOMXVideoDecClass	access:public
set_format	omx/gstomxvideoenc.h	/^  gboolean            (*set_format)          (GstOMXVideoEnc * self, GstOMXPort * port, GstVideoCodecState * state);$/;"	m	struct:_GstOMXVideoEncClass	access:public
settings_cookie	omx/gstomx.h	/^  gint settings_cookie;$/;"	m	struct:_GstOMXBuffer	access:public
settings_cookie	omx/gstomx.h	/^  gint settings_cookie;$/;"	m	struct:_GstOMXPort	access:public
setup_tunnel	omx/gstomx.h	/^  OMX_ERRORTYPE (*setup_tunnel) (OMX_HANDLETYPE output, OMX_U32 outport, OMX_HANDLETYPE input, OMX_U32 inport);$/;"	m	struct:_GstOMXCore	access:public
spf	omx/gstomxaacdec.h	/^  gint spf;$/;"	m	struct:_GstOMXAACDec	access:public
spf	omx/gstomxamrdec.h	/^  gint spf;$/;"	m	struct:_GstOMXAMRDec	access:public
spf	omx/gstomxmp3dec.h	/^  gint spf;$/;"	m	struct:_GstOMXMP3Dec	access:public
started	omx/gstomxaudiodec.h	/^  gboolean started;$/;"	m	struct:_GstOMXAudioDec	access:public
started	omx/gstomxaudioenc.h	/^  gboolean started;$/;"	m	struct:_GstOMXAudioEnc	access:public
started	omx/gstomxvideodec.h	/^  gboolean started;$/;"	m	struct:_GstOMXVideoDec	access:public
started	omx/gstomxvideoenc.h	/^  gboolean started;$/;"	m	struct:_GstOMXVideoEnc	access:public
state	examples/egl/testegl.c	/^static APP_STATE_T _state, *state = &_state;$/;"	v	file:
state	omx/gstomx.h	/^      OMX_STATETYPE state;$/;"	m	struct:_GstOMXMessage::__anon9::__anon10	access:public
state	omx/gstomx.h	/^  OMX_STATETYPE state;$/;"	m	struct:_GstOMXComponent	access:public
state_changed_cb	examples/egl/testegl.c	/^state_changed_cb (GstBus * bus, GstMessage * msg, APP_STATE_T * state)$/;"	f	file:	signature:(GstBus * bus, GstMessage * msg, APP_STATE_T * state)
state_set	omx/gstomx.h	/^    } state_set;$/;"	m	union:_GstOMXMessage::__anon9	typeref:struct:_GstOMXMessage::__anon9::__anon10	access:public
surface	examples/egl/testegl.c	/^  EGLSurface surface;$/;"	m	struct:__anon37	file:	access:public
target_bitrate	omx/gstomxvideoenc.h	/^  guint32 target_bitrate;$/;"	m	struct:_GstOMXVideoEnc	access:public
tbmBuffer	omx/gstomx.h	/^    MMVideoBuffer *tbmBuffer[MAX_OUTPUT_BUFFER];$/;"	m	struct:_TBMOutputBuffer	access:public
tbmBuffer	omx/gstomx.h	/^    struct _TBMBuffer tbmBuffer[MAX_INPUT_BUFFER];$/;"	m	struct:_TBMInputBuffer	typeref:struct:_TBMInputBuffer::_TBMBuffer	access:public
terminate_intercom	examples/egl/testegl.c	/^terminate_intercom (APP_STATE_T * state)$/;"	f	file:	signature:(APP_STATE_T * state)
tex	examples/egl/testegl.c	/^  GLuint tex;$/;"	m	struct:__anon37	file:	access:public
texCoords	examples/egl/cube_texture_and_coords.h	/^static const GLfloat texCoords[6 * 4 * 2] = {$/;"	v
tool_run	common/gst-autogen.sh	/^tool_run ()$/;"	f
toplevel_check	common/gst-autogen.sh	/^toplevel_check ()$/;"	f
transform	omx/gstomxaudiosink.c	/^transform (guint in_chan, guint width, gpointer psrc, gpointer pdst, guint len)$/;"	f	file:	signature:(guint in_chan, guint width, gpointer psrc, gpointer pdst, guint len)
transform_3_4	omx/gstomxaudiosink.c	59;"	d	file:
transform_5_8	omx/gstomxaudiosink.c	75;"	d	file:
transform_6_8	omx/gstomxaudiosink.c	95;"	d	file:
transform_7_8	omx/gstomxaudiosink.c	115;"	d	file:
tunneled	omx/gstomx.h	/^  gboolean tunneled;$/;"	m	struct:_GstOMXPort	access:public
type	omx/gstomx.h	/^  GstOMXMessageType type;$/;"	m	struct:_GstOMXMessage	access:public
type	omx/gstomx.h	/^  GstOmxComponentType type;$/;"	m	struct:_GstOMXClassData	access:public
type	omx/gstomxvideo.h	/^  OMX_COLOR_FORMATTYPE type;$/;"	m	struct:__anon22	access:public
types	omx/gstomx.c	/^static const GGetTypeFunction types[] = {$/;"	v	file:
tz_enable	omx/gstomx.h	/^    int tz_enable;                      \/* tzmem buffer *\/$/;"	m	struct:__anon2	access:public
u_modelviewmatrix	examples/egl/testegl.c	/^  GLint u_modelviewmatrix;$/;"	m	struct:__anon37	file:	access:public
u_projectionmatrix	examples/egl/testegl.c	/^  GLint u_projectionmatrix;$/;"	m	struct:__anon37	file:	access:public
u_rotx	examples/egl/testegl.c	/^  GLint u_rotx;$/;"	m	struct:__anon37	file:	access:public
u_roty	examples/egl/testegl.c	/^  GLint u_roty;$/;"	m	struct:__anon37	file:	access:public
u_rotz	examples/egl/testegl.c	/^  GLint u_rotz;$/;"	m	struct:__anon37	file:	access:public
update_image	examples/egl/testegl.c	/^update_image (APP_STATE_T * state, GstBuffer * buffer)$/;"	f	file:	signature:(APP_STATE_T * state, GstBuffer * buffer)
update_model	examples/egl/testegl.c	/^static void update_model (APP_STATE_T * state);$/;"	p	file:	signature:(APP_STATE_T * state)
update_model	examples/egl/testegl.c	/^update_model (APP_STATE_T * state)$/;"	f	file:	signature:(APP_STATE_T * state)
used	omx/gstomx.h	/^  gboolean used;$/;"	m	struct:_GstOMXBuffer	access:public
user_count	omx/gstomx.h	/^  gint user_count; \/* LOCK *\/$/;"	m	struct:_GstOMXCore	access:public
uv_size	omx/gstomx.h	/^    int uv_size;                        \/* UV plane size in case of ST12 *\/$/;"	m	struct:__anon2	access:public
version_check	common/gst-autogen.sh	/^version_check ()$/;"	f
version_compare	common/gst-autogen.sh	/^version_compare ()$/;"	f
version_get	common/gst-autogen.sh	/^version_get ()$/;"	f
video	omx/openmax/OMX_Component.h	/^        OMX_VIDEO_PORTDEFINITIONTYPE video;$/;"	m	union:OMX_PARAM_PORTDEFINITIONTYPE::__anon33	access:public
video_info	omx/gstomxbufferpool.h	/^  GstVideoInfo video_info;$/;"	m	struct:_GstOMXBufferPool	access:public
volume	omx/gstomxaudiosink.h	/^  gdouble volume;$/;"	m	struct:_GstOMXAudioSink	access:public
vshader	examples/egl/testegl.c	/^  GLint vshader;$/;"	m	struct:__anon37	file:	access:public
vsink	examples/egl/testegl.c	/^  GstElement *vsink;$/;"	m	struct:__anon37	file:	access:public
w	omx/gstomx.h	/^    int      w[SCMN_IMGB_MAX_PLANE];    \/* width of each image plane *\/$/;"	m	struct:__anon2	access:public
width	omx/gstomxaudiosink.h	/^  guint width;$/;"	m	struct:_GstOMXAudioSink	access:public
x	omx/gstomx.h	/^    int      x;    \/* left postion, if needs *\/$/;"	m	struct:__anon2	access:public
xColorMatrix	omx/openmax/OMX_IVCommon.h	/^    OMX_S32 xColorMatrix[3][3]; \/**< Stored in signed Q16 format *\/$/;"	m	struct:OMX_CONFIG_COLORCONVERSIONTYPE	access:public
xColorOffset	omx/openmax/OMX_IVCommon.h	/^    OMX_S32 xColorOffset[4];    \/**< Stored in signed Q16 format *\/$/;"	m	struct:OMX_CONFIG_COLORCONVERSIONTYPE	access:public
xEVCompensation	omx/openmax/OMX_IVCommon.h	/^    OMX_S32 xEVCompensation;      \/**< Fixed point value stored as Q16 *\/$/;"	m	struct:OMX_CONFIG_EXPOSUREVALUETYPE	access:public
xEncodeFramerate	omx/openmax/OMX_Video.h	/^    OMX_U32 xEncodeFramerate; \/* Q16 format *\/$/;"	m	struct:OMX_CONFIG_FRAMERATETYPE	access:public
xFramerate	omx/openmax/OMX_Video.h	/^    OMX_U32 xFramerate;$/;"	m	struct:OMX_VIDEO_PARAM_PORTFORMATTYPE	access:public
xFramerate	omx/openmax/OMX_Video.h	/^    OMX_U32 xFramerate;$/;"	m	struct:OMX_VIDEO_PORTDEFINITIONTYPE	access:public
xHeight	omx/openmax/OMX_IVCommon.h	/^    OMX_S32 xHeight;          \/**< Fixed point value stored as Q16 *\/$/;"	m	struct:OMX_CONFIG_SCALEFACTORTYPE	access:public
xScale	omx/openmax/OMX_Other.h	/^    OMX_S32 xScale;                 \/**< Current media time scale in Q16 format. *\/$/;"	m	struct:OMX_TIME_MEDIATIMETYPE	access:public
xScale	omx/openmax/OMX_Other.h	/^    OMX_S32 xScale;                 \/**< This is a value in Q16 format which is used for$/;"	m	struct:OMX_TIME_CONFIG_SCALETYPE	access:public
xWidth	omx/openmax/OMX_IVCommon.h	/^    OMX_S32 xWidth;           \/**< Fixed point value stored as Q16 *\/$/;"	m	struct:OMX_CONFIG_SCALEFACTORTYPE	access:public
y	omx/gstomx.h	/^    int      y;    \/* top position, if needs *\/$/;"	m	struct:__anon2	access:public
y_size	omx/gstomx.h	/^    int y_size;                         \/* Y plane size in case of ST12 *\/$/;"	m	struct:__anon2	access:public
